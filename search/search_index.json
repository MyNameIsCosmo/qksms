{
    "docs": [
        {
            "location": "/",
            "text": "Disclaimer:\n\n\nThe current condition of the QKSms v2.x codebase is quite poor\n\n(I guess that's what happens when you start writing an app when you don't even know how to code yet)\n.\nI'm in the process of rebuilding the app from scratch using Kotlin - pull requests will not be accepted\nduring this time.\nFeel free to follow the progress here - \nhttps://github.com/moezbhatti/qksms/tree/qksms3\n\n\n\n\nQKSMS\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQKSMS is an open source replacement to the \nstock messaging app\n on Android. It is currently available on the Google Play Store.\n\n\n\n\n\n\n\n\n\n\n\n\nContact\n\u00b6\n\n\nQKSMS is developed and maintained by \nMoez Bhatti\n. Feel free to reach out to \nmoez@qklabs.com\n\n\nThank you\n\u00b6\n\n\nSpecial shoutout to Jake Klinker (\n@klinker41\n) for his work on \nandroid-smsmms\n, which has been an unspeakably large help in implementing MMS in QKSMS.\n\n\nLicense\n\u00b6\n\n\nQKSMS is released under the \nThe GNU General Public License v3.0 (GPLv3)\n, which can be found in the \nLICENSE\n file in the root of this project.",
            "title": "Home"
        },
        {
            "location": "/#qksms",
            "text": "QKSMS is an open source replacement to the  stock messaging app  on Android. It is currently available on the Google Play Store.",
            "title": "QKSMS"
        },
        {
            "location": "/#contact",
            "text": "QKSMS is developed and maintained by  Moez Bhatti . Feel free to reach out to  moez@qklabs.com",
            "title": "Contact"
        },
        {
            "location": "/#thank-you",
            "text": "Special shoutout to Jake Klinker ( @klinker41 ) for his work on  android-smsmms , which has been an unspeakably large help in implementing MMS in QKSMS.",
            "title": "Thank you"
        },
        {
            "location": "/#license",
            "text": "QKSMS is released under the  The GNU General Public License v3.0 (GPLv3) , which can be found in the  LICENSE  file in the root of this project.",
            "title": "License"
        },
        {
            "location": "/contributing/",
            "text": "Contributing to QKSMS\n\u00b6\n\n\nWe highly encourage contributions to QKSMS; we want to make it as easy and streamlined as possible. If you have any suggestions on how we can improve our workflow, please feel free to contact me.\n\n\nQuite a bit of old code still needs to be cleaned up and refactored, so keep that in mind as you're digging through the source. If you find something that's just really crappy, let me know and I'll put it higher up on my list of stuff to clean up. I'll be focusing on improving code quality of existing code over the next couple weeks.\n\n\nCollaboration\n\u00b6\n\n\nWe use GitHub issues to keep track of bugs and feature requests, but we communicate using \nSlack\n. To join the Slack group, send an email to \nteam@qklabs.com\n with the subject \nQK Labs Slack Invite\n (no need to enter a body, we'll send an invite to your email address). If you plan on contributing at some point, we highly recommend joining the slack group because it gives you a direct way to communicate with the rest of the contributors.\n\n\nFunds\n\u00b6\n\n\nIf you'd like to donate to help support the project, you can donate via \nPayPal here\n.\n\n\nTranslations\n\u00b6\n\n\nPlease do not perform translations directly on the source files. Pull requests for translations will not be accepted. If you would like to do translations for QKSMS, join the translation project on Crowdin: \nhttps://crowdin.com/project/qksms\n.\n\n\nUnfortunately I don't always have time to check notifications on Crowdin. If you'd like something checked or approved, send me a message on Slack and then I'll take a look\n\n\nDevelopment\n\u00b6\n\n\nWe encourage you to make pull requests. Whenever you make one, we'll review the code and test it to make sure that it fits the code style guidelines, and achieves what the pull request intends. We'll discuss any problems or potential improvements, and we'll merge it when we're both (or any number of willing participants) happy with the code.\n\n\nIf you're new, we recommend that you look through the issues and try to fix some of the more simple sounding bugs to familiarize yourself with the codebase.\n\n\nIf you'd like to work on a new feature, please create an issue so we can discuss the idea together before implementation begins.\n\n\nTo learn about pull requests, please refer to the following guide: \nhttps://help.github.com/articles/using-pull-requests/\n.\n\n\nCode style\n\u00b6\n\n\nWe follow the code style guidelines set by Google for contributors to AOSP: \nhttps://source.android.com/source/code-style.html\n\n\nThe current codebase is far from being 100% at this standard, but updating existing code to follow the unified guidelines can be a good way to introduce yourself to the codebase and start getting familiar with it.\n\n\nAny new code written should follow these guidelines.\n\n\nBug Reports / Feature Requests\n\u00b6\n\n\nWe track issues and feature requests using GitHub issues. You can view existing issues and create your own here: \nhttps://github.com/moezbhatti/qksms/issues\n\n\nHow to help\n\u00b6\n\n\n\n\nReport bugs\n\n\nHelp reproduce bugs\n\n\nMake enhancement requests (it would be great if QKSMS...)\n\n\n\n\nReporting bugs\n\u00b6\n\n\nA great bug report contains a description of the problem and steps to reproduce the problem. We need to know what we're looking for and where to look for it. If the QKSMS team can't reproduce a bug, we will work with testers to fix the problem.\n\n\nBugs are given the red \nbug\n label. Bugs also may be given extra orange labels:\n\n\nneeds-info\n: We need a better description of the problem.\n\nneeds-repro\n: We need someone who can reproduce the issue consistently.\n\nneeds-review\n: We need someone to verify that the bug has been squashed.\n\n\nExample bug report submission\n\u00b6\n\n\n\n\nThis is a real bug as of the time of writing. Try reproducing it!\n\n\n\n\n### DESCRIPTION\nConversations aren't marked as read when they are opened from a notification.\n\n### STEPS\n1. Long press on a conversation and press \"Mark as unread\" to reveal a notification.\n2. Press the home button to put QKSMS in the background.\n3. Pull down on the notification to open the notification drawer.\n4. Tap on the body of the notification (not the buttons).\n5. Tap on the back button to reveal the conversation list.\n\n### EXPECTED\nThe conversation is marked as read.\n\n### OBSERVATIONS\nThe conversation isn't marked as read.\n\n\n\n\nHelping reproduce bugs\n\u00b6\n\n\nReproducing a bug is important, since if we can't reproduce an issue then it's hard to figure out what's going wrong, and we can't know that we've fixed it.\n\n\nYou can see bugs which need \"repro steps\" \nhere\n. If you see any bugs that you know how to reproduce (see above for example repro steps), then make a comment with the steps and we'll track the bug down!\n\n\nMaking enhancement requests\n\u00b6\n\n\nThere are no rules for enhancement requests. Your ideas are all awesome. Although we may not implement every suggestion, we love brainstorming with you and hearing your feedback.\n\n\nTo make an enhancement request, add an \"issue\".",
            "title": "Contributing"
        },
        {
            "location": "/contributing/#contributing-to-qksms",
            "text": "We highly encourage contributions to QKSMS; we want to make it as easy and streamlined as possible. If you have any suggestions on how we can improve our workflow, please feel free to contact me.  Quite a bit of old code still needs to be cleaned up and refactored, so keep that in mind as you're digging through the source. If you find something that's just really crappy, let me know and I'll put it higher up on my list of stuff to clean up. I'll be focusing on improving code quality of existing code over the next couple weeks.",
            "title": "Contributing to QKSMS"
        },
        {
            "location": "/contributing/#collaboration",
            "text": "We use GitHub issues to keep track of bugs and feature requests, but we communicate using  Slack . To join the Slack group, send an email to  team@qklabs.com  with the subject  QK Labs Slack Invite  (no need to enter a body, we'll send an invite to your email address). If you plan on contributing at some point, we highly recommend joining the slack group because it gives you a direct way to communicate with the rest of the contributors.",
            "title": "Collaboration"
        },
        {
            "location": "/contributing/#funds",
            "text": "If you'd like to donate to help support the project, you can donate via  PayPal here .",
            "title": "Funds"
        },
        {
            "location": "/contributing/#translations",
            "text": "Please do not perform translations directly on the source files. Pull requests for translations will not be accepted. If you would like to do translations for QKSMS, join the translation project on Crowdin:  https://crowdin.com/project/qksms .  Unfortunately I don't always have time to check notifications on Crowdin. If you'd like something checked or approved, send me a message on Slack and then I'll take a look",
            "title": "Translations"
        },
        {
            "location": "/contributing/#development",
            "text": "We encourage you to make pull requests. Whenever you make one, we'll review the code and test it to make sure that it fits the code style guidelines, and achieves what the pull request intends. We'll discuss any problems or potential improvements, and we'll merge it when we're both (or any number of willing participants) happy with the code.  If you're new, we recommend that you look through the issues and try to fix some of the more simple sounding bugs to familiarize yourself with the codebase.  If you'd like to work on a new feature, please create an issue so we can discuss the idea together before implementation begins.  To learn about pull requests, please refer to the following guide:  https://help.github.com/articles/using-pull-requests/ .",
            "title": "Development"
        },
        {
            "location": "/contributing/#code-style",
            "text": "We follow the code style guidelines set by Google for contributors to AOSP:  https://source.android.com/source/code-style.html  The current codebase is far from being 100% at this standard, but updating existing code to follow the unified guidelines can be a good way to introduce yourself to the codebase and start getting familiar with it.  Any new code written should follow these guidelines.",
            "title": "Code style"
        },
        {
            "location": "/contributing/#bug-reports-feature-requests",
            "text": "We track issues and feature requests using GitHub issues. You can view existing issues and create your own here:  https://github.com/moezbhatti/qksms/issues",
            "title": "Bug Reports / Feature Requests"
        },
        {
            "location": "/contributing/#how-to-help",
            "text": "Report bugs  Help reproduce bugs  Make enhancement requests (it would be great if QKSMS...)",
            "title": "How to help"
        },
        {
            "location": "/contributing/#reporting-bugs",
            "text": "A great bug report contains a description of the problem and steps to reproduce the problem. We need to know what we're looking for and where to look for it. If the QKSMS team can't reproduce a bug, we will work with testers to fix the problem.  Bugs are given the red  bug  label. Bugs also may be given extra orange labels:  needs-info : We need a better description of the problem. needs-repro : We need someone who can reproduce the issue consistently. needs-review : We need someone to verify that the bug has been squashed.",
            "title": "Reporting bugs"
        },
        {
            "location": "/contributing/#example-bug-report-submission",
            "text": "This is a real bug as of the time of writing. Try reproducing it!   ### DESCRIPTION\nConversations aren't marked as read when they are opened from a notification.\n\n### STEPS\n1. Long press on a conversation and press \"Mark as unread\" to reveal a notification.\n2. Press the home button to put QKSMS in the background.\n3. Pull down on the notification to open the notification drawer.\n4. Tap on the body of the notification (not the buttons).\n5. Tap on the back button to reveal the conversation list.\n\n### EXPECTED\nThe conversation is marked as read.\n\n### OBSERVATIONS\nThe conversation isn't marked as read.",
            "title": "Example bug report submission"
        },
        {
            "location": "/contributing/#helping-reproduce-bugs",
            "text": "Reproducing a bug is important, since if we can't reproduce an issue then it's hard to figure out what's going wrong, and we can't know that we've fixed it.  You can see bugs which need \"repro steps\"  here . If you see any bugs that you know how to reproduce (see above for example repro steps), then make a comment with the steps and we'll track the bug down!",
            "title": "Helping reproduce bugs"
        },
        {
            "location": "/contributing/#making-enhancement-requests",
            "text": "There are no rules for enhancement requests. Your ideas are all awesome. Although we may not implement every suggestion, we love brainstorming with you and hearing your feedback.  To make an enhancement request, add an \"issue\".",
            "title": "Making enhancement requests"
        },
        {
            "location": "/ci/",
            "text": "Continuous Integration\n\u00b6\n\n\nTravis\n\u00b6\n\n\nhttps://docs.travis-ci.com/\n\n\nCodacy\n\u00b6\n\n\nhttps://about.sonarcloud.io/get-started/",
            "title": "Continuous Integration"
        },
        {
            "location": "/ci/#continuous-integration",
            "text": "",
            "title": "Continuous Integration"
        },
        {
            "location": "/ci/#travis",
            "text": "https://docs.travis-ci.com/",
            "title": "Travis"
        },
        {
            "location": "/ci/#codacy",
            "text": "https://about.sonarcloud.io/get-started/",
            "title": "Codacy"
        },
        {
            "location": "/qksms/",
            "text": "qksms\n\n\nPackages\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncommon\n\n\n\n\n\n\n\n\ncommon.di\n\n\n\n\n\n\n\n\ncommon.util\n\n\n\n\n\n\n\n\ncommon.util.extensions\n\n\n\n\n\n\n\n\ncommon.util.filter\n\n\n\n\n\n\n\n\ndata.mapper\n\n\n\n\n\n\n\n\ndata.model\n\n\n\n\n\n\n\n\ndata.repository\n\n\n\n\n\n\n\n\ninteractor\n\n\n\n\n\n\n\n\npresentation.common\n\n\n\n\n\n\n\n\npresentation.common.base\n\n\n\n\n\n\n\n\npresentation.common.widget\n\n\n\n\n\n\n\n\npresentation.feature.compose\n\n\n\n\n\n\n\n\npresentation.feature.conversations\n\n\n\n\n\n\n\n\npresentation.feature.main\n\n\n\n\n\n\n\n\npresentation.feature.settings\n\n\n\n\n\n\n\n\npresentation.feature.setup\n\n\n\n\n\n\n\n\npresentation.receiver\n\n\n\n\n\n\n\n\npresentation.service\n\n\n\n\n\n\n\n\n\n\nIndex\n\u00b6\n\n\nAll Types",
            "title": "qksms"
        },
        {
            "location": "/qksms/#packages",
            "text": "Name  Summary      common     common.di     common.util     common.util.extensions     common.util.filter     data.mapper     data.model     data.repository     interactor     presentation.common     presentation.common.base     presentation.common.widget     presentation.feature.compose     presentation.feature.conversations     presentation.feature.main     presentation.feature.settings     presentation.feature.setup     presentation.receiver     presentation.service",
            "title": "Packages"
        },
        {
            "location": "/qksms/#index",
            "text": "All Types",
            "title": "Index"
        },
        {
            "location": "/qksms/presentation.common/-navigator/add-contact/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \naddContact\n\n\naddContact\n\u00b6\n\n\nfun addContact(address:\nString\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/add-contact.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/add-contact/#addcontact",
            "text": "fun addContact(address: String ): Unit",
            "title": "addContact"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-compose/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowCompose\n\n\nshowCompose\n\u00b6\n\n\nfun showCompose(body:\nString\n? = null):\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-compose.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-compose/#showcompose",
            "text": "fun showCompose(body: String ? = null): Unit",
            "title": "showCompose"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-notification-settings/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowNotificationSettings\n\n\nshowNotificationSettings\n\u00b6\n\n\nfun showNotificationSettings():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-notification-settings.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-notification-settings/#shownotificationsettings",
            "text": "fun showNotificationSettings(): Unit",
            "title": "showNotificationSettings"
        },
        {
            "location": "/qksms/presentation.common/-navigator/context/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/presentation.common/-navigator/context.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.common/-navigator/make-phone-call/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nmakePhoneCall\n\n\nmakePhoneCall\n\u00b6\n\n\nfun makePhoneCall(address:\nString\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/make-phone-call.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/make-phone-call/#makephonecall",
            "text": "fun makePhoneCall(address: String ): Unit",
            "title": "makePhoneCall"
        },
        {
            "location": "/qksms/presentation.common/-navigator/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n\n\nNavigator\n\u00b6\n\n\n@Singleton class Navigator\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nViewModelFactory\n\n\nclass ViewModelFactory : Factory\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nNavigator(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\naddContact\n\n\nfun addContact(address:\nString\n):\nUnit\n\n\n\n\n\n\nmakePhoneCall\n\n\nfun makePhoneCall(address:\nString\n):\nUnit\n\n\n\n\n\n\nshowCompose\n\n\nfun showCompose(body:\nString\n? = null):\nUnit\n\n\n\n\n\n\nshowConversation\n\n\nfun showConversation(threadId:\nLong\n):\nUnit\n\n\n\n\n\n\nshowDefaultSmsDialog\n\n\nfun showDefaultSmsDialog():\nUnit\n\n\n\n\n\n\nshowNotificationSettings\n\n\nfun showNotificationSettings():\nUnit\n\n\n\n\n\n\nshowSettings\n\n\nfun showSettings():\nUnit\n\n\n\n\n\n\nshowSetupActivity\n\n\nfun showSetupActivity():\nUnit\n\n\n\n\n\n\nshowSupport\n\n\nfun showSupport():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/index.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/#navigator",
            "text": "@Singleton class Navigator",
            "title": "Navigator"
        },
        {
            "location": "/qksms/presentation.common/-navigator/#types",
            "text": "Name  Summary      ViewModelFactory  class ViewModelFactory : Factory",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.common/-navigator/#constructors",
            "text": "Name  Summary      <init>  Navigator(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common/-navigator/#properties",
            "text": "Name  Summary      context  val context: Context",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common/-navigator/#functions",
            "text": "Name  Summary      addContact  fun addContact(address: String ): Unit    makePhoneCall  fun makePhoneCall(address: String ): Unit    showCompose  fun showCompose(body: String ? = null): Unit    showConversation  fun showConversation(threadId: Long ): Unit    showDefaultSmsDialog  fun showDefaultSmsDialog(): Unit    showNotificationSettings  fun showNotificationSettings(): Unit    showSettings  fun showSettings(): Unit    showSetupActivity  fun showSetupActivity(): Unit    showSupport  fun showSupport(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nViewModelFactory\n\n\nViewModelFactory\n\u00b6\n\n\nclass ViewModelFactory : Factory\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nViewModelFactory(intent:\nIntent\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncreate\n\n\nfun <T : ViewModel?> create(modelClass:\nClass\n<T>): T",
            "title": "&nbsp;qksms/presentation.common/-navigator/-view-model-factory/index.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/#viewmodelfactory",
            "text": "class ViewModelFactory : Factory",
            "title": "ViewModelFactory"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/#constructors",
            "text": "Name  Summary      <init>  ViewModelFactory(intent: Intent )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/#functions",
            "text": "Name  Summary      create  fun <T : ViewModel?> create(modelClass: Class <T>): T",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/create/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nViewModelFactory\n / \ncreate\n\n\ncreate\n\u00b6\n\n\nfun <T : ViewModel?> create(modelClass:\nClass\n<T>): T",
            "title": "&nbsp;qksms/presentation.common/-navigator/-view-model-factory/create.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/create/#create",
            "text": "fun <T : ViewModel?> create(modelClass: Class <T>): T",
            "title": "create"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/-init-/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nViewModelFactory\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nViewModelFactory(intent:\nIntent\n)",
            "title": "&nbsp;qksms/presentation.common/-navigator/-view-model-factory/-init-.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-view-model-factory/-init-/#init",
            "text": "ViewModelFactory(intent: Intent )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-init-/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nNavigator(context:\nContext\n)",
            "title": "&nbsp;qksms/presentation.common/-navigator/-init-.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/-init-/#init",
            "text": "Navigator(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-settings/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowSettings\n\n\nshowSettings\n\u00b6\n\n\nfun showSettings():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-settings.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-settings/#showsettings",
            "text": "fun showSettings(): Unit",
            "title": "showSettings"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-default-sms-dialog/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowDefaultSmsDialog\n\n\nshowDefaultSmsDialog\n\u00b6\n\n\nfun showDefaultSmsDialog():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-default-sms-dialog.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-default-sms-dialog/#showdefaultsmsdialog",
            "text": "fun showDefaultSmsDialog(): Unit",
            "title": "showDefaultSmsDialog"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-support/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowSupport\n\n\nshowSupport\n\u00b6\n\n\nfun showSupport():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-support.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-support/#showsupport",
            "text": "fun showSupport(): Unit",
            "title": "showSupport"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-setup-activity/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowSetupActivity\n\n\nshowSetupActivity\n\u00b6\n\n\nfun showSetupActivity():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-setup-activity.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-setup-activity/#showsetupactivity",
            "text": "fun showSetupActivity(): Unit",
            "title": "showSetupActivity"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-conversation/",
            "text": "qksms\n / \npresentation.common\n / \nNavigator\n / \nshowConversation\n\n\nshowConversation\n\u00b6\n\n\nfun showConversation(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common/-navigator/show-conversation.md"
        },
        {
            "location": "/qksms/presentation.common/-navigator/show-conversation/#showconversation",
            "text": "fun showConversation(threadId: Long ): Unit",
            "title": "showConversation"
        },
        {
            "location": "/qksms/presentation.common/",
            "text": "qksms\n / \npresentation.common\n\n\nPackage presentation.common\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nMenuItemAdapter\n\n\nclass MenuItemAdapter :\nQkAdapter\n<\nMenuItem\n>\n\n\n\n\n\n\nNavigator\n\n\nclass Navigator",
            "title": "&nbsp;qksms/presentation.common/index.md"
        },
        {
            "location": "/qksms/presentation.common/#package-presentationcommon",
            "text": "",
            "title": "Package presentation.common"
        },
        {
            "location": "/qksms/presentation.common/#types",
            "text": "Name  Summary      MenuItemAdapter  class MenuItemAdapter : QkAdapter < MenuItem >    Navigator  class Navigator",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/",
            "text": "qksms\n / \npresentation.common\n / \nMenuItemAdapter\n\n\nMenuItemAdapter\n\u00b6\n\n\nclass MenuItemAdapter :\nQkAdapter\n<\nMenuItem\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMenuItemAdapter(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmenuItemClicks\n\n\nval menuItemClicks: Subject<\nInt\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.common/-menu-item-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#menuitemadapter",
            "text": "class MenuItemAdapter : QkAdapter < MenuItem >",
            "title": "MenuItemAdapter"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#constructors",
            "text": "Name  Summary      <init>  MenuItemAdapter(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#properties",
            "text": "Name  Summary      menuItemClicks  val menuItemClicks: Subject< Int >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#functions",
            "text": "Name  Summary      onBindViewHolder  fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/-init-/",
            "text": "qksms\n / \npresentation.common\n / \nMenuItemAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMenuItemAdapter(context:\nContext\n)",
            "title": "&nbsp;qksms/presentation.common/-menu-item-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/-init-/#init",
            "text": "MenuItemAdapter(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.common\n / \nMenuItemAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common/-menu-item-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/menu-item-clicks/",
            "text": "qksms\n / \npresentation.common\n / \nMenuItemAdapter\n / \nmenuItemClicks\n\n\nmenuItemClicks\n\u00b6\n\n\nval menuItemClicks: Subject<\nInt\n>",
            "title": "&nbsp;qksms/presentation.common/-menu-item-adapter/menu-item-clicks.md"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/menu-item-clicks/#menuitemclicks",
            "text": "val menuItemClicks: Subject< Int >",
            "title": "menuItemClicks"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.common\n / \nMenuItemAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.common/-menu-item-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.common/-menu-item-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/context/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \ncontext\n\n\ncontext\n\u00b6\n\n\n@Inject lateinit var context:\nContext",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/context.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/context/#context",
            "text": "@Inject lateinit var context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n\n\nSettingsViewModel\n\u00b6\n\n\nclass SettingsViewModel :\nQkViewModel\n<\nSettingsView\n,\nSettingsState\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSettingsViewModel()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nlateinit var context:\nContext\n\n\n\n\n\n\nfullSync\n\n\nlateinit var fullSync:\nFullSync\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\nprefs\n\n\nlateinit var prefs:\nPreferences\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndisposables\n\n\nval disposables: CompositeDisposable\n\n\n\n\n\n\nstate\n\n\nval state: BehaviorSubject<State>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbindView\n\n\nfun bindView(view:\nSettingsView\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCleared\n\n\nopen fun onCleared():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#settingsviewmodel",
            "text": "class SettingsViewModel : QkViewModel < SettingsView , SettingsState >",
            "title": "SettingsViewModel"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#constructors",
            "text": "Name  Summary      <init>  SettingsViewModel()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#properties",
            "text": "Name  Summary      context  lateinit var context: Context    fullSync  lateinit var fullSync: FullSync    navigator  lateinit var navigator: Navigator    prefs  lateinit var prefs: Preferences",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#inherited-properties",
            "text": "Name  Summary      disposables  val disposables: CompositeDisposable    state  val state: BehaviorSubject<State>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#functions",
            "text": "Name  Summary      bindView  fun bindView(view: SettingsView ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/#inherited-functions",
            "text": "Name  Summary      onCleared  open fun onCleared(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/navigator/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/-init-/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSettingsViewModel()",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/-init-/#init",
            "text": "SettingsViewModel()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/full-sync/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \nfullSync\n\n\nfullSync\n\u00b6\n\n\n@Inject lateinit var fullSync:\nFullSync",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/full-sync.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/full-sync/#fullsync",
            "text": "@Inject lateinit var fullSync: FullSync",
            "title": "fullSync"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/bind-view/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \nbindView\n\n\nbindView\n\u00b6\n\n\nfun bindView(view:\nSettingsView\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/bind-view.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/bind-view/#bindview",
            "text": "fun bindView(view: SettingsView ): Unit",
            "title": "bindView"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/prefs/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsViewModel\n / \nprefs\n\n\nprefs\n\u00b6\n\n\n@Inject lateinit var prefs:\nPreferences",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view-model/prefs.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view-model/prefs/#prefs",
            "text": "@Inject lateinit var prefs: Preferences",
            "title": "prefs"
        },
        {
            "location": "/qksms/presentation.feature.settings/",
            "text": "qksms\n / \npresentation.feature.settings\n\n\nPackage presentation.feature.settings\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nSettingsActivity\n\n\nclass SettingsActivity :\nQkActivity\n<\nSettingsViewModel\n>,\nSettingsView\n\n\n\n\n\n\nSettingsState\n\n\ndata class SettingsState\n\n\n\n\n\n\nSettingsView\n\n\ninterface SettingsView :\nQkView\n<\nSettingsState\n>\n\n\n\n\n\n\nSettingsViewModel\n\n\nclass SettingsViewModel :\nQkViewModel\n<\nSettingsView\n,\nSettingsState\n>\n\n\n\n\n\n\nThemeAdapter\n\n\nclass ThemeAdapter :\nQkAdapter\n<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.settings/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/#package-presentationfeaturesettings",
            "text": "",
            "title": "Package presentation.feature.settings"
        },
        {
            "location": "/qksms/presentation.feature.settings/#types",
            "text": "Name  Summary      SettingsActivity  class SettingsActivity : QkActivity < SettingsViewModel >, SettingsView    SettingsState  data class SettingsState    SettingsView  interface SettingsView : QkView < SettingsState >    SettingsViewModel  class SettingsViewModel : QkViewModel < SettingsView , SettingsState >    ThemeAdapter  class ThemeAdapter : QkAdapter < Int >",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/dark-mode-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \ndarkModeEnabled\n\n\ndarkModeEnabled\n\u00b6\n\n\nval darkModeEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/dark-mode-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/dark-mode-enabled/#darkmodeenabled",
            "text": "val darkModeEnabled: Boolean",
            "title": "darkModeEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/is-default-sms-app/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nisDefaultSmsApp\n\n\nisDefaultSmsApp\n\u00b6\n\n\nval isDefaultSmsApp:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/is-default-sms-app.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/is-default-sms-app/#isdefaultsmsapp",
            "text": "val isDefaultSmsApp: Boolean",
            "title": "isDefaultSmsApp"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/notifications-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nnotificationsEnabled\n\n\nnotificationsEnabled\n\u00b6\n\n\nval notificationsEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/notifications-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/notifications-enabled/#notificationsenabled",
            "text": "val notificationsEnabled: Boolean",
            "title": "notificationsEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/selecting-theme/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nselectingTheme\n\n\nselectingTheme\n\u00b6\n\n\nval selectingTheme:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/selecting-theme.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/selecting-theme/#selectingtheme",
            "text": "val selectingTheme: Boolean",
            "title": "selectingTheme"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/max-mms-size/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nmaxMmsSize\n\n\nmaxMmsSize\n\u00b6\n\n\nval maxMmsSize:\nString",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/max-mms-size.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/max-mms-size/#maxmmssize",
            "text": "val maxMmsSize: String",
            "title": "maxMmsSize"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/syncing/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nsyncing\n\n\nsyncing\n\u00b6\n\n\nval syncing:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/syncing.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/syncing/#syncing",
            "text": "val syncing: Boolean",
            "title": "syncing"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n\n\nSettingsState\n\u00b6\n\n\ndata class SettingsState\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSettingsState(selectingTheme:\nBoolean\n= false, syncing:\nBoolean\n= false, isDefaultSmsApp:\nBoolean\n= false, darkModeEnabled:\nBoolean\n= false, autoEmojiEnabled:\nBoolean\n= true, notificationsEnabled:\nBoolean\n= true, vibrationEnabled:\nBoolean\n= true, deliveryEnabled:\nBoolean\n= false, splitSmsEnabled:\nBoolean\n= false, stripUnicodeEnabled:\nBoolean\n= false, mmsEnabled:\nBoolean\n= true, maxMmsSize:\nString\n= \"\")\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nautoEmojiEnabled\n\n\nval autoEmojiEnabled:\nBoolean\n\n\n\n\n\n\ndarkModeEnabled\n\n\nval darkModeEnabled:\nBoolean\n\n\n\n\n\n\ndeliveryEnabled\n\n\nval deliveryEnabled:\nBoolean\n\n\n\n\n\n\nisDefaultSmsApp\n\n\nval isDefaultSmsApp:\nBoolean\n\n\n\n\n\n\nmaxMmsSize\n\n\nval maxMmsSize:\nString\n\n\n\n\n\n\nmmsEnabled\n\n\nval mmsEnabled:\nBoolean\n\n\n\n\n\n\nnotificationsEnabled\n\n\nval notificationsEnabled:\nBoolean\n\n\n\n\n\n\nselectingTheme\n\n\nval selectingTheme:\nBoolean\n\n\n\n\n\n\nsplitSmsEnabled\n\n\nval splitSmsEnabled:\nBoolean\n\n\n\n\n\n\nstripUnicodeEnabled\n\n\nval stripUnicodeEnabled:\nBoolean\n\n\n\n\n\n\nsyncing\n\n\nval syncing:\nBoolean\n\n\n\n\n\n\nvibrationEnabled\n\n\nval vibrationEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/#settingsstate",
            "text": "data class SettingsState",
            "title": "SettingsState"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/#constructors",
            "text": "Name  Summary      <init>  SettingsState(selectingTheme: Boolean = false, syncing: Boolean = false, isDefaultSmsApp: Boolean = false, darkModeEnabled: Boolean = false, autoEmojiEnabled: Boolean = true, notificationsEnabled: Boolean = true, vibrationEnabled: Boolean = true, deliveryEnabled: Boolean = false, splitSmsEnabled: Boolean = false, stripUnicodeEnabled: Boolean = false, mmsEnabled: Boolean = true, maxMmsSize: String = \"\")",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/#properties",
            "text": "Name  Summary      autoEmojiEnabled  val autoEmojiEnabled: Boolean    darkModeEnabled  val darkModeEnabled: Boolean    deliveryEnabled  val deliveryEnabled: Boolean    isDefaultSmsApp  val isDefaultSmsApp: Boolean    maxMmsSize  val maxMmsSize: String    mmsEnabled  val mmsEnabled: Boolean    notificationsEnabled  val notificationsEnabled: Boolean    selectingTheme  val selectingTheme: Boolean    splitSmsEnabled  val splitSmsEnabled: Boolean    stripUnicodeEnabled  val stripUnicodeEnabled: Boolean    syncing  val syncing: Boolean    vibrationEnabled  val vibrationEnabled: Boolean",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/auto-emoji-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nautoEmojiEnabled\n\n\nautoEmojiEnabled\n\u00b6\n\n\nval autoEmojiEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/auto-emoji-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/auto-emoji-enabled/#autoemojienabled",
            "text": "val autoEmojiEnabled: Boolean",
            "title": "autoEmojiEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/mms-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nmmsEnabled\n\n\nmmsEnabled\n\u00b6\n\n\nval mmsEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/mms-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/mms-enabled/#mmsenabled",
            "text": "val mmsEnabled: Boolean",
            "title": "mmsEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/-init-/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSettingsState(selectingTheme:\nBoolean\n= false, syncing:\nBoolean\n= false, isDefaultSmsApp:\nBoolean\n= false, darkModeEnabled:\nBoolean\n= false, autoEmojiEnabled:\nBoolean\n= true, notificationsEnabled:\nBoolean\n= true, vibrationEnabled:\nBoolean\n= true, deliveryEnabled:\nBoolean\n= false, splitSmsEnabled:\nBoolean\n= false, stripUnicodeEnabled:\nBoolean\n= false, mmsEnabled:\nBoolean\n= true, maxMmsSize:\nString\n= \"\")",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/-init-/#init",
            "text": "SettingsState(selectingTheme: Boolean = false, syncing: Boolean = false, isDefaultSmsApp: Boolean = false, darkModeEnabled: Boolean = false, autoEmojiEnabled: Boolean = true, notificationsEnabled: Boolean = true, vibrationEnabled: Boolean = true, deliveryEnabled: Boolean = false, splitSmsEnabled: Boolean = false, stripUnicodeEnabled: Boolean = false, mmsEnabled: Boolean = true, maxMmsSize: String = \"\")",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/strip-unicode-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nstripUnicodeEnabled\n\n\nstripUnicodeEnabled\n\u00b6\n\n\nval stripUnicodeEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/strip-unicode-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/strip-unicode-enabled/#stripunicodeenabled",
            "text": "val stripUnicodeEnabled: Boolean",
            "title": "stripUnicodeEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/vibration-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nvibrationEnabled\n\n\nvibrationEnabled\n\u00b6\n\n\nval vibrationEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/vibration-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/vibration-enabled/#vibrationenabled",
            "text": "val vibrationEnabled: Boolean",
            "title": "vibrationEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/split-sms-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \nsplitSmsEnabled\n\n\nsplitSmsEnabled\n\u00b6\n\n\nval splitSmsEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/split-sms-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/split-sms-enabled/#splitsmsenabled",
            "text": "val splitSmsEnabled: Boolean",
            "title": "splitSmsEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/delivery-enabled/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsState\n / \ndeliveryEnabled\n\n\ndeliveryEnabled\n\u00b6\n\n\nval deliveryEnabled:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-state/delivery-enabled.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-state/delivery-enabled/#deliveryenabled",
            "text": "val deliveryEnabled: Boolean",
            "title": "deliveryEnabled"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/color-selected/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nThemeAdapter\n / \ncolorSelected\n\n\ncolorSelected\n\u00b6\n\n\nval colorSelected: Subject<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.settings/-theme-adapter/color-selected.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/color-selected/#colorselected",
            "text": "val colorSelected: Subject< Int >",
            "title": "colorSelected"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nThemeAdapter\n\n\nThemeAdapter\n\u00b6\n\n\nclass ThemeAdapter :\nQkAdapter\n<\nInt\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nThemeAdapter(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolorSelected\n\n\nval colorSelected: Subject<\nInt\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-theme-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#themeadapter",
            "text": "class ThemeAdapter : QkAdapter < Int >",
            "title": "ThemeAdapter"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#constructors",
            "text": "Name  Summary      <init>  ThemeAdapter(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#properties",
            "text": "Name  Summary      colorSelected  val colorSelected: Subject< Int >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#functions",
            "text": "Name  Summary      onBindViewHolder  fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nThemeAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nThemeAdapter(context:\nContext\n)",
            "title": "&nbsp;qksms/presentation.feature.settings/-theme-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/-init-/#init",
            "text": "ThemeAdapter(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nThemeAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-theme-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nThemeAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.feature.settings/-theme-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-theme-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/theme-selected-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nthemeSelectedIntent\n\n\nthemeSelectedIntent\n\u00b6\n\n\nval themeSelectedIntent: Observable<\nInt\n>\n\n\nOverrides \nSettingsView.themeSelectedIntent",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/theme-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/theme-selected-intent/#themeselectedintent",
            "text": "val themeSelectedIntent: Observable< Int >  Overrides  SettingsView.themeSelectedIntent",
            "title": "themeSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/view-model-class/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nviewModelClass\n\n\nviewModelClass\n\u00b6\n\n\nprotected val viewModelClass:\nKClass\n<\nSettingsViewModel\n>\n\n\nOverrides \nQkActivity.viewModelClass",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/view-model-class.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/view-model-class/#viewmodelclass",
            "text": "protected val viewModelClass: KClass < SettingsViewModel >  Overrides  QkActivity.viewModelClass",
            "title": "viewModelClass"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/ringtone-selected-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nringtoneSelectedIntent\n\n\nringtoneSelectedIntent\n\u00b6\n\n\nval ringtoneSelectedIntent: Subject<\nString\n>\n\n\nOverrides \nSettingsView.ringtoneSelectedIntent",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/ringtone-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/ringtone-selected-intent/#ringtoneselectedintent",
            "text": "val ringtoneSelectedIntent: Subject< String >  Overrides  SettingsView.ringtoneSelectedIntent",
            "title": "ringtoneSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/render/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nrender\n\n\nrender\n\u00b6\n\n\nfun render(state:\nSettingsState\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/render.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/render/#render",
            "text": "fun render(state: SettingsState ): Unit",
            "title": "render"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n\n\nSettingsActivity\n\u00b6\n\n\nclass SettingsActivity :\nQkActivity\n<\nSettingsViewModel\n>,\nSettingsView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSettingsActivity()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\npreferenceClickIntent\n\n\nval preferenceClickIntent: Subject<\nPreferenceView\n>\n\n\n\n\n\n\nringtoneSelectedIntent\n\n\nval ringtoneSelectedIntent: Subject<\nString\n>\n\n\n\n\n\n\nthemeSelectedIntent\n\n\nval themeSelectedIntent: Observable<\nInt\n>\n\n\n\n\n\n\nviewModelClass\n\n\nval viewModelClass:\nKClass\n<\nSettingsViewModel\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\nmenu\n\n\nval menu: Subject<\nMenu\n>\n\n\n\n\n\n\nviewModel\n\n\nval viewModel: VM\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonActivityResult\n\n\nfun onActivityResult(requestCode:\nInt\n, resultCode:\nInt\n, data:\nIntent\n?):\nUnit\n\n\n\n\n\n\nonCreate\n\n\nfun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nrender\n\n\nfun render(state:\nSettingsState\n):\nUnit\n\n\n\n\n\n\nshowRingtonePicker\n\n\nfun showRingtonePicker(default:\nUri\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreateOptionsMenu\n\n\nopen fun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\n\n\n\n\nonOptionsItemSelected\n\n\nopen fun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nonPostCreate\n\n\nopen fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nsetContentView\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit\n\n\n\n\n\n\nsetTitle\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#settingsactivity",
            "text": "class SettingsActivity : QkActivity < SettingsViewModel >, SettingsView",
            "title": "SettingsActivity"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#constructors",
            "text": "Name  Summary      <init>  SettingsActivity()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#properties",
            "text": "Name  Summary      preferenceClickIntent  val preferenceClickIntent: Subject< PreferenceView >    ringtoneSelectedIntent  val ringtoneSelectedIntent: Subject< String >    themeSelectedIntent  val themeSelectedIntent: Observable< Int >    viewModelClass  val viewModelClass: KClass < SettingsViewModel >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#inherited-properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    menu  val menu: Subject< Menu >    viewModel  val viewModel: VM",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#functions",
            "text": "Name  Summary      onActivityResult  fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent ?): Unit    onCreate  fun onCreate(savedInstanceState: Bundle ?): Unit    render  fun render(state: SettingsState ): Unit    showRingtonePicker  fun showRingtonePicker(default: Uri ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#inherited-functions",
            "text": "Name  Summary      onCreateOptionsMenu  open fun onCreateOptionsMenu(menu: Menu ?): Boolean    onOptionsItemSelected  open fun onOptionsItemSelected(item: MenuItem ): Boolean    onPostCreate  open fun onPostCreate(savedInstanceState: Bundle ?): Unit    setContentView  open fun setContentView(layoutResID: Int ): Unit    setTitle  open fun setTitle(title: CharSequence ?): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/preference-click-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \npreferenceClickIntent\n\n\npreferenceClickIntent\n\u00b6\n\n\nval preferenceClickIntent: Subject<\nPreferenceView\n>\n\n\nOverrides \nSettingsView.preferenceClickIntent",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/preference-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/preference-click-intent/#preferenceclickintent",
            "text": "val preferenceClickIntent: Subject< PreferenceView >  Overrides  SettingsView.preferenceClickIntent",
            "title": "preferenceClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/-init-/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSettingsActivity()",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/-init-/#init",
            "text": "SettingsActivity()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/show-ringtone-picker/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nshowRingtonePicker\n\n\nshowRingtonePicker\n\u00b6\n\n\nfun showRingtonePicker(default:\nUri\n):\nUnit\n\n\nOverrides \nSettingsView.showRingtonePicker",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/show-ringtone-picker.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/show-ringtone-picker/#showringtonepicker",
            "text": "fun showRingtonePicker(default: Uri ): Unit  Overrides  SettingsView.showRingtonePicker",
            "title": "showRingtonePicker"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/on-activity-result/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nonActivityResult\n\n\nonActivityResult\n\u00b6\n\n\nprotected fun onActivityResult(requestCode:\nInt\n, resultCode:\nInt\n, data:\nIntent\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/on-activity-result.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/on-activity-result/#onactivityresult",
            "text": "protected fun onActivityResult(requestCode: Int , resultCode: Int , data: Intent ?): Unit",
            "title": "onActivityResult"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/on-create/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsActivity\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nprotected fun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\nOverrides \nQkActivity.onCreate",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-activity/on-create.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-activity/on-create/#oncreate",
            "text": "protected fun onCreate(savedInstanceState: Bundle ?): Unit  Overrides  QkActivity.onCreate",
            "title": "onCreate"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/theme-selected-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsView\n / \nthemeSelectedIntent\n\n\nthemeSelectedIntent\n\u00b6\n\n\nabstract val themeSelectedIntent: Observable<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view/theme-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/theme-selected-intent/#themeselectedintent",
            "text": "abstract val themeSelectedIntent: Observable< Int >",
            "title": "themeSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/ringtone-selected-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsView\n / \nringtoneSelectedIntent\n\n\nringtoneSelectedIntent\n\u00b6\n\n\nabstract val ringtoneSelectedIntent: Observable<\nString\n>",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view/ringtone-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/ringtone-selected-intent/#ringtoneselectedintent",
            "text": "abstract val ringtoneSelectedIntent: Observable< String >",
            "title": "ringtoneSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsView\n\n\nSettingsView\n\u00b6\n\n\ninterface SettingsView :\nQkView\n<\nSettingsState\n>\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\npreferenceClickIntent\n\n\nabstract val preferenceClickIntent: Subject<\nPreferenceView\n>\n\n\n\n\n\n\nringtoneSelectedIntent\n\n\nabstract val ringtoneSelectedIntent: Observable<\nString\n>\n\n\n\n\n\n\nthemeSelectedIntent\n\n\nabstract val themeSelectedIntent: Observable<\nInt\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nshowRingtonePicker\n\n\nabstract fun showRingtonePicker(default:\nUri\n):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nSettingsActivity\n\n\nclass SettingsActivity :\nQkActivity\n<\nSettingsViewModel\n>, SettingsView",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view/index.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/#settingsview",
            "text": "interface SettingsView : QkView < SettingsState >",
            "title": "SettingsView"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/#properties",
            "text": "Name  Summary      preferenceClickIntent  abstract val preferenceClickIntent: Subject< PreferenceView >    ringtoneSelectedIntent  abstract val ringtoneSelectedIntent: Observable< String >    themeSelectedIntent  abstract val themeSelectedIntent: Observable< Int >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/#functions",
            "text": "Name  Summary      showRingtonePicker  abstract fun showRingtonePicker(default: Uri ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/#inheritors",
            "text": "Name  Summary      SettingsActivity  class SettingsActivity : QkActivity < SettingsViewModel >, SettingsView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/preference-click-intent/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsView\n / \npreferenceClickIntent\n\n\npreferenceClickIntent\n\u00b6\n\n\nabstract val preferenceClickIntent: Subject<\nPreferenceView\n>",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view/preference-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/preference-click-intent/#preferenceclickintent",
            "text": "abstract val preferenceClickIntent: Subject< PreferenceView >",
            "title": "preferenceClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/show-ringtone-picker/",
            "text": "qksms\n / \npresentation.feature.settings\n / \nSettingsView\n / \nshowRingtonePicker\n\n\nshowRingtonePicker\n\u00b6\n\n\nabstract fun showRingtonePicker(default:\nUri\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.settings/-settings-view/show-ringtone-picker.md"
        },
        {
            "location": "/qksms/presentation.feature.settings/-settings-view/show-ringtone-picker/#showringtonepicker",
            "text": "abstract fun showRingtonePicker(default: Uri ): Unit",
            "title": "showRingtonePicker"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-object/as-observable/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmObject\n / \nasObservable\n\n\nasObservable\n\u00b6\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-object/as-observable.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-object/as-observable/#asobservable",
            "text": "fun <T : RealmObject> RealmObject.asObservable(): Observable<T>",
            "title": "asObservable"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-object/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmObject\n\n\nExtensions for io.realm.RealmObject\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-object/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-object/#extensions-for-iorealmrealmobject",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>",
            "title": "Extensions for io.realm.RealmObject"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.collections.-collection/insert-or-update/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nkotlin.collections.Collection\n / \ninsertOrUpdate\n\n\ninsertOrUpdate\n\u00b6\n\n\nfun <T : RealmModel>\nCollection\n<T>.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/kotlin.collections.-collection/insert-or-update.md"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.collections.-collection/insert-or-update/#insertorupdate",
            "text": "fun <T : RealmModel> Collection <T>.insertOrUpdate(): Unit",
            "title": "insertOrUpdate"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.collections.-collection/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nkotlin.collections.Collection\n\n\nExtensions for kotlin.collections.Collection\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun <T : RealmModel>\nCollection\n<T>.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/kotlin.collections.-collection/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.collections.-collection/#extensions-for-kotlincollectionscollection",
            "text": "Name  Summary      insertOrUpdate  fun <T : RealmModel> Collection <T>.insertOrUpdate(): Unit",
            "title": "Extensions for kotlin.collections.Collection"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/as-flowable/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n / \nasFlowable\n\n\nasFlowable\n\u00b6\n\n\nfun\nCursor\n.asFlowable(): Flowable<\nCursor\n>\n\n\nWe're using this simple implementation with .range() because of the\ncomplexities of dealing with Backpressure with a Cursor. We can't simply\nuse a loop and call onNext() from a generator because we'll need to close\nthe cursor at the end, and if any items are still in the buffer, then\nthey will be made invalid",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/as-flowable.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/as-flowable/#asflowable",
            "text": "fun Cursor .asFlowable(): Flowable< Cursor >  We're using this simple implementation with .range() because of the\ncomplexities of dealing with Backpressure with a Cursor. We can't simply\nuse a loop and call onNext() from a generator because we'll need to close\nthe cursor at the end, and if any items are still in the buffer, then\nthey will be made invalid",
            "title": "asFlowable"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/map-while/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n / \nmapWhile\n\n\nmapWhile\n\u00b6\n\n\nfun <T>\nCursor\n.mapWhile(map: (\nCursor\n) -> T, predicate: (T) ->\nBoolean\n):\nArrayList\n<T>",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/map-while.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/map-while/#mapwhile",
            "text": "fun <T> Cursor .mapWhile(map: ( Cursor ) -> T, predicate: (T) -> Boolean ): ArrayList <T>",
            "title": "mapWhile"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/for-each/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n / \nforEach\n\n\nforEach\n\u00b6\n\n\nfun\nCursor\n.forEach(closeOnComplete:\nBoolean\n= true, method: (\nCursor\n) ->\nUnit\n= {}):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/for-each.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/for-each/#foreach",
            "text": "fun Cursor .forEach(closeOnComplete: Boolean = true, method: ( Cursor ) -> Unit = {}): Unit",
            "title": "forEach"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n\n\nExtensions for android.database.Cursor\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasFlowable\n\n\nfun\nCursor\n.asFlowable(): Flowable<\nCursor\n>\nWe're using this simple implementation with .range() because of the complexities of dealing with Backpressure with a Cursor. We can't simply use a loop and call onNext() from a generator because we'll need to close the cursor at the end, and if any items are still in the buffer, then they will be made invalid\n\n\n\n\n\n\nasMaybe\n\n\nfun\nCursor\n.asMaybe(): Maybe<\nCursor\n>\n\n\n\n\n\n\nforEach\n\n\nfun\nCursor\n.forEach(closeOnComplete:\nBoolean\n= true, method: (\nCursor\n) ->\nUnit\n= {}):\nUnit\n\n\n\n\n\n\nmap\n\n\nfun <T>\nCursor\n.map(map: (\nCursor\n) -> T):\nList\n<T>\n\n\n\n\n\n\nmapWhile\n\n\nfun <T>\nCursor\n.mapWhile(map: (\nCursor\n) -> T, predicate: (T) ->\nBoolean\n):\nArrayList\n<T>",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/#extensions-for-androiddatabasecursor",
            "text": "Name  Summary      asFlowable  fun Cursor .asFlowable(): Flowable< Cursor > We're using this simple implementation with .range() because of the complexities of dealing with Backpressure with a Cursor. We can't simply use a loop and call onNext() from a generator because we'll need to close the cursor at the end, and if any items are still in the buffer, then they will be made invalid    asMaybe  fun Cursor .asMaybe(): Maybe< Cursor >    forEach  fun Cursor .forEach(closeOnComplete: Boolean = true, method: ( Cursor ) -> Unit = {}): Unit    map  fun <T> Cursor .map(map: ( Cursor ) -> T): List <T>    mapWhile  fun <T> Cursor .mapWhile(map: ( Cursor ) -> T, predicate: (T) -> Boolean ): ArrayList <T>",
            "title": "Extensions for android.database.Cursor"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/map/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun <T>\nCursor\n.map(map: (\nCursor\n) -> T):\nList\n<T>",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/map.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/map/#map",
            "text": "fun <T> Cursor .map(map: ( Cursor ) -> T): List <T>",
            "title": "map"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/as-maybe/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.database.Cursor\n / \nasMaybe\n\n\nasMaybe\n\u00b6\n\n\nfun\nCursor\n.asMaybe(): Maybe<\nCursor\n>",
            "title": "&nbsp;qksms/common.util.extensions/android.database.-cursor/as-maybe.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.database.-cursor/as-maybe/#asmaybe",
            "text": "fun Cursor .asMaybe(): Maybe< Cursor >",
            "title": "asMaybe"
        },
        {
            "location": "/qksms/common.util.extensions/",
            "text": "qksms\n / \ncommon.util.extensions\n\n\nPackage common.util.extensions\n\u00b6\n\n\nExtensions for External Classes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nandroid.content.Context\n\n\n\n\n\n\n\n\nandroid.database.Cursor\n\n\n\n\n\n\n\n\nandroid.view.View\n\n\n\n\n\n\n\n\nandroid.widget.EditText\n\n\n\n\n\n\n\n\nandroid.widget.ImageView\n\n\n\n\n\n\n\n\nio.reactivex.Flowable\n\n\n\n\n\n\n\n\nio.realm.RealmModel\n\n\n\n\n\n\n\n\nio.realm.RealmObject\n\n\n\n\n\n\n\n\nio.realm.RealmResults\n\n\n\n\n\n\n\n\njava.util.Calendar\n\n\n\n\n\n\n\n\nkotlin.Int\n\n\n\n\n\n\n\n\nkotlin.collections.Collection",
            "title": "&nbsp;qksms/common.util.extensions/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/#package-commonutilextensions",
            "text": "",
            "title": "Package common.util.extensions"
        },
        {
            "location": "/qksms/common.util.extensions/#extensions-for-external-classes",
            "text": "Name  Summary      android.content.Context     android.database.Cursor     android.view.View     android.widget.EditText     android.widget.ImageView     io.reactivex.Flowable     io.realm.RealmModel     io.realm.RealmObject     io.realm.RealmResults     java.util.Calendar     kotlin.Int     kotlin.collections.Collection",
            "title": "Extensions for External Classes"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/make-toast/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.content.Context\n / \nmakeToast\n\n\nmakeToast\n\u00b6\n\n\nfun\nContext\n.makeToast(@StringRes res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.content.-context/make-toast.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/make-toast/#maketoast",
            "text": "fun Context .makeToast(@StringRes res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "makeToast"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.content.Context\n\n\nExtensions for android.content.Context\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.content.-context/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/#extensions-for-androidcontentcontext",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extensions for android.content.Context"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/get-color-compat/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.content.Context\n / \ngetColorCompat\n\n\ngetColorCompat\n\u00b6\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt",
            "title": "&nbsp;qksms/common.util.extensions/android.content.-context/get-color-compat.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.content.-context/get-color-compat/#getcolorcompat",
            "text": "fun Context .getColorCompat(colorRes: Int ): Int",
            "title": "getColorCompat"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-results/as-observable/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmResults\n / \nasObservable\n\n\nasObservable\n\u00b6\n\n\nfun <T : RealmObject> RealmResults<T>.asObservable(): Observable<RealmResults<T>>",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-results/as-observable.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-results/as-observable/#asobservable",
            "text": "fun <T : RealmObject> RealmResults<T>.asObservable(): Observable<RealmResults<T>>",
            "title": "asObservable"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-results/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmResults\n\n\nExtensions for io.realm.RealmResults\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmResults<T>.asObservable(): Observable<RealmResults<T>>",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-results/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-results/#extensions-for-iorealmrealmresults",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmResults<T>.asObservable(): Observable<RealmResults<T>>",
            "title": "Extensions for io.realm.RealmResults"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nkotlin.Int\n\n\nExtensions for kotlin.Int\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndpToPx\n\n\nfun\nInt\n.dpToPx(context:\nContext\n):\nInt\n\n\n\n\n\n\nwithAlpha\n\n\nfun\nInt\n.withAlpha(alpha:\nInt\n):\nInt",
            "title": "&nbsp;qksms/common.util.extensions/kotlin.-int/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/#extensions-for-kotlinint",
            "text": "Name  Summary      dpToPx  fun Int .dpToPx(context: Context ): Int    withAlpha  fun Int .withAlpha(alpha: Int ): Int",
            "title": "Extensions for kotlin.Int"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/with-alpha/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nkotlin.Int\n / \nwithAlpha\n\n\nwithAlpha\n\u00b6\n\n\nfun\nInt\n.withAlpha(alpha:\nInt\n):\nInt",
            "title": "&nbsp;qksms/common.util.extensions/kotlin.-int/with-alpha.md"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/with-alpha/#withalpha",
            "text": "fun Int .withAlpha(alpha: Int ): Int",
            "title": "withAlpha"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/dp-to-px/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nkotlin.Int\n / \ndpToPx\n\n\ndpToPx\n\u00b6\n\n\nfun\nInt\n.dpToPx(context:\nContext\n):\nInt",
            "title": "&nbsp;qksms/common.util.extensions/kotlin.-int/dp-to-px.md"
        },
        {
            "location": "/qksms/common.util.extensions/kotlin.-int/dp-to-px/#dptopx",
            "text": "fun Int .dpToPx(context: Context ): Int",
            "title": "dpToPx"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-edit-text/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.widget.EditText\n\n\nExtensions for android.widget.EditText\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nshowKeyboard\n\n\nfun\nEditText\n.showKeyboard():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.widget.-edit-text/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-edit-text/#extensions-for-androidwidgetedittext",
            "text": "Name  Summary      showKeyboard  fun EditText .showKeyboard(): Unit",
            "title": "Extensions for android.widget.EditText"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-edit-text/show-keyboard/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.widget.EditText\n / \nshowKeyboard\n\n\nshowKeyboard\n\u00b6\n\n\nfun\nEditText\n.showKeyboard():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.widget.-edit-text/show-keyboard.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-edit-text/show-keyboard/#showkeyboard",
            "text": "fun EditText .showKeyboard(): Unit",
            "title": "showKeyboard"
        },
        {
            "location": "/qksms/common.util.extensions/io.reactivex.-flowable/map-not-null/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.reactivex.Flowable\n / \nmapNotNull\n\n\nmapNotNull\n\u00b6\n\n\nfun <T, R> Flowable<T>.mapNotNull(mapper: (T) -> R?): Flowable<R>",
            "title": "&nbsp;qksms/common.util.extensions/io.reactivex.-flowable/map-not-null.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.reactivex.-flowable/map-not-null/#mapnotnull",
            "text": "fun <T, R> Flowable<T>.mapNotNull(mapper: (T) -> R?): Flowable<R>",
            "title": "mapNotNull"
        },
        {
            "location": "/qksms/common.util.extensions/io.reactivex.-flowable/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.reactivex.Flowable\n\n\nExtensions for io.reactivex.Flowable\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmapNotNull\n\n\nfun <T, R> Flowable<T>.mapNotNull(mapper: (T) -> R?): Flowable<R>",
            "title": "&nbsp;qksms/common.util.extensions/io.reactivex.-flowable/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.reactivex.-flowable/#extensions-for-ioreactivexflowable",
            "text": "Name  Summary      mapNotNull  fun <T, R> Flowable<T>.mapNotNull(mapper: (T) -> R?): Flowable<R>",
            "title": "Extensions for io.reactivex.Flowable"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-image-view/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.widget.ImageView\n\n\nExtensions for android.widget.ImageView\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetTint\n\n\nfun\nImageView\n.setTint(color:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.widget.-image-view/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-image-view/#extensions-for-androidwidgetimageview",
            "text": "Name  Summary      setTint  fun ImageView .setTint(color: Int ): Unit",
            "title": "Extensions for android.widget.ImageView"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-image-view/set-tint/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.widget.ImageView\n / \nsetTint\n\n\nsetTint\n\u00b6\n\n\nfun\nImageView\n.setTint(color:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.widget.-image-view/set-tint.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.widget.-image-view/set-tint/#settint",
            "text": "fun ImageView .setTint(color: Int ): Unit",
            "title": "setTint"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-model/insert-or-update/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmModel\n / \ninsertOrUpdate\n\n\ninsertOrUpdate\n\u00b6\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-model/insert-or-update.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-model/insert-or-update/#insertorupdate",
            "text": "fun RealmModel.insertOrUpdate(): Unit",
            "title": "insertOrUpdate"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-model/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nio.realm.RealmModel\n\n\nExtensions for io.realm.RealmModel\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/io.realm.-realm-model/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/io.realm.-realm-model/#extensions-for-iorealmrealmmodel",
            "text": "Name  Summary      insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extensions for io.realm.RealmModel"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-day/",
            "text": "qksms\n / \ncommon.util.extensions\n / \njava.util.Calendar\n / \nisSameDay\n\n\nisSameDay\n\u00b6\n\n\nfun\nCalendar\n.isSameDay(other:\nCalendar\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.extensions/java.util.-calendar/is-same-day.md"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-day/#issameday",
            "text": "fun Calendar .isSameDay(other: Calendar ): Boolean",
            "title": "isSameDay"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-week/",
            "text": "qksms\n / \ncommon.util.extensions\n / \njava.util.Calendar\n / \nisSameWeek\n\n\nisSameWeek\n\u00b6\n\n\nfun\nCalendar\n.isSameWeek(other:\nCalendar\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.extensions/java.util.-calendar/is-same-week.md"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-week/#issameweek",
            "text": "fun Calendar .isSameWeek(other: Calendar ): Boolean",
            "title": "isSameWeek"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/",
            "text": "qksms\n / \ncommon.util.extensions\n / \njava.util.Calendar\n\n\nExtensions for java.util.Calendar\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nisSameDay\n\n\nfun\nCalendar\n.isSameDay(other:\nCalendar\n):\nBoolean\n\n\n\n\n\n\nisSameWeek\n\n\nfun\nCalendar\n.isSameWeek(other:\nCalendar\n):\nBoolean\n\n\n\n\n\n\nisSameYear\n\n\nfun\nCalendar\n.isSameYear(other:\nCalendar\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.extensions/java.util.-calendar/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/#extensions-for-javautilcalendar",
            "text": "Name  Summary      isSameDay  fun Calendar .isSameDay(other: Calendar ): Boolean    isSameWeek  fun Calendar .isSameWeek(other: Calendar ): Boolean    isSameYear  fun Calendar .isSameYear(other: Calendar ): Boolean",
            "title": "Extensions for java.util.Calendar"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-year/",
            "text": "qksms\n / \ncommon.util.extensions\n / \njava.util.Calendar\n / \nisSameYear\n\n\nisSameYear\n\u00b6\n\n\nfun\nCalendar\n.isSameYear(other:\nCalendar\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.extensions/java.util.-calendar/is-same-year.md"
        },
        {
            "location": "/qksms/common.util.extensions/java.util.-calendar/is-same-year/#issameyear",
            "text": "fun Calendar .isSameYear(other: Calendar ): Boolean",
            "title": "isSameYear"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-margins/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.view.View\n / \nsetMargins\n\n\nsetMargins\n\u00b6\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.view.-view/set-margins.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-margins/#setmargins",
            "text": "fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit",
            "title": "setMargins"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-padding/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.view.View\n / \nsetPadding\n\n\nsetPadding\n\u00b6\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.view.-view/set-padding.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-padding/#setpadding",
            "text": "fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit",
            "title": "setPadding"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.view.View\n\n\nExtensions for android.view.View\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.view.-view/index.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/#extensions-for-androidviewview",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extensions for android.view.View"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-visible/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.view.View\n / \nsetVisible\n\n\nsetVisible\n\u00b6\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.view.-view/set-visible.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-visible/#setvisible",
            "text": "fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "setVisible"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-background-tint/",
            "text": "qksms\n / \ncommon.util.extensions\n / \nandroid.view.View\n / \nsetBackgroundTint\n\n\nsetBackgroundTint\n\u00b6\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/common.util.extensions/android.view.-view/set-background-tint.md"
        },
        {
            "location": "/qksms/common.util.extensions/android.view.-view/set-background-tint/#setbackgroundtint",
            "text": "fun View .setBackgroundTint(color: Int ): Unit",
            "title": "setBackgroundTint"
        },
        {
            "location": "/qksms/presentation.feature.conversations/",
            "text": "qksms\n / \npresentation.feature.conversations\n\n\nPackage presentation.feature.conversations\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nConversationItemTouchCallback\n\n\nclass ConversationItemTouchCallback : SimpleCallback\n\n\n\n\n\n\nConversationsAdapter\n\n\nclass ConversationsAdapter :\nFlowableAdapter\n<\nInboxItem\n>",
            "title": "&nbsp;qksms/presentation.feature.conversations/index.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/#package-presentationfeatureconversations",
            "text": "",
            "title": "Package presentation.feature.conversations"
        },
        {
            "location": "/qksms/presentation.feature.conversations/#types",
            "text": "Name  Summary      ConversationItemTouchCallback  class ConversationItemTouchCallback : SimpleCallback    ConversationsAdapter  class ConversationsAdapter : FlowableAdapter < InboxItem >",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-swiped/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationItemTouchCallback\n / \nonSwiped\n\n\nonSwiped\n\u00b6\n\n\nfun onSwiped(viewHolder: ViewHolder, direction:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-swiped.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-swiped/#onswiped",
            "text": "fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit",
            "title": "onSwiped"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationItemTouchCallback\n\n\nConversationItemTouchCallback\n\u00b6\n\n\nclass ConversationItemTouchCallback : SimpleCallback\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nConversationItemTouchCallback()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nswipes\n\n\nval swipes: Subject<\nInt\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonMove\n\n\nfun onMove(recyclerView: RecyclerView?, viewHolder: ViewHolder?, target: ViewHolder?):\nBoolean\n\n\n\n\n\n\nonSwiped\n\n\nfun onSwiped(viewHolder: ViewHolder, direction:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversation-item-touch-callback/index.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/#conversationitemtouchcallback",
            "text": "class ConversationItemTouchCallback : SimpleCallback",
            "title": "ConversationItemTouchCallback"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/#constructors",
            "text": "Name  Summary      <init>  ConversationItemTouchCallback()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/#properties",
            "text": "Name  Summary      swipes  val swipes: Subject< Int >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/#functions",
            "text": "Name  Summary      onMove  fun onMove(recyclerView: RecyclerView?, viewHolder: ViewHolder?, target: ViewHolder?): Boolean    onSwiped  fun onSwiped(viewHolder: ViewHolder, direction: Int ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/swipes/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationItemTouchCallback\n / \nswipes\n\n\nswipes\n\u00b6\n\n\nval swipes: Subject<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversation-item-touch-callback/swipes.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/swipes/#swipes",
            "text": "val swipes: Subject< Int >",
            "title": "swipes"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/-init-/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationItemTouchCallback\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nConversationItemTouchCallback()",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversation-item-touch-callback/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/-init-/#init",
            "text": "ConversationItemTouchCallback()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-move/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationItemTouchCallback\n / \nonMove\n\n\nonMove\n\u00b6\n\n\nfun onMove(recyclerView: RecyclerView?, viewHolder: ViewHolder?, target: ViewHolder?):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-move.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversation-item-touch-callback/on-move/#onmove",
            "text": "fun onMove(recyclerView: RecyclerView?, viewHolder: ViewHolder?, target: ViewHolder?): Boolean",
            "title": "onMove"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/date-formatter/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \ndateFormatter\n\n\ndateFormatter\n\u00b6\n\n\nval dateFormatter:\nDateFormatter",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/date-formatter.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/date-formatter/#dateformatter",
            "text": "val dateFormatter: DateFormatter",
            "title": "dateFormatter"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/message-repo/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nmessageRepo\n\n\nmessageRepo\n\u00b6\n\n\nval messageRepo:\nMessageRepository",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/message-repo.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/message-repo/#messagerepo",
            "text": "val messageRepo: MessageRepository",
            "title": "messageRepo"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/context/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/context.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n\n\nConversationsAdapter\n\u00b6\n\n\nclass ConversationsAdapter :\nFlowableAdapter\n<\nInboxItem\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nConversationsAdapter(context:\nContext\n, navigator:\nNavigator\n, messageRepo:\nMessageRepository\n, dateFormatter:\nDateFormatter\n, colors:\nColors\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nclicks\n\n\nval clicks: Subject<\nLong\n>\n\n\n\n\n\n\ncolors\n\n\nval colors:\nColors\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\ndateFormatter\n\n\nval dateFormatter:\nDateFormatter\n\n\n\n\n\n\nlongClicks\n\n\nval longClicks: Subject<\nLong\n>\n\n\n\n\n\n\nmessageRepo\n\n\nval messageRepo:\nMessageRepository\n\n\n\n\n\n\nnavigator\n\n\nval navigator:\nNavigator\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nflowable\n\n\nvar flowable: Flowable<\nList\n<T>>?\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nareContentsTheSame\n\n\nfun areContentsTheSame(old:\nInboxItem\n, new:\nInboxItem\n):\nBoolean\n\n\n\n\n\n\nareItemsTheSame\n\n\nfun areItemsTheSame(old:\nInboxItem\n, new:\nInboxItem\n):\nBoolean\n\n\n\n\n\n\ngetItemViewType\n\n\nfun getItemViewType(position:\nInt\n):\nInt\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(viewHolder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\nonDetachedFromRecyclerView\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToRecyclerView\n\n\nopen fun onAttachedToRecyclerView(recyclerView: RecyclerView):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#conversationsadapter",
            "text": "class ConversationsAdapter : FlowableAdapter < InboxItem >",
            "title": "ConversationsAdapter"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#constructors",
            "text": "Name  Summary      <init>  ConversationsAdapter(context: Context , navigator: Navigator , messageRepo: MessageRepository , dateFormatter: DateFormatter , colors: Colors )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#properties",
            "text": "Name  Summary      clicks  val clicks: Subject< Long >    colors  val colors: Colors    context  val context: Context    dateFormatter  val dateFormatter: DateFormatter    longClicks  val longClicks: Subject< Long >    messageRepo  val messageRepo: MessageRepository    navigator  val navigator: Navigator",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#inherited-properties",
            "text": "Name  Summary      flowable  var flowable: Flowable< List <T>>?",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#functions",
            "text": "Name  Summary      areContentsTheSame  fun areContentsTheSame(old: InboxItem , new: InboxItem ): Boolean    areItemsTheSame  fun areItemsTheSame(old: InboxItem , new: InboxItem ): Boolean    getItemViewType  fun getItemViewType(position: Int ): Int    onBindViewHolder  fun onBindViewHolder(viewHolder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder    onDetachedFromRecyclerView  fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/#inherited-functions",
            "text": "Name  Summary      onAttachedToRecyclerView  open fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/clicks/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nclicks\n\n\nclicks\n\u00b6\n\n\nval clicks: Subject<\nLong\n>",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/clicks.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/clicks/#clicks",
            "text": "val clicks: Subject< Long >",
            "title": "clicks"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/are-items-the-same/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nareItemsTheSame\n\n\nareItemsTheSame\n\u00b6\n\n\nprotected fun areItemsTheSame(old:\nInboxItem\n, new:\nInboxItem\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/are-items-the-same.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/are-items-the-same/#areitemsthesame",
            "text": "protected fun areItemsTheSame(old: InboxItem , new: InboxItem ): Boolean",
            "title": "areItemsTheSame"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/navigator/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\nval navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/navigator/#navigator",
            "text": "val navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/colors/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \ncolors\n\n\ncolors\n\u00b6\n\n\nval colors:\nColors",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/colors.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/colors/#colors",
            "text": "val colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nConversationsAdapter(context:\nContext\n, navigator:\nNavigator\n, messageRepo:\nMessageRepository\n, dateFormatter:\nDateFormatter\n, colors:\nColors\n)",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/-init-/#init",
            "text": "ConversationsAdapter(context: Context , navigator: Navigator , messageRepo: MessageRepository , dateFormatter: DateFormatter , colors: Colors )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(viewHolder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(viewHolder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/are-contents-the-same/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nareContentsTheSame\n\n\nareContentsTheSame\n\u00b6\n\n\nprotected fun areContentsTheSame(old:\nInboxItem\n, new:\nInboxItem\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/are-contents-the-same.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/are-contents-the-same/#arecontentsthesame",
            "text": "protected fun areContentsTheSame(old: InboxItem , new: InboxItem ): Boolean",
            "title": "areContentsTheSame"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-detached-from-recycler-view/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nonDetachedFromRecyclerView\n\n\nonDetachedFromRecyclerView\n\u00b6\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit\n\n\nOverrides \nFlowableAdapter.onDetachedFromRecyclerView",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/on-detached-from-recycler-view.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-detached-from-recycler-view/#ondetachedfromrecyclerview",
            "text": "fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit  Overrides  FlowableAdapter.onDetachedFromRecyclerView",
            "title": "onDetachedFromRecyclerView"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/get-item-view-type/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \ngetItemViewType\n\n\ngetItemViewType\n\u00b6\n\n\nfun getItemViewType(position:\nInt\n):\nInt",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/get-item-view-type.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/get-item-view-type/#getitemviewtype",
            "text": "fun getItemViewType(position: Int ): Int",
            "title": "getItemViewType"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/long-clicks/",
            "text": "qksms\n / \npresentation.feature.conversations\n / \nConversationsAdapter\n / \nlongClicks\n\n\nlongClicks\n\u00b6\n\n\nval longClicks: Subject<\nLong\n>",
            "title": "&nbsp;qksms/presentation.feature.conversations/-conversations-adapter/long-clicks.md"
        },
        {
            "location": "/qksms/presentation.feature.conversations/-conversations-adapter/long-clicks/#longclicks",
            "text": "val longClicks: Subject< Long >",
            "title": "longClicks"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/on-handle-intent/",
            "text": "qksms\n / \npresentation.service\n / \nHeadlessSmsSendService\n / \nonHandleIntent\n\n\nonHandleIntent\n\u00b6\n\n\nprotected fun onHandleIntent(p0:\nIntent\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.service/-headless-sms-send-service/on-handle-intent.md"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/on-handle-intent/#onhandleintent",
            "text": "protected fun onHandleIntent(p0: Intent ?): Unit",
            "title": "onHandleIntent"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/",
            "text": "qksms\n / \npresentation.service\n / \nHeadlessSmsSendService\n\n\nHeadlessSmsSendService\n\u00b6\n\n\nclass HeadlessSmsSendService :\nIntentService\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nHeadlessSmsSendService()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonHandleIntent\n\n\nfun onHandleIntent(p0:\nIntent\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/presentation.service/-headless-sms-send-service/index.md"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/#headlesssmssendservice",
            "text": "class HeadlessSmsSendService : IntentService",
            "title": "HeadlessSmsSendService"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/#constructors",
            "text": "Name  Summary      <init>  HeadlessSmsSendService()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/#functions",
            "text": "Name  Summary      onHandleIntent  fun onHandleIntent(p0: Intent ?): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/-init-/",
            "text": "qksms\n / \npresentation.service\n / \nHeadlessSmsSendService\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nHeadlessSmsSendService()",
            "title": "&nbsp;qksms/presentation.service/-headless-sms-send-service/-init-.md"
        },
        {
            "location": "/qksms/presentation.service/-headless-sms-send-service/-init-/#init",
            "text": "HeadlessSmsSendService()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.service/",
            "text": "qksms\n / \npresentation.service\n\n\nPackage presentation.service\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nHeadlessSmsSendService\n\n\nclass HeadlessSmsSendService :\nIntentService",
            "title": "&nbsp;qksms/presentation.service/index.md"
        },
        {
            "location": "/qksms/presentation.service/#package-presentationservice",
            "text": "",
            "title": "Package presentation.service"
        },
        {
            "location": "/qksms/presentation.service/#types",
            "text": "Name  Summary      HeadlessSmsSendService  class HeadlessSmsSendService : IntentService",
            "title": "Types"
        },
        {
            "location": "/qksms/common/-q-k-application/analytics/",
            "text": "qksms\n / \ncommon\n / \nQKApplication\n / \nanalytics\n\n\nanalytics\n\u00b6\n\n\n@Inject lateinit var analytics:\nAnalytics\n\n\nInject this so that it is forced to initialize",
            "title": "&nbsp;qksms/common/-q-k-application/analytics.md"
        },
        {
            "location": "/qksms/common/-q-k-application/analytics/#analytics",
            "text": "@Inject lateinit var analytics: Analytics  Inject this so that it is forced to initialize",
            "title": "analytics"
        },
        {
            "location": "/qksms/common/-q-k-application/",
            "text": "qksms\n / \ncommon\n / \nQKApplication\n\n\nQKApplication\n\u00b6\n\n\nclass QKApplication :\nApplication\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQKApplication()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nanalytics\n\n\nlateinit var analytics:\nAnalytics\nInject this so that it is forced to initialize\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreate\n\n\nfun onCreate():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/common/-q-k-application/index.md"
        },
        {
            "location": "/qksms/common/-q-k-application/#qkapplication",
            "text": "class QKApplication : Application",
            "title": "QKApplication"
        },
        {
            "location": "/qksms/common/-q-k-application/#constructors",
            "text": "Name  Summary      <init>  QKApplication()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common/-q-k-application/#properties",
            "text": "Name  Summary      analytics  lateinit var analytics: Analytics Inject this so that it is forced to initialize",
            "title": "Properties"
        },
        {
            "location": "/qksms/common/-q-k-application/#functions",
            "text": "Name  Summary      onCreate  fun onCreate(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common/-q-k-application/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/common/-q-k-application/-init-/",
            "text": "qksms\n / \ncommon\n / \nQKApplication\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQKApplication()",
            "title": "&nbsp;qksms/common/-q-k-application/-init-.md"
        },
        {
            "location": "/qksms/common/-q-k-application/-init-/#init",
            "text": "QKApplication()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common/-q-k-application/on-create/",
            "text": "qksms\n / \ncommon\n / \nQKApplication\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nfun onCreate():\nUnit",
            "title": "&nbsp;qksms/common/-q-k-application/on-create.md"
        },
        {
            "location": "/qksms/common/-q-k-application/on-create/#oncreate",
            "text": "fun onCreate(): Unit",
            "title": "onCreate"
        },
        {
            "location": "/qksms/common/",
            "text": "qksms\n / \ncommon\n\n\nPackage common\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nQKApplication\n\n\nclass QKApplication :\nApplication",
            "title": "&nbsp;qksms/common/index.md"
        },
        {
            "location": "/qksms/common/#package-common",
            "text": "",
            "title": "Package common"
        },
        {
            "location": "/qksms/common/#types",
            "text": "Name  Summary      QKApplication  class QKApplication : Application",
            "title": "Types"
        },
        {
            "location": "/qksms/",
            "text": "qksms\n\n\nPackages\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncommon\n\n\n\n\n\n\n\n\ncommon.di\n\n\n\n\n\n\n\n\ncommon.util\n\n\n\n\n\n\n\n\ncommon.util.extensions\n\n\n\n\n\n\n\n\ncommon.util.filter\n\n\n\n\n\n\n\n\ndata.mapper\n\n\n\n\n\n\n\n\ndata.model\n\n\n\n\n\n\n\n\ndata.repository\n\n\n\n\n\n\n\n\ninteractor\n\n\n\n\n\n\n\n\npresentation.common\n\n\n\n\n\n\n\n\npresentation.common.base\n\n\n\n\n\n\n\n\npresentation.common.widget\n\n\n\n\n\n\n\n\npresentation.feature.compose\n\n\n\n\n\n\n\n\npresentation.feature.conversations\n\n\n\n\n\n\n\n\npresentation.feature.main\n\n\n\n\n\n\n\n\npresentation.feature.settings\n\n\n\n\n\n\n\n\npresentation.feature.setup\n\n\n\n\n\n\n\n\npresentation.receiver\n\n\n\n\n\n\n\n\npresentation.service\n\n\n\n\n\n\n\n\n\n\nIndex\n\u00b6\n\n\nAll Types",
            "title": "&nbsp;qksms/index.md"
        },
        {
            "location": "/qksms/#packages",
            "text": "Name  Summary      common     common.di     common.util     common.util.extensions     common.util.filter     data.mapper     data.model     data.repository     interactor     presentation.common     presentation.common.base     presentation.common.widget     presentation.feature.compose     presentation.feature.conversations     presentation.feature.main     presentation.feature.settings     presentation.feature.setup     presentation.receiver     presentation.service",
            "title": "Packages"
        },
        {
            "location": "/qksms/#index",
            "text": "All Types",
            "title": "Index"
        },
        {
            "location": "/qksms/common.util.filter/-filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nFilter\n\n\nFilter\n\u00b6\n\n\nabstract class Filter<in T>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nFilter()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nabstract fun filter(item: T, query:\nCharSequence\n):\nBoolean\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactFilter\n\n\nclass ContactFilter : Filter<\nContact\n>\n\n\n\n\n\n\nConversationFilter\n\n\nclass ConversationFilter : Filter<\nConversation\n>\n\n\n\n\n\n\nPhoneNumberFilter\n\n\nclass PhoneNumberFilter : Filter<\nString\n>\n\n\n\n\n\n\nRecipientFilter\n\n\nclass RecipientFilter : Filter<\nRecipient\n>",
            "title": "&nbsp;qksms/common.util.filter/-filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/-filter/#filter",
            "text": "abstract class Filter<in T>",
            "title": "Filter"
        },
        {
            "location": "/qksms/common.util.filter/-filter/#constructors",
            "text": "Name  Summary      <init>  Filter()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util.filter/-filter/#functions",
            "text": "Name  Summary      filter  abstract fun filter(item: T, query: CharSequence ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util.filter/-filter/#inheritors",
            "text": "Name  Summary      ContactFilter  class ContactFilter : Filter< Contact >    ConversationFilter  class ConversationFilter : Filter< Conversation >    PhoneNumberFilter  class PhoneNumberFilter : Filter< String >    RecipientFilter  class RecipientFilter : Filter< Recipient >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/common.util.filter/-filter/filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nFilter\n / \nfilter\n\n\nfilter\n\u00b6\n\n\nabstract fun filter(item: T, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-filter/filter.md"
        },
        {
            "location": "/qksms/common.util.filter/-filter/filter/#filter",
            "text": "abstract fun filter(item: T, query: CharSequence ): Boolean",
            "title": "filter"
        },
        {
            "location": "/qksms/common.util.filter/-filter/-init-/",
            "text": "qksms\n / \ncommon.util.filter\n / \nFilter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nFilter()",
            "title": "&nbsp;qksms/common.util.filter/-filter/-init-.md"
        },
        {
            "location": "/qksms/common.util.filter/-filter/-init-/#init",
            "text": "Filter()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nContactFilter\n\n\nContactFilter\n\u00b6\n\n\nclass ContactFilter :\nFilter\n<\nContact\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactFilter(phoneNumberFilter:\nPhoneNumberFilter\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nfun filter(item:\nContact\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-contact-filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/#contactfilter",
            "text": "class ContactFilter : Filter < Contact >",
            "title": "ContactFilter"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/#constructors",
            "text": "Name  Summary      <init>  ContactFilter(phoneNumberFilter: PhoneNumberFilter )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/#functions",
            "text": "Name  Summary      filter  fun filter(item: Contact , query: CharSequence ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nContactFilter\n / \nfilter\n\n\nfilter\n\u00b6\n\n\nfun filter(item:\nContact\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-contact-filter/filter.md"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/filter/#filter",
            "text": "fun filter(item: Contact , query: CharSequence ): Boolean",
            "title": "filter"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/-init-/",
            "text": "qksms\n / \ncommon.util.filter\n / \nContactFilter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactFilter(phoneNumberFilter:\nPhoneNumberFilter\n)",
            "title": "&nbsp;qksms/common.util.filter/-contact-filter/-init-.md"
        },
        {
            "location": "/qksms/common.util.filter/-contact-filter/-init-/#init",
            "text": "ContactFilter(phoneNumberFilter: PhoneNumberFilter )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nRecipientFilter\n\n\nRecipientFilter\n\u00b6\n\n\nclass RecipientFilter :\nFilter\n<\nRecipient\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nRecipientFilter(contactFilter:\nContactFilter\n, phoneNumberFilter:\nPhoneNumberFilter\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nfun filter(item:\nRecipient\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-recipient-filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/#recipientfilter",
            "text": "class RecipientFilter : Filter < Recipient >",
            "title": "RecipientFilter"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/#constructors",
            "text": "Name  Summary      <init>  RecipientFilter(contactFilter: ContactFilter , phoneNumberFilter: PhoneNumberFilter )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/#functions",
            "text": "Name  Summary      filter  fun filter(item: Recipient , query: CharSequence ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nRecipientFilter\n / \nfilter\n\n\nfilter\n\u00b6\n\n\nfun filter(item:\nRecipient\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-recipient-filter/filter.md"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/filter/#filter",
            "text": "fun filter(item: Recipient , query: CharSequence ): Boolean",
            "title": "filter"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/-init-/",
            "text": "qksms\n / \ncommon.util.filter\n / \nRecipientFilter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nRecipientFilter(contactFilter:\nContactFilter\n, phoneNumberFilter:\nPhoneNumberFilter\n)",
            "title": "&nbsp;qksms/common.util.filter/-recipient-filter/-init-.md"
        },
        {
            "location": "/qksms/common.util.filter/-recipient-filter/-init-/#init",
            "text": "RecipientFilter(contactFilter: ContactFilter , phoneNumberFilter: PhoneNumberFilter )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util.filter/",
            "text": "qksms\n / \ncommon.util.filter\n\n\nPackage common.util.filter\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactFilter\n\n\nclass ContactFilter :\nFilter\n<\nContact\n>\n\n\n\n\n\n\nConversationFilter\n\n\nclass ConversationFilter :\nFilter\n<\nConversation\n>\n\n\n\n\n\n\nFilter\n\n\nabstract class Filter<in T>\n\n\n\n\n\n\nPhoneNumberFilter\n\n\nclass PhoneNumberFilter :\nFilter\n<\nString\n>\n\n\n\n\n\n\nRecipientFilter\n\n\nclass RecipientFilter :\nFilter\n<\nRecipient\n>",
            "title": "&nbsp;qksms/common.util.filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/#package-commonutilfilter",
            "text": "",
            "title": "Package common.util.filter"
        },
        {
            "location": "/qksms/common.util.filter/#types",
            "text": "Name  Summary      ContactFilter  class ContactFilter : Filter < Contact >    ConversationFilter  class ConversationFilter : Filter < Conversation >    Filter  abstract class Filter<in T>    PhoneNumberFilter  class PhoneNumberFilter : Filter < String >    RecipientFilter  class RecipientFilter : Filter < Recipient >",
            "title": "Types"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nPhoneNumberFilter\n\n\nPhoneNumberFilter\n\u00b6\n\n\nclass PhoneNumberFilter :\nFilter\n<\nString\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPhoneNumberFilter()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nfun filter(item:\nString\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-phone-number-filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/#phonenumberfilter",
            "text": "class PhoneNumberFilter : Filter < String >",
            "title": "PhoneNumberFilter"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/#constructors",
            "text": "Name  Summary      <init>  PhoneNumberFilter()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/#functions",
            "text": "Name  Summary      filter  fun filter(item: String , query: CharSequence ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nPhoneNumberFilter\n / \nfilter\n\n\nfilter\n\u00b6\n\n\nfun filter(item:\nString\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-phone-number-filter/filter.md"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/filter/#filter",
            "text": "fun filter(item: String , query: CharSequence ): Boolean",
            "title": "filter"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/-init-/",
            "text": "qksms\n / \ncommon.util.filter\n / \nPhoneNumberFilter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPhoneNumberFilter()",
            "title": "&nbsp;qksms/common.util.filter/-phone-number-filter/-init-.md"
        },
        {
            "location": "/qksms/common.util.filter/-phone-number-filter/-init-/#init",
            "text": "PhoneNumberFilter()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nConversationFilter\n\n\nConversationFilter\n\u00b6\n\n\nclass ConversationFilter :\nFilter\n<\nConversation\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nConversationFilter(recipientFilter:\nRecipientFilter\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfilter\n\n\nfun filter(item:\nConversation\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-conversation-filter/index.md"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/#conversationfilter",
            "text": "class ConversationFilter : Filter < Conversation >",
            "title": "ConversationFilter"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/#constructors",
            "text": "Name  Summary      <init>  ConversationFilter(recipientFilter: RecipientFilter )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/#functions",
            "text": "Name  Summary      filter  fun filter(item: Conversation , query: CharSequence ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/filter/",
            "text": "qksms\n / \ncommon.util.filter\n / \nConversationFilter\n / \nfilter\n\n\nfilter\n\u00b6\n\n\nfun filter(item:\nConversation\n, query:\nCharSequence\n):\nBoolean",
            "title": "&nbsp;qksms/common.util.filter/-conversation-filter/filter.md"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/filter/#filter",
            "text": "fun filter(item: Conversation , query: CharSequence ): Boolean",
            "title": "filter"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/-init-/",
            "text": "qksms\n / \ncommon.util.filter\n / \nConversationFilter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nConversationFilter(recipientFilter:\nRecipientFilter\n)",
            "title": "&nbsp;qksms/common.util.filter/-conversation-filter/-init-.md"
        },
        {
            "location": "/qksms/common.util.filter/-conversation-filter/-init-/#init",
            "text": "ConversationFilter(recipientFilter: RecipientFilter )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/finish/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nfinish\n\n\nfinish\n\u00b6\n\n\nabstract fun finish():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/finish.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/finish/#finish",
            "text": "abstract fun finish(): Unit",
            "title": "finish"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n\n\nSetupView\n\u00b6\n\n\ninterface SetupView :\nQkView\n<\nSetupState\n>\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nactivityResumedIntent\n\n\nabstract val activityResumedIntent: Observable<*>\n\n\n\n\n\n\nnextIntent\n\n\nabstract val nextIntent: Observable<*>\n\n\n\n\n\n\nskipIntent\n\n\nabstract val skipIntent: Observable<*>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfinish\n\n\nabstract fun finish():\nUnit\n\n\n\n\n\n\nrequestDefaultSms\n\n\nabstract fun requestDefaultSms():\nUnit\n\n\n\n\n\n\nrequestPermissions\n\n\nabstract fun requestPermissions():\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nSetupActivity\n\n\nclass SetupActivity :\nQkActivity\n<\nSetupViewModel\n>, SetupView",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/index.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/#setupview",
            "text": "interface SetupView : QkView < SetupState >",
            "title": "SetupView"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/#properties",
            "text": "Name  Summary      activityResumedIntent  abstract val activityResumedIntent: Observable<*>    nextIntent  abstract val nextIntent: Observable<*>    skipIntent  abstract val skipIntent: Observable<*>",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/#functions",
            "text": "Name  Summary      finish  abstract fun finish(): Unit    requestDefaultSms  abstract fun requestDefaultSms(): Unit    requestPermissions  abstract fun requestPermissions(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/#inheritors",
            "text": "Name  Summary      SetupActivity  class SetupActivity : QkActivity < SetupViewModel >, SetupView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/request-default-sms/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nrequestDefaultSms\n\n\nrequestDefaultSms\n\u00b6\n\n\nabstract fun requestDefaultSms():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/request-default-sms.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/request-default-sms/#requestdefaultsms",
            "text": "abstract fun requestDefaultSms(): Unit",
            "title": "requestDefaultSms"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/next-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nnextIntent\n\n\nnextIntent\n\u00b6\n\n\nabstract val nextIntent: Observable<*>",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/next-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/next-intent/#nextintent",
            "text": "abstract val nextIntent: Observable<*>",
            "title": "nextIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/activity-resumed-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nactivityResumedIntent\n\n\nactivityResumedIntent\n\u00b6\n\n\nabstract val activityResumedIntent: Observable<*>",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/activity-resumed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/activity-resumed-intent/#activityresumedintent",
            "text": "abstract val activityResumedIntent: Observable<*>",
            "title": "activityResumedIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/request-permissions/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nrequestPermissions\n\n\nrequestPermissions\n\u00b6\n\n\nabstract fun requestPermissions():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/request-permissions.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/request-permissions/#requestpermissions",
            "text": "abstract fun requestPermissions(): Unit",
            "title": "requestPermissions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/skip-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupView\n / \nskipIntent\n\n\nskipIntent\n\u00b6\n\n\nabstract val skipIntent: Observable<*>",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view/skip-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view/skip-intent/#skipintent",
            "text": "abstract val skipIntent: Observable<*>",
            "title": "skipIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-state/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupState\n\n\nSetupState\n\u00b6\n\n\nclass SetupState\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSetupState()",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-state/index.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-state/#setupstate",
            "text": "class SetupState",
            "title": "SetupState"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-state/#constructors",
            "text": "Name  Summary      <init>  SetupState()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-state/-init-/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupState\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSetupState()",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-state/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-state/-init-/#init",
            "text": "SetupState()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/context/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupViewModel\n / \ncontext\n\n\ncontext\n\u00b6\n\n\n@Inject lateinit var context:\nContext",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view-model/context.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/context/#context",
            "text": "@Inject lateinit var context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupViewModel\n\n\nSetupViewModel\n\u00b6\n\n\nclass SetupViewModel :\nQkViewModel\n<\nSetupView\n,\nSetupState\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSetupViewModel()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nlateinit var context:\nContext\n\n\n\n\n\n\npermissions\n\n\nlateinit var permissions:\nPermissions\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndisposables\n\n\nval disposables: CompositeDisposable\n\n\n\n\n\n\nstate\n\n\nval state: BehaviorSubject<State>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbindView\n\n\nfun bindView(view:\nSetupView\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCleared\n\n\nopen fun onCleared():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view-model/index.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#setupviewmodel",
            "text": "class SetupViewModel : QkViewModel < SetupView , SetupState >",
            "title": "SetupViewModel"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#constructors",
            "text": "Name  Summary      <init>  SetupViewModel()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#properties",
            "text": "Name  Summary      context  lateinit var context: Context    permissions  lateinit var permissions: Permissions",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#inherited-properties",
            "text": "Name  Summary      disposables  val disposables: CompositeDisposable    state  val state: BehaviorSubject<State>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#functions",
            "text": "Name  Summary      bindView  fun bindView(view: SetupView ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/#inherited-functions",
            "text": "Name  Summary      onCleared  open fun onCleared(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/-init-/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupViewModel\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSetupViewModel()",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view-model/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/-init-/#init",
            "text": "SetupViewModel()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/bind-view/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupViewModel\n / \nbindView\n\n\nbindView\n\u00b6\n\n\nfun bindView(view:\nSetupView\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view-model/bind-view.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/bind-view/#bindview",
            "text": "fun bindView(view: SetupView ): Unit",
            "title": "bindView"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/permissions/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupViewModel\n / \npermissions\n\n\npermissions\n\u00b6\n\n\n@Inject lateinit var permissions:\nPermissions",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-view-model/permissions.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-view-model/permissions/#permissions",
            "text": "@Inject lateinit var permissions: Permissions",
            "title": "permissions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/view-model-class/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nviewModelClass\n\n\nviewModelClass\n\u00b6\n\n\nprotected val viewModelClass:\nKClass\n<\nSetupViewModel\n>\n\n\nOverrides \nQkActivity.viewModelClass",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/view-model-class.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/view-model-class/#viewmodelclass",
            "text": "protected val viewModelClass: KClass < SetupViewModel >  Overrides  QkActivity.viewModelClass",
            "title": "viewModelClass"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/render/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nrender\n\n\nrender\n\u00b6\n\n\nfun render(state:\nSetupState\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/render.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/render/#render",
            "text": "fun render(state: SetupState ): Unit",
            "title": "render"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n\n\nSetupActivity\n\u00b6\n\n\nclass SetupActivity :\nQkActivity\n<\nSetupViewModel\n>,\nSetupView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSetupActivity()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nactivityResumedIntent\n\n\nval activityResumedIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\nnextIntent\n\n\nval nextIntent: <ERROR CLASS>\n\n\n\n\n\n\nskipIntent\n\n\nval skipIntent: <ERROR CLASS>\n\n\n\n\n\n\nviewModelClass\n\n\nval viewModelClass:\nKClass\n<\nSetupViewModel\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\nmenu\n\n\nval menu: Subject<\nMenu\n>\n\n\n\n\n\n\nviewModel\n\n\nval viewModel: VM\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreate\n\n\nfun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nonResume\n\n\nfun onResume():\nUnit\n\n\n\n\n\n\nrender\n\n\nfun render(state:\nSetupState\n):\nUnit\n\n\n\n\n\n\nrequestDefaultSms\n\n\nfun requestDefaultSms():\nUnit\n\n\n\n\n\n\nrequestPermissions\n\n\nfun requestPermissions():\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreateOptionsMenu\n\n\nopen fun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\n\n\n\n\nonOptionsItemSelected\n\n\nopen fun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nonPostCreate\n\n\nopen fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nsetContentView\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit\n\n\n\n\n\n\nsetTitle\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/index.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#setupactivity",
            "text": "class SetupActivity : QkActivity < SetupViewModel >, SetupView",
            "title": "SetupActivity"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#constructors",
            "text": "Name  Summary      <init>  SetupActivity()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#properties",
            "text": "Name  Summary      activityResumedIntent  val activityResumedIntent: Subject< Unit >    navigator  lateinit var navigator: Navigator    nextIntent  val nextIntent: <ERROR CLASS>    skipIntent  val skipIntent: <ERROR CLASS>    viewModelClass  val viewModelClass: KClass < SetupViewModel >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#inherited-properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    menu  val menu: Subject< Menu >    viewModel  val viewModel: VM",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#functions",
            "text": "Name  Summary      onCreate  fun onCreate(savedInstanceState: Bundle ?): Unit    onResume  fun onResume(): Unit    render  fun render(state: SetupState ): Unit    requestDefaultSms  fun requestDefaultSms(): Unit    requestPermissions  fun requestPermissions(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#inherited-functions",
            "text": "Name  Summary      onCreateOptionsMenu  open fun onCreateOptionsMenu(menu: Menu ?): Boolean    onOptionsItemSelected  open fun onOptionsItemSelected(item: MenuItem ): Boolean    onPostCreate  open fun onPostCreate(savedInstanceState: Bundle ?): Unit    setContentView  open fun setContentView(layoutResID: Int ): Unit    setTitle  open fun setTitle(title: CharSequence ?): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/on-resume/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nonResume\n\n\nonResume\n\u00b6\n\n\nprotected fun onResume():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/on-resume.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/on-resume/#onresume",
            "text": "protected fun onResume(): Unit",
            "title": "onResume"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/navigator/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/-init-/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSetupActivity()",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/-init-/#init",
            "text": "SetupActivity()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/request-default-sms/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nrequestDefaultSms\n\n\nrequestDefaultSms\n\u00b6\n\n\nfun requestDefaultSms():\nUnit\n\n\nOverrides \nSetupView.requestDefaultSms",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/request-default-sms.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/request-default-sms/#requestdefaultsms",
            "text": "fun requestDefaultSms(): Unit  Overrides  SetupView.requestDefaultSms",
            "title": "requestDefaultSms"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/next-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nnextIntent\n\n\nnextIntent\n\u00b6\n\n\nval nextIntent: <ERROR CLASS>\n\n\nOverrides \nSetupView.nextIntent",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/next-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/next-intent/#nextintent",
            "text": "val nextIntent: <ERROR CLASS>  Overrides  SetupView.nextIntent",
            "title": "nextIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/activity-resumed-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nactivityResumedIntent\n\n\nactivityResumedIntent\n\u00b6\n\n\nval activityResumedIntent: Subject<\nUnit\n>\n\n\nOverrides \nSetupView.activityResumedIntent",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/activity-resumed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/activity-resumed-intent/#activityresumedintent",
            "text": "val activityResumedIntent: Subject< Unit >  Overrides  SetupView.activityResumedIntent",
            "title": "activityResumedIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/on-create/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nprotected fun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\nOverrides \nQkActivity.onCreate",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/on-create.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/on-create/#oncreate",
            "text": "protected fun onCreate(savedInstanceState: Bundle ?): Unit  Overrides  QkActivity.onCreate",
            "title": "onCreate"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/request-permissions/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nrequestPermissions\n\n\nrequestPermissions\n\u00b6\n\n\nfun requestPermissions():\nUnit\n\n\nOverrides \nSetupView.requestPermissions",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/request-permissions.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/request-permissions/#requestpermissions",
            "text": "fun requestPermissions(): Unit  Overrides  SetupView.requestPermissions",
            "title": "requestPermissions"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/skip-intent/",
            "text": "qksms\n / \npresentation.feature.setup\n / \nSetupActivity\n / \nskipIntent\n\n\nskipIntent\n\u00b6\n\n\nval skipIntent: <ERROR CLASS>\n\n\nOverrides \nSetupView.skipIntent",
            "title": "&nbsp;qksms/presentation.feature.setup/-setup-activity/skip-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/-setup-activity/skip-intent/#skipintent",
            "text": "val skipIntent: <ERROR CLASS>  Overrides  SetupView.skipIntent",
            "title": "skipIntent"
        },
        {
            "location": "/qksms/presentation.feature.setup/",
            "text": "qksms\n / \npresentation.feature.setup\n\n\nPackage presentation.feature.setup\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nSetupActivity\n\n\nclass SetupActivity :\nQkActivity\n<\nSetupViewModel\n>,\nSetupView\n\n\n\n\n\n\nSetupState\n\n\nclass SetupState\n\n\n\n\n\n\nSetupView\n\n\ninterface SetupView :\nQkView\n<\nSetupState\n>\n\n\n\n\n\n\nSetupViewModel\n\n\nclass SetupViewModel :\nQkViewModel\n<\nSetupView\n,\nSetupState\n>",
            "title": "&nbsp;qksms/presentation.feature.setup/index.md"
        },
        {
            "location": "/qksms/presentation.feature.setup/#package-presentationfeaturesetup",
            "text": "",
            "title": "Package presentation.feature.setup"
        },
        {
            "location": "/qksms/presentation.feature.setup/#types",
            "text": "Name  Summary      SetupActivity  class SetupActivity : QkActivity < SetupViewModel >, SetupView    SetupState  class SetupState    SetupView  interface SetupView : QkView < SetupState >    SetupViewModel  class SetupViewModel : QkViewModel < SetupView , SetupState >",
            "title": "Types"
        },
        {
            "location": "/qksms/data.repository/-message-repository/insert-received-sms/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ninsertReceivedSms\n\n\ninsertReceivedSms\n\u00b6\n\n\nfun insertReceivedSms(address:\nString\n, body:\nString\n, sentTime:\nLong\n):\nMessage",
            "title": "&nbsp;qksms/data.repository/-message-repository/insert-received-sms.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/insert-received-sms/#insertreceivedsms",
            "text": "fun insertReceivedSms(address: String , body: String , sentTime: Long ): Message",
            "title": "insertReceivedSms"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-unread-unseen-messages/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetUnreadUnseenMessages\n\n\ngetUnreadUnseenMessages\n\u00b6\n\n\nfun getUnreadUnseenMessages(threadId:\nLong\n): RealmResults<\nMessage\n>\n\n\nRetrieves the list of messages which should be shown in the notification\nfor a given conversation",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-unread-unseen-messages.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-unread-unseen-messages/#getunreadunseenmessages",
            "text": "fun getUnreadUnseenMessages(threadId: Long ): RealmResults< Message >  Retrieves the list of messages which should be shown in the notification\nfor a given conversation",
            "title": "getUnreadUnseenMessages"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-delivered/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkDelivered\n\n\nmarkDelivered\n\u00b6\n\n\nfun markDelivered(id:\nLong\n): Flowable<*>",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-delivered.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-delivered/#markdelivered",
            "text": "fun markDelivered(id: Long ): Flowable<*>",
            "title": "markDelivered"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-all-seen/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkAllSeen\n\n\nmarkAllSeen\n\u00b6\n\n\nfun markAllSeen():\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-all-seen.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-all-seen/#markallseen",
            "text": "fun markAllSeen(): Unit",
            "title": "markAllSeen"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-sent/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkSent\n\n\nmarkSent\n\u00b6\n\n\nfun markSent(id:\nLong\n): Flowable<*>",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-sent.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-sent/#marksent",
            "text": "fun markSent(id: Long ): Flowable<*>",
            "title": "markSent"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversation-async/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetConversationAsync\n\n\ngetConversationAsync\n\u00b6\n\n\nfun getConversationAsync(threadId:\nLong\n):\nConversation",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-conversation-async.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversation-async/#getconversationasync",
            "text": "fun getConversationAsync(threadId: Long ): Conversation",
            "title": "getConversationAsync"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-archived/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkArchived\n\n\nmarkArchived\n\u00b6\n\n\nfun markArchived(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-archived.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-archived/#markarchived",
            "text": "fun markArchived(threadId: Long ): Unit",
            "title": "markArchived"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-messages/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetMessages\n\n\ngetMessages\n\u00b6\n\n\nfun getMessages(threadId:\nLong\n): RealmResults<\nMessage\n>",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-messages.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-messages/#getmessages",
            "text": "fun getMessages(threadId: Long ): RealmResults< Message >",
            "title": "getMessages"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversations/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetConversations\n\n\ngetConversations\n\u00b6\n\n\nfun getConversations(archived:\nBoolean\n= false): Flowable<\nList\n<\nInboxItem\n>>",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-conversations.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversations/#getconversations",
            "text": "fun getConversations(archived: Boolean = false): Flowable< List < InboxItem >>",
            "title": "getConversations"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversation/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetConversation\n\n\ngetConversation\n\u00b6\n\n\nfun getConversation(threadId:\nLong\n):\nConversation\n?",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-conversation.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-conversation/#getconversation",
            "text": "fun getConversation(threadId: Long ): Conversation ?",
            "title": "getConversation"
        },
        {
            "location": "/qksms/data.repository/-message-repository/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n\n\nMessageRepository\n\u00b6\n\n\n@Singleton class MessageRepository\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessageRepository(context:\nContext\n, messageIds:\nKeys\n, cursorToConversation:\nCursorToConversation\n, cursorToPart:\nCursorToPart\n, cursorToRecipient:\nCursorToRecipient\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndeleteConversation\n\n\nfun deleteConversation(threadId:\nLong\n):\nUnit\n\n\n\n\n\n\ndeleteMessage\n\n\nfun deleteMessage(messageId:\nLong\n):\nUnit\n\n\n\n\n\n\ngetConversation\n\n\nfun getConversation(threadId:\nLong\n):\nConversation\n?\n\n\n\n\n\n\ngetConversationAsync\n\n\nfun getConversationAsync(threadId:\nLong\n):\nConversation\n\n\n\n\n\n\ngetConversations\n\n\nfun getConversations(archived:\nBoolean\n= false): Flowable<\nList\n<\nInboxItem\n>>\n\n\n\n\n\n\ngetMessages\n\n\nfun getMessages(threadId:\nLong\n): RealmResults<\nMessage\n>\n\n\n\n\n\n\ngetOrCreateConversation\n\n\nfun getOrCreateConversation(threadId:\nLong\n):\nConversation\n?\nfun getOrCreateConversation(address:\nString\n): Maybe<\nConversation\n>\nfun getOrCreateConversation(addresses:\nList\n<\nString\n>): Maybe<\nConversation\n>\n\n\n\n\n\n\ngetUnreadUnseenMessages\n\n\nfun getUnreadUnseenMessages(threadId:\nLong\n): RealmResults<\nMessage\n>\nRetrieves the list of messages which should be shown in the notification for a given conversation\n\n\n\n\n\n\ninsertReceivedSms\n\n\nfun insertReceivedSms(address:\nString\n, body:\nString\n, sentTime:\nLong\n):\nMessage\n\n\n\n\n\n\ninsertSentSms\n\n\nfun insertSentSms(threadId:\nLong\n, address:\nString\n, body:\nString\n):\nMessage\n\n\n\n\n\n\nmarkAllSeen\n\n\nfun markAllSeen():\nUnit\n\n\n\n\n\n\nmarkArchived\n\n\nfun markArchived(threadId:\nLong\n):\nUnit\n\n\n\n\n\n\nmarkDelivered\n\n\nfun markDelivered(id:\nLong\n): Flowable<*>\n\n\n\n\n\n\nmarkDeliveryFailed\n\n\nfun markDeliveryFailed(id:\nLong\n, resultCode:\nInt\n): Flowable<*>\n\n\n\n\n\n\nmarkFailed\n\n\nfun markFailed(id:\nLong\n, resultCode:\nInt\n): Flowable<*>\n\n\n\n\n\n\nmarkRead\n\n\nfun markRead(threadId:\nLong\n):\nUnit\n\n\n\n\n\n\nmarkSeen\n\n\nfun markSeen(threadId:\nLong\n):\nUnit\n\n\n\n\n\n\nmarkSent\n\n\nfun markSent(id:\nLong\n): Flowable<*>\n\n\n\n\n\n\nmarkUnarchived\n\n\nfun markUnarchived(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/index.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/#messagerepository",
            "text": "@Singleton class MessageRepository",
            "title": "MessageRepository"
        },
        {
            "location": "/qksms/data.repository/-message-repository/#constructors",
            "text": "Name  Summary      <init>  MessageRepository(context: Context , messageIds: Keys , cursorToConversation: CursorToConversation , cursorToPart: CursorToPart , cursorToRecipient: CursorToRecipient )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.repository/-message-repository/#functions",
            "text": "Name  Summary      deleteConversation  fun deleteConversation(threadId: Long ): Unit    deleteMessage  fun deleteMessage(messageId: Long ): Unit    getConversation  fun getConversation(threadId: Long ): Conversation ?    getConversationAsync  fun getConversationAsync(threadId: Long ): Conversation    getConversations  fun getConversations(archived: Boolean = false): Flowable< List < InboxItem >>    getMessages  fun getMessages(threadId: Long ): RealmResults< Message >    getOrCreateConversation  fun getOrCreateConversation(threadId: Long ): Conversation ? fun getOrCreateConversation(address: String ): Maybe< Conversation > fun getOrCreateConversation(addresses: List < String >): Maybe< Conversation >    getUnreadUnseenMessages  fun getUnreadUnseenMessages(threadId: Long ): RealmResults< Message > Retrieves the list of messages which should be shown in the notification for a given conversation    insertReceivedSms  fun insertReceivedSms(address: String , body: String , sentTime: Long ): Message    insertSentSms  fun insertSentSms(threadId: Long , address: String , body: String ): Message    markAllSeen  fun markAllSeen(): Unit    markArchived  fun markArchived(threadId: Long ): Unit    markDelivered  fun markDelivered(id: Long ): Flowable<*>    markDeliveryFailed  fun markDeliveryFailed(id: Long , resultCode: Int ): Flowable<*>    markFailed  fun markFailed(id: Long , resultCode: Int ): Flowable<*>    markRead  fun markRead(threadId: Long ): Unit    markSeen  fun markSeen(threadId: Long ): Unit    markSent  fun markSent(id: Long ): Flowable<*>    markUnarchived  fun markUnarchived(threadId: Long ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.repository/-message-repository/delete-message/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ndeleteMessage\n\n\ndeleteMessage\n\u00b6\n\n\nfun deleteMessage(messageId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/delete-message.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/delete-message/#deletemessage",
            "text": "fun deleteMessage(messageId: Long ): Unit",
            "title": "deleteMessage"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-failed/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkFailed\n\n\nmarkFailed\n\u00b6\n\n\nfun markFailed(id:\nLong\n, resultCode:\nInt\n): Flowable<*>",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-failed.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-failed/#markfailed",
            "text": "fun markFailed(id: Long , resultCode: Int ): Flowable<*>",
            "title": "markFailed"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-or-create-conversation/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ngetOrCreateConversation\n\n\ngetOrCreateConversation\n\u00b6\n\n\nfun getOrCreateConversation(threadId:\nLong\n):\nConversation\n?\n\n\nfun getOrCreateConversation(address:\nString\n): Maybe<\nConversation\n>\n\n\nfun getOrCreateConversation(addresses:\nList\n<\nString\n>): Maybe<\nConversation\n>",
            "title": "&nbsp;qksms/data.repository/-message-repository/get-or-create-conversation.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/get-or-create-conversation/#getorcreateconversation",
            "text": "fun getOrCreateConversation(threadId: Long ): Conversation ?  fun getOrCreateConversation(address: String ): Maybe< Conversation >  fun getOrCreateConversation(addresses: List < String >): Maybe< Conversation >",
            "title": "getOrCreateConversation"
        },
        {
            "location": "/qksms/data.repository/-message-repository/-init-/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessageRepository(context:\nContext\n, messageIds:\nKeys\n, cursorToConversation:\nCursorToConversation\n, cursorToPart:\nCursorToPart\n, cursorToRecipient:\nCursorToRecipient\n)",
            "title": "&nbsp;qksms/data.repository/-message-repository/-init-.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/-init-/#init",
            "text": "MessageRepository(context: Context , messageIds: Keys , cursorToConversation: CursorToConversation , cursorToPart: CursorToPart , cursorToRecipient: CursorToRecipient )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-seen/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkSeen\n\n\nmarkSeen\n\u00b6\n\n\nfun markSeen(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-seen.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-seen/#markseen",
            "text": "fun markSeen(threadId: Long ): Unit",
            "title": "markSeen"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-delivery-failed/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkDeliveryFailed\n\n\nmarkDeliveryFailed\n\u00b6\n\n\nfun markDeliveryFailed(id:\nLong\n, resultCode:\nInt\n): Flowable<*>",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-delivery-failed.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-delivery-failed/#markdeliveryfailed",
            "text": "fun markDeliveryFailed(id: Long , resultCode: Int ): Flowable<*>",
            "title": "markDeliveryFailed"
        },
        {
            "location": "/qksms/data.repository/-message-repository/insert-sent-sms/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ninsertSentSms\n\n\ninsertSentSms\n\u00b6\n\n\nfun insertSentSms(threadId:\nLong\n, address:\nString\n, body:\nString\n):\nMessage",
            "title": "&nbsp;qksms/data.repository/-message-repository/insert-sent-sms.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/insert-sent-sms/#insertsentsms",
            "text": "fun insertSentSms(threadId: Long , address: String , body: String ): Message",
            "title": "insertSentSms"
        },
        {
            "location": "/qksms/data.repository/-message-repository/delete-conversation/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \ndeleteConversation\n\n\ndeleteConversation\n\u00b6\n\n\nfun deleteConversation(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/delete-conversation.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/delete-conversation/#deleteconversation",
            "text": "fun deleteConversation(threadId: Long ): Unit",
            "title": "deleteConversation"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-unarchived/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkUnarchived\n\n\nmarkUnarchived\n\u00b6\n\n\nfun markUnarchived(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-unarchived.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-unarchived/#markunarchived",
            "text": "fun markUnarchived(threadId: Long ): Unit",
            "title": "markUnarchived"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-read/",
            "text": "qksms\n / \ndata.repository\n / \nMessageRepository\n / \nmarkRead\n\n\nmarkRead\n\u00b6\n\n\nfun markRead(threadId:\nLong\n):\nUnit",
            "title": "&nbsp;qksms/data.repository/-message-repository/mark-read.md"
        },
        {
            "location": "/qksms/data.repository/-message-repository/mark-read/#markread",
            "text": "fun markRead(threadId: Long ): Unit",
            "title": "markRead"
        },
        {
            "location": "/qksms/data.repository/",
            "text": "qksms\n / \ndata.repository\n\n\nPackage data.repository\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactRepository\n\n\nclass ContactRepository\n\n\n\n\n\n\nMessageRepository\n\n\nclass MessageRepository",
            "title": "&nbsp;qksms/data.repository/index.md"
        },
        {
            "location": "/qksms/data.repository/#package-datarepository",
            "text": "",
            "title": "Package data.repository"
        },
        {
            "location": "/qksms/data.repository/#types",
            "text": "Name  Summary      ContactRepository  class ContactRepository    MessageRepository  class MessageRepository",
            "title": "Types"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/get-unmanaged-contacts/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n / \ngetUnmanagedContacts\n\n\ngetUnmanagedContacts\n\u00b6\n\n\nfun getUnmanagedContacts(): Flowable<\nList\n<\nContact\n>>",
            "title": "&nbsp;qksms/data.repository/-contact-repository/get-unmanaged-contacts.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/get-unmanaged-contacts/#getunmanagedcontacts",
            "text": "fun getUnmanagedContacts(): Flowable< List < Contact >>",
            "title": "getUnmanagedContacts"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/context/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/data.repository/-contact-repository/context.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n\n\nContactRepository\n\u00b6\n\n\n@Singleton class ContactRepository\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactRepository(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nfindContactUri\n\n\nfun findContactUri(address:\nString\n): Single<\nUri\n>\n\n\n\n\n\n\ngetContactBlocking\n\n\nfun getContactBlocking(address:\nString\n):\nContact\n?\n\n\n\n\n\n\ngetUnmanagedContacts\n\n\nfun getUnmanagedContacts(): Flowable<\nList\n<\nContact\n>>",
            "title": "&nbsp;qksms/data.repository/-contact-repository/index.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/#contactrepository",
            "text": "@Singleton class ContactRepository",
            "title": "ContactRepository"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/#constructors",
            "text": "Name  Summary      <init>  ContactRepository(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/#properties",
            "text": "Name  Summary      context  val context: Context",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/#functions",
            "text": "Name  Summary      findContactUri  fun findContactUri(address: String ): Single< Uri >    getContactBlocking  fun getContactBlocking(address: String ): Contact ?    getUnmanagedContacts  fun getUnmanagedContacts(): Flowable< List < Contact >>",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/-init-/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactRepository(context:\nContext\n)",
            "title": "&nbsp;qksms/data.repository/-contact-repository/-init-.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/-init-/#init",
            "text": "ContactRepository(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/find-contact-uri/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n / \nfindContactUri\n\n\nfindContactUri\n\u00b6\n\n\nfun findContactUri(address:\nString\n): Single<\nUri\n>",
            "title": "&nbsp;qksms/data.repository/-contact-repository/find-contact-uri.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/find-contact-uri/#findcontacturi",
            "text": "fun findContactUri(address: String ): Single< Uri >",
            "title": "findContactUri"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/get-contact-blocking/",
            "text": "qksms\n / \ndata.repository\n / \nContactRepository\n / \ngetContactBlocking\n\n\ngetContactBlocking\n\u00b6\n\n\nfun getContactBlocking(address:\nString\n):\nContact\n?",
            "title": "&nbsp;qksms/data.repository/-contact-repository/get-contact-blocking.md"
        },
        {
            "location": "/qksms/data.repository/-contact-repository/get-contact-blocking/#getcontactblocking",
            "text": "fun getContactBlocking(address: String ): Contact ?",
            "title": "getContactBlocking"
        },
        {
            "location": "/qksms/common.di/",
            "text": "qksms\n / \ncommon.di\n\n\nPackage common.di\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAppComponent\n\n\ninterface AppComponent\n\n\n\n\n\n\nAppModule\n\n\nclass AppModule",
            "title": "&nbsp;qksms/common.di/index.md"
        },
        {
            "location": "/qksms/common.di/#package-commondi",
            "text": "",
            "title": "Package common.di"
        },
        {
            "location": "/qksms/common.di/#types",
            "text": "Name  Summary      AppComponent  interface AppComponent    AppModule  class AppModule",
            "title": "Types"
        },
        {
            "location": "/qksms/common.di/-app-component/inject/",
            "text": "qksms\n / \ncommon.di\n / \nAppComponent\n / \ninject\n\n\ninject\n\u00b6\n\n\nabstract fun inject(application:\nQKApplication\n):\nUnit\n\n\nabstract fun inject(activity:\nMainActivity\n):\nUnit\n\n\nabstract fun inject(activity:\nSetupActivity\n):\nUnit\n\n\nabstract fun inject(activity:\nComposeActivity\n):\nUnit\n\n\nabstract fun inject(activity:\nSettingsActivity\n):\nUnit\n\n\nabstract fun inject(receiver:\nDefaultSmsChangedReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nSmsReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMessageDeliveredReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMessageSentReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMarkSeenReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMarkReadReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMmsReceivedReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMmsSentReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nMmsUpdatedReceiver\n):\nUnit\n\n\nabstract fun inject(receiver:\nRemoteMessagingReceiver\n):\nUnit\n\n\nabstract fun inject(view:\nAvatarView\n):\nUnit\n\n\nabstract fun inject(view:\nDetailedChipView\n):\nUnit\n\n\nabstract fun inject(view:\nQkEditText\n):\nUnit\n\n\nabstract fun inject(view:\nQkSwitch\n):\nUnit\n\n\nabstract fun inject(view:\nQkTextView\n):\nUnit\n\n\nabstract fun inject(view:\nSeparator\n):\nUnit\n\n\nabstract fun inject(viewModel:\nMainViewModel\n):\nUnit\n\n\nabstract fun inject(viewModel:\nSetupViewModel\n):\nUnit\n\n\nabstract fun inject(viewModel:\nComposeViewModel\n):\nUnit\n\n\nabstract fun inject(viewModel:\nSettingsViewModel\n):\nUnit\n\n\nabstract fun inject(fetcher:\nContactImageFetcher\n):\nUnit",
            "title": "&nbsp;qksms/common.di/-app-component/inject.md"
        },
        {
            "location": "/qksms/common.di/-app-component/inject/#inject",
            "text": "abstract fun inject(application: QKApplication ): Unit  abstract fun inject(activity: MainActivity ): Unit  abstract fun inject(activity: SetupActivity ): Unit  abstract fun inject(activity: ComposeActivity ): Unit  abstract fun inject(activity: SettingsActivity ): Unit  abstract fun inject(receiver: DefaultSmsChangedReceiver ): Unit  abstract fun inject(receiver: SmsReceiver ): Unit  abstract fun inject(receiver: MessageDeliveredReceiver ): Unit  abstract fun inject(receiver: MessageSentReceiver ): Unit  abstract fun inject(receiver: MarkSeenReceiver ): Unit  abstract fun inject(receiver: MarkReadReceiver ): Unit  abstract fun inject(receiver: MmsReceivedReceiver ): Unit  abstract fun inject(receiver: MmsSentReceiver ): Unit  abstract fun inject(receiver: MmsUpdatedReceiver ): Unit  abstract fun inject(receiver: RemoteMessagingReceiver ): Unit  abstract fun inject(view: AvatarView ): Unit  abstract fun inject(view: DetailedChipView ): Unit  abstract fun inject(view: QkEditText ): Unit  abstract fun inject(view: QkSwitch ): Unit  abstract fun inject(view: QkTextView ): Unit  abstract fun inject(view: Separator ): Unit  abstract fun inject(viewModel: MainViewModel ): Unit  abstract fun inject(viewModel: SetupViewModel ): Unit  abstract fun inject(viewModel: ComposeViewModel ): Unit  abstract fun inject(viewModel: SettingsViewModel ): Unit  abstract fun inject(fetcher: ContactImageFetcher ): Unit",
            "title": "inject"
        },
        {
            "location": "/qksms/common.di/-app-component/",
            "text": "qksms\n / \ncommon.di\n / \nAppComponent\n\n\nAppComponent\n\u00b6\n\n\n@Singleton @Component([AppModule]) interface AppComponent\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ninject\n\n\nabstract fun inject(application:\nQKApplication\n):\nUnit\nabstract fun inject(activity:\nMainActivity\n):\nUnit\nabstract fun inject(activity:\nSetupActivity\n):\nUnit\nabstract fun inject(activity:\nComposeActivity\n):\nUnit\nabstract fun inject(activity:\nSettingsActivity\n):\nUnit\nabstract fun inject(receiver:\nDefaultSmsChangedReceiver\n):\nUnit\nabstract fun inject(receiver:\nSmsReceiver\n):\nUnit\nabstract fun inject(receiver:\nMessageDeliveredReceiver\n):\nUnit\nabstract fun inject(receiver:\nMessageSentReceiver\n):\nUnit\nabstract fun inject(receiver:\nMarkSeenReceiver\n):\nUnit\nabstract fun inject(receiver:\nMarkReadReceiver\n):\nUnit\nabstract fun inject(receiver:\nMmsReceivedReceiver\n):\nUnit\nabstract fun inject(receiver:\nMmsSentReceiver\n):\nUnit\nabstract fun inject(receiver:\nMmsUpdatedReceiver\n):\nUnit\nabstract fun inject(receiver:\nRemoteMessagingReceiver\n):\nUnit\nabstract fun inject(view:\nAvatarView\n):\nUnit\nabstract fun inject(view:\nDetailedChipView\n):\nUnit\nabstract fun inject(view:\nQkEditText\n):\nUnit\nabstract fun inject(view:\nQkSwitch\n):\nUnit\nabstract fun inject(view:\nQkTextView\n):\nUnit\nabstract fun inject(view:\nSeparator\n):\nUnit\nabstract fun inject(viewModel:\nMainViewModel\n):\nUnit\nabstract fun inject(viewModel:\nSetupViewModel\n):\nUnit\nabstract fun inject(viewModel:\nComposeViewModel\n):\nUnit\nabstract fun inject(viewModel:\nSettingsViewModel\n):\nUnit\nabstract fun inject(fetcher:\nContactImageFetcher\n):\nUnit",
            "title": "&nbsp;qksms/common.di/-app-component/index.md"
        },
        {
            "location": "/qksms/common.di/-app-component/#appcomponent",
            "text": "@Singleton @Component([AppModule]) interface AppComponent",
            "title": "AppComponent"
        },
        {
            "location": "/qksms/common.di/-app-component/#functions",
            "text": "Name  Summary      inject  abstract fun inject(application: QKApplication ): Unit abstract fun inject(activity: MainActivity ): Unit abstract fun inject(activity: SetupActivity ): Unit abstract fun inject(activity: ComposeActivity ): Unit abstract fun inject(activity: SettingsActivity ): Unit abstract fun inject(receiver: DefaultSmsChangedReceiver ): Unit abstract fun inject(receiver: SmsReceiver ): Unit abstract fun inject(receiver: MessageDeliveredReceiver ): Unit abstract fun inject(receiver: MessageSentReceiver ): Unit abstract fun inject(receiver: MarkSeenReceiver ): Unit abstract fun inject(receiver: MarkReadReceiver ): Unit abstract fun inject(receiver: MmsReceivedReceiver ): Unit abstract fun inject(receiver: MmsSentReceiver ): Unit abstract fun inject(receiver: MmsUpdatedReceiver ): Unit abstract fun inject(receiver: RemoteMessagingReceiver ): Unit abstract fun inject(view: AvatarView ): Unit abstract fun inject(view: DetailedChipView ): Unit abstract fun inject(view: QkEditText ): Unit abstract fun inject(view: QkSwitch ): Unit abstract fun inject(view: QkTextView ): Unit abstract fun inject(view: Separator ): Unit abstract fun inject(viewModel: MainViewModel ): Unit abstract fun inject(viewModel: SetupViewModel ): Unit abstract fun inject(viewModel: ComposeViewModel ): Unit abstract fun inject(viewModel: SettingsViewModel ): Unit abstract fun inject(fetcher: ContactImageFetcher ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.di/-app-module/",
            "text": "qksms\n / \ncommon.di\n / \nAppModule\n\n\nAppModule\n\u00b6\n\n\nclass AppModule\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nAppModule(application:\nApplication\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nprovideAnalytics\n\n\nfun provideAnalytics(analytics:\nAnalyticsImpl\n):\nAnalytics\n\n\n\n\n\n\nprovideContext\n\n\nfun provideContext():\nContext\n\n\n\n\n\n\nprovideRxPreferences\n\n\nfun provideRxPreferences(context:\nContext\n): RxSharedPreferences",
            "title": "&nbsp;qksms/common.di/-app-module/index.md"
        },
        {
            "location": "/qksms/common.di/-app-module/#appmodule",
            "text": "class AppModule",
            "title": "AppModule"
        },
        {
            "location": "/qksms/common.di/-app-module/#constructors",
            "text": "Name  Summary      <init>  AppModule(application: Application )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.di/-app-module/#functions",
            "text": "Name  Summary      provideAnalytics  fun provideAnalytics(analytics: AnalyticsImpl ): Analytics    provideContext  fun provideContext(): Context    provideRxPreferences  fun provideRxPreferences(context: Context ): RxSharedPreferences",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-context/",
            "text": "qksms\n / \ncommon.di\n / \nAppModule\n / \nprovideContext\n\n\nprovideContext\n\u00b6\n\n\n@Provides @Singleton fun provideContext():\nContext",
            "title": "&nbsp;qksms/common.di/-app-module/provide-context.md"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-context/#providecontext",
            "text": "@Provides @Singleton fun provideContext(): Context",
            "title": "provideContext"
        },
        {
            "location": "/qksms/common.di/-app-module/-init-/",
            "text": "qksms\n / \ncommon.di\n / \nAppModule\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nAppModule(application:\nApplication\n)",
            "title": "&nbsp;qksms/common.di/-app-module/-init-.md"
        },
        {
            "location": "/qksms/common.di/-app-module/-init-/#init",
            "text": "AppModule(application: Application )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-analytics/",
            "text": "qksms\n / \ncommon.di\n / \nAppModule\n / \nprovideAnalytics\n\n\nprovideAnalytics\n\u00b6\n\n\n@Provides fun provideAnalytics(analytics:\nAnalyticsImpl\n):\nAnalytics",
            "title": "&nbsp;qksms/common.di/-app-module/provide-analytics.md"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-analytics/#provideanalytics",
            "text": "@Provides fun provideAnalytics(analytics: AnalyticsImpl ): Analytics",
            "title": "provideAnalytics"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-rx-preferences/",
            "text": "qksms\n / \ncommon.di\n / \nAppModule\n / \nprovideRxPreferences\n\n\nprovideRxPreferences\n\u00b6\n\n\n@Provides @Singleton fun provideRxPreferences(context:\nContext\n): RxSharedPreferences",
            "title": "&nbsp;qksms/common.di/-app-module/provide-rx-preferences.md"
        },
        {
            "location": "/qksms/common.di/-app-module/provide-rx-preferences/#providerxpreferences",
            "text": "@Provides @Singleton fun provideRxPreferences(context: Context ): RxSharedPreferences",
            "title": "provideRxPreferences"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/on-attached-to-window/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkEditText\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-edit-text/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/on-attached-to-window/#onattachedtowindow",
            "text": "protected fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkEditText\n\n\nQkEditText\n\u00b6\n\n\nclass QkEditText :\nEditText\n\n\nCustom implementation of EditText to allow for dynamic text colors\n\n\nBeware of updating to extend AppCompatTextView, as this inexplicably breaks the view in\nthe contacts chip view\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkEditText(context:\nContext\n, attrs:\nAttributeSet\n? = null)\nCustom implementation of EditText to allow for dynamic text colors\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit\n\n\n\n\n\n\nshowKeyboard\n\n\nfun\nEditText\n.showKeyboard():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-edit-text/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/#qkedittext",
            "text": "class QkEditText : EditText  Custom implementation of EditText to allow for dynamic text colors  Beware of updating to extend AppCompatTextView, as this inexplicably breaks the view in\nthe contacts chip view",
            "title": "QkEditText"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/#constructors",
            "text": "Name  Summary      <init>  QkEditText(context: Context , attrs: AttributeSet ? = null) Custom implementation of EditText to allow for dynamic text colors",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/#functions",
            "text": "Name  Summary      onAttachedToWindow  fun onAttachedToWindow(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit    showKeyboard  fun EditText .showKeyboard(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/colors/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkEditText\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-edit-text/colors.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkEditText\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkEditText(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\nCustom implementation of EditText to allow for dynamic text colors\n\n\nBeware of updating to extend AppCompatTextView, as this inexplicably breaks the view in\nthe contacts chip view",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-edit-text/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-edit-text/-init-/#init",
            "text": "QkEditText(context: Context , attrs: AttributeSet ? = null)  Custom implementation of EditText to allow for dynamic text colors  Beware of updating to extend AppCompatTextView, as this inexplicably breaks the view in\nthe contacts chip view",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/summary/",
            "text": "qksms\n / \npresentation.common.widget\n / \nPreferenceView\n / \nsummary\n\n\nsummary\n\u00b6\n\n\nvar summary:\nString\n?",
            "title": "&nbsp;qksms/presentation.common.widget/-preference-view/summary.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/summary/#summary",
            "text": "var summary: String ?",
            "title": "summary"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/title/",
            "text": "qksms\n / \npresentation.common.widget\n / \nPreferenceView\n / \ntitle\n\n\ntitle\n\u00b6\n\n\nvar title:\nString\n?",
            "title": "&nbsp;qksms/presentation.common.widget/-preference-view/title.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/title/#title",
            "text": "var title: String ?",
            "title": "title"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nPreferenceView\n\n\nPreferenceView\n\u00b6\n\n\nclass PreferenceView : LinearLayoutCompat\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPreferenceView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsummary\n\n\nvar summary:\nString\n?\n\n\n\n\n\n\ntitle\n\n\nvar title:\nString\n?\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-preference-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/#preferenceview",
            "text": "class PreferenceView : LinearLayoutCompat",
            "title": "PreferenceView"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/#constructors",
            "text": "Name  Summary      <init>  PreferenceView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/#properties",
            "text": "Name  Summary      summary  var summary: String ?    title  var title: String ?",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nPreferenceView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPreferenceView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-preference-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-preference-view/-init-/#init",
            "text": "PreferenceView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/",
            "text": "qksms\n / \npresentation.common.widget\n\n\nPackage presentation.common.widget\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAvatarView\n\n\nclass AvatarView :\nFrameLayout\n\n\n\n\n\n\nGroupAvatarView\n\n\nclass GroupAvatarView : ConstraintLayout\n\n\n\n\n\n\nMmsPreviewView\n\n\nclass MmsPreviewView :\nLinearLayout\n\n\n\n\n\n\nPreferenceView\n\n\nclass PreferenceView : LinearLayoutCompat\n\n\n\n\n\n\nQkEditText\n\n\nclass QkEditText :\nEditText\nCustom implementation of EditText to allow for dynamic text colors\n\n\n\n\n\n\nQkSwitch\n\n\nclass QkSwitch : SwitchCompat\n\n\n\n\n\n\nQkTextView\n\n\nopen class QkTextView : AppCompatTextView\n\n\n\n\n\n\nSeparator\n\n\nclass Separator :\nView\n\n\n\n\n\n\nTightTextView\n\n\nclass TightTextView :\nQkTextView",
            "title": "&nbsp;qksms/presentation.common.widget/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/#package-presentationcommonwidget",
            "text": "",
            "title": "Package presentation.common.widget"
        },
        {
            "location": "/qksms/presentation.common.widget/#types",
            "text": "Name  Summary      AvatarView  class AvatarView : FrameLayout    GroupAvatarView  class GroupAvatarView : ConstraintLayout    MmsPreviewView  class MmsPreviewView : LinearLayout    PreferenceView  class PreferenceView : LinearLayoutCompat    QkEditText  class QkEditText : EditText Custom implementation of EditText to allow for dynamic text colors    QkSwitch  class QkSwitch : SwitchCompat    QkTextView  open class QkTextView : AppCompatTextView    Separator  class Separator : View    TightTextView  class TightTextView : QkTextView",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/on-attached-to-window/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkTextView\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected open fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-text-view/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/on-attached-to-window/#onattachedtowindow",
            "text": "protected open fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkTextView\n\n\nQkTextView\n\u00b6\n\n\nopen class QkTextView : AppCompatTextView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkTextView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nopen fun onAttachedToWindow():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nTightTextView\n\n\nclass TightTextView : QkTextView",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-text-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#qktextview",
            "text": "open class QkTextView : AppCompatTextView",
            "title": "QkTextView"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#constructors",
            "text": "Name  Summary      <init>  QkTextView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#functions",
            "text": "Name  Summary      onAttachedToWindow  open fun onAttachedToWindow(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/#inheritors",
            "text": "Name  Summary      TightTextView  class TightTextView : QkTextView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/colors/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkTextView\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-text-view/colors.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkTextView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkTextView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-text-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-text-view/-init-/#init",
            "text": "QkTextView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nTightTextView\n\n\nTightTextView\n\u00b6\n\n\nclass TightTextView :\nQkTextView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nTightTextView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonMeasure\n\n\nfun onMeasure(widthMeasureSpec:\nInt\n, heightMeasureSpec:\nInt\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nopen fun onAttachedToWindow():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-tight-text-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#tighttextview",
            "text": "class TightTextView : QkTextView",
            "title": "TightTextView"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#constructors",
            "text": "Name  Summary      <init>  TightTextView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#inherited-properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#functions",
            "text": "Name  Summary      onMeasure  fun onMeasure(widthMeasureSpec: Int , heightMeasureSpec: Int ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#inherited-functions",
            "text": "Name  Summary      onAttachedToWindow  open fun onAttachedToWindow(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nTightTextView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nTightTextView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-tight-text-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/-init-/#init",
            "text": "TightTextView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/on-measure/",
            "text": "qksms\n / \npresentation.common.widget\n / \nTightTextView\n / \nonMeasure\n\n\nonMeasure\n\u00b6\n\n\nprotected fun onMeasure(widthMeasureSpec:\nInt\n, heightMeasureSpec:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-tight-text-view/on-measure.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-tight-text-view/on-measure/#onmeasure",
            "text": "protected fun onMeasure(widthMeasureSpec: Int , heightMeasureSpec: Int ): Unit",
            "title": "onMeasure"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/on-attached-to-window/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkSwitch\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-switch/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/on-attached-to-window/#onattachedtowindow",
            "text": "protected fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkSwitch\n\n\nQkSwitch\n\u00b6\n\n\nclass QkSwitch : SwitchCompat\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkSwitch(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-switch/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/#qkswitch",
            "text": "class QkSwitch : SwitchCompat",
            "title": "QkSwitch"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/#constructors",
            "text": "Name  Summary      <init>  QkSwitch(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/#functions",
            "text": "Name  Summary      onAttachedToWindow  fun onAttachedToWindow(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/colors/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkSwitch\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-switch/colors.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nQkSwitch\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkSwitch(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-qk-switch/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-qk-switch/-init-/#init",
            "text": "QkSwitch(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nGroupAvatarView\n\n\nGroupAvatarView\n\u00b6\n\n\nclass GroupAvatarView : ConstraintLayout\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nGroupAvatarView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontacts\n\n\nvar contacts:\nList\n<\nContact\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonFinishInflate\n\n\nfun onFinishInflate():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-group-avatar-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/#groupavatarview",
            "text": "class GroupAvatarView : ConstraintLayout",
            "title": "GroupAvatarView"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/#constructors",
            "text": "Name  Summary      <init>  GroupAvatarView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/#properties",
            "text": "Name  Summary      contacts  var contacts: List < Contact >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/#functions",
            "text": "Name  Summary      onFinishInflate  fun onFinishInflate(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/contacts/",
            "text": "qksms\n / \npresentation.common.widget\n / \nGroupAvatarView\n / \ncontacts\n\n\ncontacts\n\u00b6\n\n\nvar contacts:\nList\n<\nContact\n>",
            "title": "&nbsp;qksms/presentation.common.widget/-group-avatar-view/contacts.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/contacts/#contacts",
            "text": "var contacts: List < Contact >",
            "title": "contacts"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nGroupAvatarView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nGroupAvatarView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-group-avatar-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/-init-/#init",
            "text": "GroupAvatarView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/on-finish-inflate/",
            "text": "qksms\n / \npresentation.common.widget\n / \nGroupAvatarView\n / \nonFinishInflate\n\n\nonFinishInflate\n\u00b6\n\n\nprotected fun onFinishInflate():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-group-avatar-view/on-finish-inflate.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-group-avatar-view/on-finish-inflate/#onfinishinflate",
            "text": "protected fun onFinishInflate(): Unit",
            "title": "onFinishInflate"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/contact/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \ncontact\n\n\ncontact\n\u00b6\n\n\nvar contact:\nContact\n?",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/contact.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/contact/#contact",
            "text": "var contact: Contact ?",
            "title": "contact"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/on-attached-to-window/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/on-attached-to-window/#onattachedtowindow",
            "text": "protected fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n\n\nAvatarView\n\u00b6\n\n\nclass AvatarView :\nFrameLayout\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nAvatarView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\ncontact\n\n\nvar contact:\nContact\n?\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\nonFinishInflate\n\n\nfun onFinishInflate():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/#avatarview",
            "text": "class AvatarView : FrameLayout",
            "title": "AvatarView"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/#constructors",
            "text": "Name  Summary      <init>  AvatarView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    contact  var contact: Contact ?    navigator  lateinit var navigator: Navigator",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/#functions",
            "text": "Name  Summary      onAttachedToWindow  fun onAttachedToWindow(): Unit    onFinishInflate  fun onFinishInflate(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/navigator/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/navigator.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/colors/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/colors.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nAvatarView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/-init-/#init",
            "text": "AvatarView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/on-finish-inflate/",
            "text": "qksms\n / \npresentation.common.widget\n / \nAvatarView\n / \nonFinishInflate\n\n\nonFinishInflate\n\u00b6\n\n\nprotected fun onFinishInflate():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-avatar-view/on-finish-inflate.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-avatar-view/on-finish-inflate/#onfinishinflate",
            "text": "protected fun onFinishInflate(): Unit",
            "title": "onFinishInflate"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/on-attached-to-window/",
            "text": "qksms\n / \npresentation.common.widget\n / \nSeparator\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-separator/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/on-attached-to-window/#onattachedtowindow",
            "text": "protected fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/",
            "text": "qksms\n / \npresentation.common.widget\n / \nSeparator\n\n\nSeparator\n\u00b6\n\n\nclass Separator :\nView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSeparator(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-separator/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/#separator",
            "text": "class Separator : View",
            "title": "Separator"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/#constructors",
            "text": "Name  Summary      <init>  Separator(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/#functions",
            "text": "Name  Summary      onAttachedToWindow  fun onAttachedToWindow(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/colors/",
            "text": "qksms\n / \npresentation.common.widget\n / \nSeparator\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.widget/-separator/colors.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nSeparator\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSeparator(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-separator/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-separator/-init-/#init",
            "text": "Separator(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/",
            "text": "qksms\n / \npresentation.common.widget\n / \nMmsPreviewView\n\n\nMmsPreviewView\n\u00b6\n\n\nclass MmsPreviewView :\nLinearLayout\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsPreviewView(context:\nContext\n, attrs:\nAttributeSet\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nparts\n\n\nvar parts:\nList\n<\nMmsPart\n>\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.common.widget/-mms-preview-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/#mmspreviewview",
            "text": "class MmsPreviewView : LinearLayout",
            "title": "MmsPreviewView"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/#constructors",
            "text": "Name  Summary      <init>  MmsPreviewView(context: Context , attrs: AttributeSet ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/#properties",
            "text": "Name  Summary      parts  var parts: List < MmsPart >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/parts/",
            "text": "qksms\n / \npresentation.common.widget\n / \nMmsPreviewView\n / \nparts\n\n\nparts\n\u00b6\n\n\nvar parts:\nList\n<\nMmsPart\n>",
            "title": "&nbsp;qksms/presentation.common.widget/-mms-preview-view/parts.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/parts/#parts",
            "text": "var parts: List < MmsPart >",
            "title": "parts"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/-init-/",
            "text": "qksms\n / \npresentation.common.widget\n / \nMmsPreviewView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsPreviewView(context:\nContext\n, attrs:\nAttributeSet\n? = null)",
            "title": "&nbsp;qksms/presentation.common.widget/-mms-preview-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.widget/-mms-preview-view/-init-/#init",
            "text": "MmsPreviewView(context: Context , attrs: AttributeSet ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n\n\nAttachmentAdapter\n\u00b6\n\n\nclass AttachmentAdapter :\nQkAdapter\n<\nUri\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nAttachmentAdapter(context:\nContext\n, colors:\nColors\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nattachmentDeleted\n\n\nval attachmentDeleted: Subject<\nUri\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\nonDetachedFromRecyclerView\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView?):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#attachmentadapter",
            "text": "class AttachmentAdapter : QkAdapter < Uri >",
            "title": "AttachmentAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#constructors",
            "text": "Name  Summary      <init>  AttachmentAdapter(context: Context , colors: Colors )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#properties",
            "text": "Name  Summary      attachmentDeleted  val attachmentDeleted: Subject< Uri >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#functions",
            "text": "Name  Summary      onBindViewHolder  fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder    onDetachedFromRecyclerView  fun onDetachedFromRecyclerView(recyclerView: RecyclerView?): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nAttachmentAdapter(context:\nContext\n, colors:\nColors\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/-init-/#init",
            "text": "AttachmentAdapter(context: Context , colors: Colors )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-detached-from-recycler-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n / \nonDetachedFromRecyclerView\n\n\nonDetachedFromRecyclerView\n\u00b6\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView?):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/on-detached-from-recycler-view.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-detached-from-recycler-view/#ondetachedfromrecyclerview",
            "text": "fun onDetachedFromRecyclerView(recyclerView: RecyclerView?): Unit",
            "title": "onDetachedFromRecyclerView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/attachment-deleted/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nAttachmentAdapter\n / \nattachmentDeleted\n\n\nattachmentDeleted\n\u00b6\n\n\nval attachmentDeleted: Subject<\nUri\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-attachment-adapter/attachment-deleted.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-attachment-adapter/attachment-deleted/#attachmentdeleted",
            "text": "val attachmentDeleted: Subject< Uri >",
            "title": "attachmentDeleted"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/set-contact/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \nsetContact\n\n\nsetContact\n\u00b6\n\n\nfun setContact(contact:\nContact\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/set-contact.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/set-contact/#setcontact",
            "text": "fun setContact(contact: Contact ): Unit",
            "title": "setContact"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/on-attached-to-window/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nprotected fun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/on-attached-to-window/#onattachedtowindow",
            "text": "protected fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n\n\nDetailedChipView\n\u00b6\n\n\nclass DetailedChipView :\nRelativeLayout\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nDetailedChipView(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nhide\n\n\nfun hide():\nUnit\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\nsetContact\n\n\nfun setContact(contact:\nContact\n):\nUnit\n\n\n\n\n\n\nsetOnDeleteListener\n\n\nfun setOnDeleteListener(listener: (\nView\n) ->\nUnit\n):\nUnit\n\n\n\n\n\n\nshow\n\n\nfun show():\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetBackgroundTint\n\n\nfun\nView\n.setBackgroundTint(color:\nInt\n):\nUnit\n\n\n\n\n\n\nsetMargins\n\n\nfun\nView\n.setMargins(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetPadding\n\n\nfun\nView\n.setPadding(left:\nInt\n? = null, top:\nInt\n? = null, right:\nInt\n? = null, bottom:\nInt\n? = null):\nUnit\n\n\n\n\n\n\nsetVisible\n\n\nfun\nView\n.setVisible(visible:\nBoolean\n, invisible:\nInt\n= View.GONE):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/#detailedchipview",
            "text": "class DetailedChipView : RelativeLayout",
            "title": "DetailedChipView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/#constructors",
            "text": "Name  Summary      <init>  DetailedChipView(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/#functions",
            "text": "Name  Summary      hide  fun hide(): Unit    onAttachedToWindow  fun onAttachedToWindow(): Unit    setContact  fun setContact(contact: Contact ): Unit    setOnDeleteListener  fun setOnDeleteListener(listener: ( View ) -> Unit ): Unit    show  fun show(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/#extension-functions",
            "text": "Name  Summary      setBackgroundTint  fun View .setBackgroundTint(color: Int ): Unit    setMargins  fun View .setMargins(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setPadding  fun View .setPadding(left: Int ? = null, top: Int ? = null, right: Int ? = null, bottom: Int ? = null): Unit    setVisible  fun View .setVisible(visible: Boolean , invisible: Int = View.GONE): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/show/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \nshow\n\n\nshow\n\u00b6\n\n\nfun show():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/show.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/show/#show",
            "text": "fun show(): Unit",
            "title": "show"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/colors/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/colors.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nDetailedChipView(context:\nContext\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/-init-/#init",
            "text": "DetailedChipView(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/set-on-delete-listener/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \nsetOnDeleteListener\n\n\nsetOnDeleteListener\n\u00b6\n\n\nfun setOnDeleteListener(listener: (\nView\n) ->\nUnit\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/set-on-delete-listener.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/set-on-delete-listener/#setondeletelistener",
            "text": "fun setOnDeleteListener(listener: ( View ) -> Unit ): Unit",
            "title": "setOnDeleteListener"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/hide/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nDetailedChipView\n / \nhide\n\n\nhide\n\u00b6\n\n\nfun hide():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-detailed-chip-view/hide.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-detailed-chip-view/hide/#hide",
            "text": "fun hide(): Unit",
            "title": "hide"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-touch-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchTouchEvent\n\n\ndispatchTouchEvent\n\u00b6\n\n\nfun dispatchTouchEvent(motionEvent:\nMotionEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-touch-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-touch-event/#dispatchtouchevent",
            "text": "fun dispatchTouchEvent(motionEvent: MotionEvent ): Boolean",
            "title": "dispatchTouchEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonCreatePanelView\n\n\nonCreatePanelView\n\u00b6\n\n\nfun onCreatePanelView(i:\nInt\n):\nView\n?",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-view.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-view/#oncreatepanelview",
            "text": "fun onCreatePanelView(i: Int ): View ?",
            "title": "onCreatePanelView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-prepare-panel/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonPreparePanel\n\n\nonPreparePanel\n\u00b6\n\n\nfun onPreparePanel(i:\nInt\n, view:\nView\n, menu:\nMenu\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-prepare-panel.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-prepare-panel/#onpreparepanel",
            "text": "fun onPreparePanel(i: Int , view: View , menu: Menu ): Boolean",
            "title": "onPreparePanel"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-starting-action-mode/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonWindowStartingActionMode\n\n\nonWindowStartingActionMode\n\u00b6\n\n\nfun onWindowStartingActionMode(callback:\nCallback\n):\nActionMode\n?\n\n\nfun onWindowStartingActionMode(callback:\nCallback\n, i:\nInt\n):\nActionMode\n?",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-window-starting-action-mode.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-starting-action-mode/#onwindowstartingactionmode",
            "text": "fun onWindowStartingActionMode(callback: Callback ): ActionMode ?  fun onWindowStartingActionMode(callback: Callback , i: Int ): ActionMode ?",
            "title": "onWindowStartingActionMode"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-populate-accessibility-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchPopulateAccessibilityEvent\n\n\ndispatchPopulateAccessibilityEvent\n\u00b6\n\n\nfun dispatchPopulateAccessibilityEvent(accessibilityEvent:\nAccessibilityEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-populate-accessibility-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-populate-accessibility-event/#dispatchpopulateaccessibilityevent",
            "text": "fun dispatchPopulateAccessibilityEvent(accessibilityEvent: AccessibilityEvent ): Boolean",
            "title": "dispatchPopulateAccessibilityEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-trackball-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchTrackballEvent\n\n\ndispatchTrackballEvent\n\u00b6\n\n\nfun dispatchTrackballEvent(motionEvent:\nMotionEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-trackball-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-trackball-event/#dispatchtrackballevent",
            "text": "fun dispatchTrackballEvent(motionEvent: MotionEvent ): Boolean",
            "title": "dispatchTrackballEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchKeyEvent\n\n\ndispatchKeyEvent\n\u00b6\n\n\nfun dispatchKeyEvent(keyEvent:\nKeyEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-event/#dispatchkeyevent",
            "text": "fun dispatchKeyEvent(keyEvent: KeyEvent ): Boolean",
            "title": "dispatchKeyEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-menu-opened/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonMenuOpened\n\n\nonMenuOpened\n\u00b6\n\n\nfun onMenuOpened(i:\nInt\n, menu:\nMenu\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-menu-opened.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-menu-opened/#onmenuopened",
            "text": "fun onMenuOpened(i: Int , menu: Menu ): Boolean",
            "title": "onMenuOpened"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-started/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonActionModeStarted\n\n\nonActionModeStarted\n\u00b6\n\n\nfun onActionModeStarted(actionMode:\nActionMode\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-started.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-started/#onactionmodestarted",
            "text": "fun onActionModeStarted(actionMode: ActionMode ): Unit",
            "title": "onActionModeStarted"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-menu-item-selected/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonMenuItemSelected\n\n\nonMenuItemSelected\n\u00b6\n\n\nfun onMenuItemSelected(i:\nInt\n, menuItem:\nMenuItem\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-menu-item-selected.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-menu-item-selected/#onmenuitemselected",
            "text": "fun onMenuItemSelected(i: Int , menuItem: MenuItem ): Boolean",
            "title": "onMenuItemSelected"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-attached-to-window/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonAttachedToWindow\n\n\nonAttachedToWindow\n\u00b6\n\n\nfun onAttachedToWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-attached-to-window.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-attached-to-window/#onattachedtowindow",
            "text": "fun onAttachedToWindow(): Unit",
            "title": "onAttachedToWindow"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n\n\nComposeWindowCallback\n\u00b6\n\n\nclass ComposeWindowCallback :\nCallback\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nComposeWindowCallback(localCallback:\nCallback\n, activity:\nActivity\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispatchGenericMotionEvent\n\n\nfun dispatchGenericMotionEvent(motionEvent:\nMotionEvent\n):\nBoolean\n\n\n\n\n\n\ndispatchKeyEvent\n\n\nfun dispatchKeyEvent(keyEvent:\nKeyEvent\n):\nBoolean\n\n\n\n\n\n\ndispatchKeyShortcutEvent\n\n\nfun dispatchKeyShortcutEvent(keyEvent:\nKeyEvent\n):\nBoolean\n\n\n\n\n\n\ndispatchPopulateAccessibilityEvent\n\n\nfun dispatchPopulateAccessibilityEvent(accessibilityEvent:\nAccessibilityEvent\n):\nBoolean\n\n\n\n\n\n\ndispatchTouchEvent\n\n\nfun dispatchTouchEvent(motionEvent:\nMotionEvent\n):\nBoolean\n\n\n\n\n\n\ndispatchTrackballEvent\n\n\nfun dispatchTrackballEvent(motionEvent:\nMotionEvent\n):\nBoolean\n\n\n\n\n\n\nonActionModeFinished\n\n\nfun onActionModeFinished(actionMode:\nActionMode\n):\nUnit\n\n\n\n\n\n\nonActionModeStarted\n\n\nfun onActionModeStarted(actionMode:\nActionMode\n):\nUnit\n\n\n\n\n\n\nonAttachedToWindow\n\n\nfun onAttachedToWindow():\nUnit\n\n\n\n\n\n\nonContentChanged\n\n\nfun onContentChanged():\nUnit\n\n\n\n\n\n\nonCreatePanelMenu\n\n\nfun onCreatePanelMenu(i:\nInt\n, menu:\nMenu\n):\nBoolean\n\n\n\n\n\n\nonCreatePanelView\n\n\nfun onCreatePanelView(i:\nInt\n):\nView\n?\n\n\n\n\n\n\nonDetachedFromWindow\n\n\nfun onDetachedFromWindow():\nUnit\n\n\n\n\n\n\nonMenuItemSelected\n\n\nfun onMenuItemSelected(i:\nInt\n, menuItem:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nonMenuOpened\n\n\nfun onMenuOpened(i:\nInt\n, menu:\nMenu\n):\nBoolean\n\n\n\n\n\n\nonPanelClosed\n\n\nfun onPanelClosed(i:\nInt\n, menu:\nMenu\n):\nUnit\n\n\n\n\n\n\nonPreparePanel\n\n\nfun onPreparePanel(i:\nInt\n, view:\nView\n, menu:\nMenu\n):\nBoolean\n\n\n\n\n\n\nonSearchRequested\n\n\nfun onSearchRequested():\nBoolean\nfun onSearchRequested(searchEvent:\nSearchEvent\n):\nBoolean\n\n\n\n\n\n\nonWindowAttributesChanged\n\n\nfun onWindowAttributesChanged(layoutParams:\nLayoutParams\n):\nUnit\n\n\n\n\n\n\nonWindowFocusChanged\n\n\nfun onWindowFocusChanged(b:\nBoolean\n):\nUnit\n\n\n\n\n\n\nonWindowStartingActionMode\n\n\nfun onWindowStartingActionMode(callback:\nCallback\n):\nActionMode\n?\nfun onWindowStartingActionMode(callback:\nCallback\n, i:\nInt\n):\nActionMode\n?",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/#composewindowcallback",
            "text": "class ComposeWindowCallback : Callback",
            "title": "ComposeWindowCallback"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/#constructors",
            "text": "Name  Summary      <init>  ComposeWindowCallback(localCallback: Callback , activity: Activity )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/#functions",
            "text": "Name  Summary      dispatchGenericMotionEvent  fun dispatchGenericMotionEvent(motionEvent: MotionEvent ): Boolean    dispatchKeyEvent  fun dispatchKeyEvent(keyEvent: KeyEvent ): Boolean    dispatchKeyShortcutEvent  fun dispatchKeyShortcutEvent(keyEvent: KeyEvent ): Boolean    dispatchPopulateAccessibilityEvent  fun dispatchPopulateAccessibilityEvent(accessibilityEvent: AccessibilityEvent ): Boolean    dispatchTouchEvent  fun dispatchTouchEvent(motionEvent: MotionEvent ): Boolean    dispatchTrackballEvent  fun dispatchTrackballEvent(motionEvent: MotionEvent ): Boolean    onActionModeFinished  fun onActionModeFinished(actionMode: ActionMode ): Unit    onActionModeStarted  fun onActionModeStarted(actionMode: ActionMode ): Unit    onAttachedToWindow  fun onAttachedToWindow(): Unit    onContentChanged  fun onContentChanged(): Unit    onCreatePanelMenu  fun onCreatePanelMenu(i: Int , menu: Menu ): Boolean    onCreatePanelView  fun onCreatePanelView(i: Int ): View ?    onDetachedFromWindow  fun onDetachedFromWindow(): Unit    onMenuItemSelected  fun onMenuItemSelected(i: Int , menuItem: MenuItem ): Boolean    onMenuOpened  fun onMenuOpened(i: Int , menu: Menu ): Boolean    onPanelClosed  fun onPanelClosed(i: Int , menu: Menu ): Unit    onPreparePanel  fun onPreparePanel(i: Int , view: View , menu: Menu ): Boolean    onSearchRequested  fun onSearchRequested(): Boolean fun onSearchRequested(searchEvent: SearchEvent ): Boolean    onWindowAttributesChanged  fun onWindowAttributesChanged(layoutParams: LayoutParams ): Unit    onWindowFocusChanged  fun onWindowFocusChanged(b: Boolean ): Unit    onWindowStartingActionMode  fun onWindowStartingActionMode(callback: Callback ): ActionMode ? fun onWindowStartingActionMode(callback: Callback , i: Int ): ActionMode ?",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-focus-changed/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonWindowFocusChanged\n\n\nonWindowFocusChanged\n\u00b6\n\n\nfun onWindowFocusChanged(b:\nBoolean\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-window-focus-changed.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-focus-changed/#onwindowfocuschanged",
            "text": "fun onWindowFocusChanged(b: Boolean ): Unit",
            "title": "onWindowFocusChanged"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-search-requested/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonSearchRequested\n\n\nonSearchRequested\n\u00b6\n\n\nfun onSearchRequested():\nBoolean\n\n\nfun onSearchRequested(searchEvent:\nSearchEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-search-requested.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-search-requested/#onsearchrequested",
            "text": "fun onSearchRequested(): Boolean  fun onSearchRequested(searchEvent: SearchEvent ): Boolean",
            "title": "onSearchRequested"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-attributes-changed/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonWindowAttributesChanged\n\n\nonWindowAttributesChanged\n\u00b6\n\n\nfun onWindowAttributesChanged(layoutParams:\nLayoutParams\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-window-attributes-changed.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-window-attributes-changed/#onwindowattributeschanged",
            "text": "fun onWindowAttributesChanged(layoutParams: LayoutParams ): Unit",
            "title": "onWindowAttributesChanged"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-menu/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonCreatePanelMenu\n\n\nonCreatePanelMenu\n\u00b6\n\n\nfun onCreatePanelMenu(i:\nInt\n, menu:\nMenu\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-menu.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-create-panel-menu/#oncreatepanelmenu",
            "text": "fun onCreatePanelMenu(i: Int , menu: Menu ): Boolean",
            "title": "onCreatePanelMenu"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nComposeWindowCallback(localCallback:\nCallback\n, activity:\nActivity\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/-init-/#init",
            "text": "ComposeWindowCallback(localCallback: Callback , activity: Activity )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-shortcut-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchKeyShortcutEvent\n\n\ndispatchKeyShortcutEvent\n\u00b6\n\n\nfun dispatchKeyShortcutEvent(keyEvent:\nKeyEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-shortcut-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-key-shortcut-event/#dispatchkeyshortcutevent",
            "text": "fun dispatchKeyShortcutEvent(keyEvent: KeyEvent ): Boolean",
            "title": "dispatchKeyShortcutEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-content-changed/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonContentChanged\n\n\nonContentChanged\n\u00b6\n\n\nfun onContentChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-content-changed.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-content-changed/#oncontentchanged",
            "text": "fun onContentChanged(): Unit",
            "title": "onContentChanged"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-generic-motion-event/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \ndispatchGenericMotionEvent\n\n\ndispatchGenericMotionEvent\n\u00b6\n\n\nfun dispatchGenericMotionEvent(motionEvent:\nMotionEvent\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/dispatch-generic-motion-event.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/dispatch-generic-motion-event/#dispatchgenericmotionevent",
            "text": "fun dispatchGenericMotionEvent(motionEvent: MotionEvent ): Boolean",
            "title": "dispatchGenericMotionEvent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-detached-from-window/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonDetachedFromWindow\n\n\nonDetachedFromWindow\n\u00b6\n\n\nfun onDetachedFromWindow():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-detached-from-window.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-detached-from-window/#ondetachedfromwindow",
            "text": "fun onDetachedFromWindow(): Unit",
            "title": "onDetachedFromWindow"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-finished/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonActionModeFinished\n\n\nonActionModeFinished\n\u00b6\n\n\nfun onActionModeFinished(actionMode:\nActionMode\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-finished.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-action-mode-finished/#onactionmodefinished",
            "text": "fun onActionModeFinished(actionMode: ActionMode ): Unit",
            "title": "onActionModeFinished"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-panel-closed/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeWindowCallback\n / \nonPanelClosed\n\n\nonPanelClosed\n\u00b6\n\n\nfun onPanelClosed(i:\nInt\n, menu:\nMenu\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-window-callback/on-panel-closed.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-window-callback/on-panel-closed/#onpanelclosed",
            "text": "fun onPanelClosed(i: Int , menu: Menu ): Unit",
            "title": "onPanelClosed"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-archived/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nmarkArchived\n\n\nmarkArchived\n\u00b6\n\n\n@Inject lateinit var markArchived:\nMarkArchived",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/mark-archived.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-archived/#markarchived",
            "text": "@Inject lateinit var markArchived: MarkArchived",
            "title": "markArchived"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/message-repo/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nmessageRepo\n\n\nmessageRepo\n\u00b6\n\n\n@Inject lateinit var messageRepo:\nMessageRepository",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/message-repo.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/message-repo/#messagerepo",
            "text": "@Inject lateinit var messageRepo: MessageRepository",
            "title": "messageRepo"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/context/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \ncontext\n\n\ncontext\n\u00b6\n\n\n@Inject lateinit var context:\nContext",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/context.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/context/#context",
            "text": "@Inject lateinit var context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n\n\nComposeViewModel\n\u00b6\n\n\nclass ComposeViewModel :\nQkViewModel\n<\nComposeView\n,\nComposeState\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nComposeViewModel(intent:\nIntent\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontactFilter\n\n\nlateinit var contactFilter:\nContactFilter\n\n\n\n\n\n\ncontactsRepo\n\n\nlateinit var contactsRepo:\nContactRepository\n\n\n\n\n\n\ncontext\n\n\nlateinit var context:\nContext\n\n\n\n\n\n\ndeleteConversation\n\n\nlateinit var deleteConversation:\nDeleteConversation\n\n\n\n\n\n\ndeleteMessage\n\n\nlateinit var deleteMessage:\nDeleteMessage\n\n\n\n\n\n\nmarkArchived\n\n\nlateinit var markArchived:\nMarkArchived\n\n\n\n\n\n\nmarkRead\n\n\nlateinit var markRead:\nMarkRead\n\n\n\n\n\n\nmarkUnarchived\n\n\nlateinit var markUnarchived:\nMarkUnarchived\n\n\n\n\n\n\nmessageRepo\n\n\nlateinit var messageRepo:\nMessageRepository\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\nsendMessage\n\n\nlateinit var sendMessage:\nSendMessage\n\n\n\n\n\n\nsyncContacts\n\n\nlateinit var syncContacts:\nContactSync\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndisposables\n\n\nval disposables: CompositeDisposable\n\n\n\n\n\n\nstate\n\n\nval state: BehaviorSubject<State>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbindView\n\n\nfun bindView(view:\nComposeView\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCleared\n\n\nopen fun onCleared():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#composeviewmodel",
            "text": "class ComposeViewModel : QkViewModel < ComposeView , ComposeState >",
            "title": "ComposeViewModel"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#constructors",
            "text": "Name  Summary      <init>  ComposeViewModel(intent: Intent )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#properties",
            "text": "Name  Summary      contactFilter  lateinit var contactFilter: ContactFilter    contactsRepo  lateinit var contactsRepo: ContactRepository    context  lateinit var context: Context    deleteConversation  lateinit var deleteConversation: DeleteConversation    deleteMessage  lateinit var deleteMessage: DeleteMessage    markArchived  lateinit var markArchived: MarkArchived    markRead  lateinit var markRead: MarkRead    markUnarchived  lateinit var markUnarchived: MarkUnarchived    messageRepo  lateinit var messageRepo: MessageRepository    navigator  lateinit var navigator: Navigator    sendMessage  lateinit var sendMessage: SendMessage    syncContacts  lateinit var syncContacts: ContactSync",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#inherited-properties",
            "text": "Name  Summary      disposables  val disposables: CompositeDisposable    state  val state: BehaviorSubject<State>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#functions",
            "text": "Name  Summary      bindView  fun bindView(view: ComposeView ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/#inherited-functions",
            "text": "Name  Summary      onCleared  open fun onCleared(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/delete-message/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \ndeleteMessage\n\n\ndeleteMessage\n\u00b6\n\n\n@Inject lateinit var deleteMessage:\nDeleteMessage",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/delete-message.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/delete-message/#deletemessage",
            "text": "@Inject lateinit var deleteMessage: DeleteMessage",
            "title": "deleteMessage"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/navigator/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/send-message/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nsendMessage\n\n\nsendMessage\n\u00b6\n\n\n@Inject lateinit var sendMessage:\nSendMessage",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/send-message.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/send-message/#sendmessage",
            "text": "@Inject lateinit var sendMessage: SendMessage",
            "title": "sendMessage"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nComposeViewModel(intent:\nIntent\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/-init-/#init",
            "text": "ComposeViewModel(intent: Intent )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/contact-filter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \ncontactFilter\n\n\ncontactFilter\n\u00b6\n\n\n@Inject lateinit var contactFilter:\nContactFilter",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/contact-filter.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/contact-filter/#contactfilter",
            "text": "@Inject lateinit var contactFilter: ContactFilter",
            "title": "contactFilter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/contacts-repo/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \ncontactsRepo\n\n\ncontactsRepo\n\u00b6\n\n\n@Inject lateinit var contactsRepo:\nContactRepository",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/contacts-repo.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/contacts-repo/#contactsrepo",
            "text": "@Inject lateinit var contactsRepo: ContactRepository",
            "title": "contactsRepo"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/delete-conversation/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \ndeleteConversation\n\n\ndeleteConversation\n\u00b6\n\n\n@Inject lateinit var deleteConversation:\nDeleteConversation",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/delete-conversation.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/delete-conversation/#deleteconversation",
            "text": "@Inject lateinit var deleteConversation: DeleteConversation",
            "title": "deleteConversation"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/bind-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nbindView\n\n\nbindView\n\u00b6\n\n\nfun bindView(view:\nComposeView\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/bind-view.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/bind-view/#bindview",
            "text": "fun bindView(view: ComposeView ): Unit",
            "title": "bindView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/sync-contacts/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nsyncContacts\n\n\nsyncContacts\n\u00b6\n\n\n@Inject lateinit var syncContacts:\nContactSync",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/sync-contacts.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/sync-contacts/#synccontacts",
            "text": "@Inject lateinit var syncContacts: ContactSync",
            "title": "syncContacts"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-unarchived/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nmarkUnarchived\n\n\nmarkUnarchived\n\u00b6\n\n\n@Inject lateinit var markUnarchived:\nMarkUnarchived",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/mark-unarchived.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-unarchived/#markunarchived",
            "text": "@Inject lateinit var markUnarchived: MarkUnarchived",
            "title": "markUnarchived"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-read/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeViewModel\n / \nmarkRead\n\n\nmarkRead\n\u00b6\n\n\n@Inject lateinit var markRead:\nMarkRead",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view-model/mark-read.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view-model/mark-read/#markread",
            "text": "@Inject lateinit var markRead: MarkRead",
            "title": "markRead"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/can-send/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \ncanSend\n\n\ncanSend\n\u00b6\n\n\nval canSend:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/can-send.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/can-send/#cansend",
            "text": "val canSend: Boolean",
            "title": "canSend"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/title/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \ntitle\n\n\ntitle\n\u00b6\n\n\nval title:\nString",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/title.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/title/#title",
            "text": "val title: String",
            "title": "title"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n\n\nComposeState\n\u00b6\n\n\ndata class ComposeState\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nComposeState(hasError:\nBoolean\n= false, editingMode:\nBoolean\n= false, contacts:\nList\n<\nContact\n> = ArrayList(), contactsVisible:\nBoolean\n= false, selectedContacts:\nList\n<\nContact\n> = ArrayList(), title:\nString\n= \"\", archived:\nBoolean\n= false, messages: RealmResults<\nMessage\n>? = null, attachments:\nList\n<\nUri\n> = ArrayList(), canSend:\nBoolean\n= false)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\narchived\n\n\nval archived:\nBoolean\n\n\n\n\n\n\nattachments\n\n\nval attachments:\nList\n<\nUri\n>\n\n\n\n\n\n\ncanSend\n\n\nval canSend:\nBoolean\n\n\n\n\n\n\ncontacts\n\n\nval contacts:\nList\n<\nContact\n>\n\n\n\n\n\n\ncontactsVisible\n\n\nval contactsVisible:\nBoolean\n\n\n\n\n\n\neditingMode\n\n\nval editingMode:\nBoolean\n\n\n\n\n\n\nhasError\n\n\nval hasError:\nBoolean\n\n\n\n\n\n\nmessages\n\n\nval messages: RealmResults<\nMessage\n>?\n\n\n\n\n\n\nselectedContacts\n\n\nval selectedContacts:\nList\n<\nContact\n>\n\n\n\n\n\n\ntitle\n\n\nval title:\nString",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/#composestate",
            "text": "data class ComposeState",
            "title": "ComposeState"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/#constructors",
            "text": "Name  Summary      <init>  ComposeState(hasError: Boolean = false, editingMode: Boolean = false, contacts: List < Contact > = ArrayList(), contactsVisible: Boolean = false, selectedContacts: List < Contact > = ArrayList(), title: String = \"\", archived: Boolean = false, messages: RealmResults< Message >? = null, attachments: List < Uri > = ArrayList(), canSend: Boolean = false)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/#properties",
            "text": "Name  Summary      archived  val archived: Boolean    attachments  val attachments: List < Uri >    canSend  val canSend: Boolean    contacts  val contacts: List < Contact >    contactsVisible  val contactsVisible: Boolean    editingMode  val editingMode: Boolean    hasError  val hasError: Boolean    messages  val messages: RealmResults< Message >?    selectedContacts  val selectedContacts: List < Contact >    title  val title: String",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/contacts-visible/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \ncontactsVisible\n\n\ncontactsVisible\n\u00b6\n\n\nval contactsVisible:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/contacts-visible.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/contacts-visible/#contactsvisible",
            "text": "val contactsVisible: Boolean",
            "title": "contactsVisible"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/contacts/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \ncontacts\n\n\ncontacts\n\u00b6\n\n\nval contacts:\nList\n<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/contacts.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/contacts/#contacts",
            "text": "val contacts: List < Contact >",
            "title": "contacts"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/attachments/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \nattachments\n\n\nattachments\n\u00b6\n\n\nval attachments:\nList\n<\nUri\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/attachments.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/attachments/#attachments",
            "text": "val attachments: List < Uri >",
            "title": "attachments"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/has-error/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \nhasError\n\n\nhasError\n\u00b6\n\n\nval hasError:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/has-error.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/has-error/#haserror",
            "text": "val hasError: Boolean",
            "title": "hasError"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/messages/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \nmessages\n\n\nmessages\n\u00b6\n\n\nval messages: RealmResults<\nMessage\n>?",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/messages.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/messages/#messages",
            "text": "val messages: RealmResults< Message >?",
            "title": "messages"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/selected-contacts/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \nselectedContacts\n\n\nselectedContacts\n\u00b6\n\n\nval selectedContacts:\nList\n<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/selected-contacts.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/selected-contacts/#selectedcontacts",
            "text": "val selectedContacts: List < Contact >",
            "title": "selectedContacts"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nComposeState(hasError:\nBoolean\n= false, editingMode:\nBoolean\n= false, contacts:\nList\n<\nContact\n> = ArrayList(), contactsVisible:\nBoolean\n= false, selectedContacts:\nList\n<\nContact\n> = ArrayList(), title:\nString\n= \"\", archived:\nBoolean\n= false, messages: RealmResults<\nMessage\n>? = null, attachments:\nList\n<\nUri\n> = ArrayList(), canSend:\nBoolean\n= false)",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/-init-/#init",
            "text": "ComposeState(hasError: Boolean = false, editingMode: Boolean = false, contacts: List < Contact > = ArrayList(), contactsVisible: Boolean = false, selectedContacts: List < Contact > = ArrayList(), title: String = \"\", archived: Boolean = false, messages: RealmResults< Message >? = null, attachments: List < Uri > = ArrayList(), canSend: Boolean = false)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/editing-mode/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \neditingMode\n\n\neditingMode\n\u00b6\n\n\nval editingMode:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/editing-mode.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/editing-mode/#editingmode",
            "text": "val editingMode: Boolean",
            "title": "editingMode"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/archived/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeState\n / \narchived\n\n\narchived\n\u00b6\n\n\nval archived:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-state/archived.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-state/archived/#archived",
            "text": "val archived: Boolean",
            "title": "archived"
        },
        {
            "location": "/qksms/presentation.feature.compose/",
            "text": "qksms\n / \npresentation.feature.compose\n\n\nPackage presentation.feature.compose\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAttachmentAdapter\n\n\nclass AttachmentAdapter :\nQkAdapter\n<\nUri\n>\n\n\n\n\n\n\nChipsAdapter\n\n\nclass ChipsAdapter :\nQkAdapter\n<\nContact\n>\n\n\n\n\n\n\nComposeActivity\n\n\nclass ComposeActivity :\nQkActivity\n<\nComposeViewModel\n>,\nComposeView\n\n\n\n\n\n\nComposeState\n\n\ndata class ComposeState\n\n\n\n\n\n\nComposeView\n\n\ninterface ComposeView :\nQkView\n<\nComposeState\n>\n\n\n\n\n\n\nComposeViewModel\n\n\nclass ComposeViewModel :\nQkViewModel\n<\nComposeView\n,\nComposeState\n>\n\n\n\n\n\n\nComposeWindowCallback\n\n\nclass ComposeWindowCallback :\nCallback\n\n\n\n\n\n\nContactAdapter\n\n\nclass ContactAdapter :\nQkAdapter\n<\nContact\n>\n\n\n\n\n\n\nDetailedChipView\n\n\nclass DetailedChipView :\nRelativeLayout\n\n\n\n\n\n\nMessagesAdapter\n\n\nclass MessagesAdapter : RealmRecyclerViewAdapter<\nMessage\n,\nQkViewHolder\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/#package-presentationfeaturecompose",
            "text": "",
            "title": "Package presentation.feature.compose"
        },
        {
            "location": "/qksms/presentation.feature.compose/#types",
            "text": "Name  Summary      AttachmentAdapter  class AttachmentAdapter : QkAdapter < Uri >    ChipsAdapter  class ChipsAdapter : QkAdapter < Contact >    ComposeActivity  class ComposeActivity : QkActivity < ComposeViewModel >, ComposeView    ComposeState  data class ComposeState    ComposeView  interface ComposeView : QkView < ComposeState >    ComposeViewModel  class ComposeViewModel : QkViewModel < ComposeView , ComposeState >    ComposeWindowCallback  class ComposeWindowCallback : Callback    ContactAdapter  class ContactAdapter : QkAdapter < Contact >    DetailedChipView  class DetailedChipView : RelativeLayout    MessagesAdapter  class MessagesAdapter : RealmRecyclerViewAdapter< Message , QkViewHolder >",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/archive-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \narchiveIntent\n\n\narchiveIntent\n\u00b6\n\n\nabstract val archiveIntent: Subject<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/archive-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/archive-intent/#archiveintent",
            "text": "abstract val archiveIntent: Subject< Unit >",
            "title": "archiveIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/text-changed-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \ntextChangedIntent\n\n\ntextChangedIntent\n\u00b6\n\n\nabstract val textChangedIntent: Observable<\nCharSequence\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/text-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/text-changed-intent/#textchangedintent",
            "text": "abstract val textChangedIntent: Observable< CharSequence >",
            "title": "textChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/activity-visible-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nactivityVisibleIntent\n\n\nactivityVisibleIntent\n\u00b6\n\n\nabstract val activityVisibleIntent: Observable<\nBoolean\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/activity-visible-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/activity-visible-intent/#activityvisibleintent",
            "text": "abstract val activityVisibleIntent: Observable< Boolean >",
            "title": "activityVisibleIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/call-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \ncallIntent\n\n\ncallIntent\n\u00b6\n\n\nabstract val callIntent: Subject<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/call-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/call-intent/#callintent",
            "text": "abstract val callIntent: Subject< Unit >",
            "title": "callIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/menu-ready-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nmenuReadyIntent\n\n\nmenuReadyIntent\n\u00b6\n\n\nabstract val menuReadyIntent: Observable<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/menu-ready-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/menu-ready-intent/#menureadyintent",
            "text": "abstract val menuReadyIntent: Observable< Unit >",
            "title": "menuReadyIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/delete-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \ndeleteIntent\n\n\ndeleteIntent\n\u00b6\n\n\nabstract val deleteIntent: Subject<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/delete-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/delete-intent/#deleteintent",
            "text": "abstract val deleteIntent: Subject< Unit >",
            "title": "deleteIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n\n\nComposeView\n\u00b6\n\n\ninterface ComposeView :\nQkView\n<\nComposeState\n>\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nactivityVisibleIntent\n\n\nabstract val activityVisibleIntent: Observable<\nBoolean\n>\n\n\n\n\n\n\narchiveIntent\n\n\nabstract val archiveIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nattachIntent\n\n\nabstract val attachIntent: Observable<\nUnit\n>\n\n\n\n\n\n\nattachmentDeletedIntent\n\n\nabstract val attachmentDeletedIntent: Subject<\nUri\n>\n\n\n\n\n\n\ncallIntent\n\n\nabstract val callIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nchipDeletedIntent\n\n\nabstract val chipDeletedIntent: Subject<\nContact\n>\n\n\n\n\n\n\nchipSelectedIntent\n\n\nabstract val chipSelectedIntent: Subject<\nContact\n>\n\n\n\n\n\n\ncopyTextIntent\n\n\nabstract val copyTextIntent: Subject<\nMessage\n>\n\n\n\n\n\n\ndeleteIntent\n\n\nabstract val deleteIntent: Subject<\nUnit\n>\n\n\n\n\n\n\ndeleteMessageIntent\n\n\nabstract val deleteMessageIntent: Subject<\nMessage\n>\n\n\n\n\n\n\nforwardMessageIntent\n\n\nabstract val forwardMessageIntent: Subject<\nMessage\n>\n\n\n\n\n\n\nmenuReadyIntent\n\n\nabstract val menuReadyIntent: Observable<\nUnit\n>\n\n\n\n\n\n\nqueryChangedIntent\n\n\nabstract val queryChangedIntent: Observable<\nCharSequence\n>\n\n\n\n\n\n\nsendIntent\n\n\nabstract val sendIntent: Observable<\nUnit\n>\n\n\n\n\n\n\ntextChangedIntent\n\n\nabstract val textChangedIntent: Observable<\nCharSequence\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsetDraft\n\n\nabstract fun setDraft(draft:\nString\n):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nComposeActivity\n\n\nclass ComposeActivity :\nQkActivity\n<\nComposeViewModel\n>, ComposeView",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/#composeview",
            "text": "interface ComposeView : QkView < ComposeState >",
            "title": "ComposeView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/#properties",
            "text": "Name  Summary      activityVisibleIntent  abstract val activityVisibleIntent: Observable< Boolean >    archiveIntent  abstract val archiveIntent: Subject< Unit >    attachIntent  abstract val attachIntent: Observable< Unit >    attachmentDeletedIntent  abstract val attachmentDeletedIntent: Subject< Uri >    callIntent  abstract val callIntent: Subject< Unit >    chipDeletedIntent  abstract val chipDeletedIntent: Subject< Contact >    chipSelectedIntent  abstract val chipSelectedIntent: Subject< Contact >    copyTextIntent  abstract val copyTextIntent: Subject< Message >    deleteIntent  abstract val deleteIntent: Subject< Unit >    deleteMessageIntent  abstract val deleteMessageIntent: Subject< Message >    forwardMessageIntent  abstract val forwardMessageIntent: Subject< Message >    menuReadyIntent  abstract val menuReadyIntent: Observable< Unit >    queryChangedIntent  abstract val queryChangedIntent: Observable< CharSequence >    sendIntent  abstract val sendIntent: Observable< Unit >    textChangedIntent  abstract val textChangedIntent: Observable< CharSequence >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/#functions",
            "text": "Name  Summary      setDraft  abstract fun setDraft(draft: String ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/#inheritors",
            "text": "Name  Summary      ComposeActivity  class ComposeActivity : QkActivity < ComposeViewModel >, ComposeView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/forward-message-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nforwardMessageIntent\n\n\nforwardMessageIntent\n\u00b6\n\n\nabstract val forwardMessageIntent: Subject<\nMessage\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/forward-message-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/forward-message-intent/#forwardmessageintent",
            "text": "abstract val forwardMessageIntent: Subject< Message >",
            "title": "forwardMessageIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/copy-text-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \ncopyTextIntent\n\n\ncopyTextIntent\n\u00b6\n\n\nabstract val copyTextIntent: Subject<\nMessage\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/copy-text-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/copy-text-intent/#copytextintent",
            "text": "abstract val copyTextIntent: Subject< Message >",
            "title": "copyTextIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/send-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nsendIntent\n\n\nsendIntent\n\u00b6\n\n\nabstract val sendIntent: Observable<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/send-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/send-intent/#sendintent",
            "text": "abstract val sendIntent: Observable< Unit >",
            "title": "sendIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/attachment-deleted-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nattachmentDeletedIntent\n\n\nattachmentDeletedIntent\n\u00b6\n\n\nabstract val attachmentDeletedIntent: Subject<\nUri\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/attachment-deleted-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/attachment-deleted-intent/#attachmentdeletedintent",
            "text": "abstract val attachmentDeletedIntent: Subject< Uri >",
            "title": "attachmentDeletedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/set-draft/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nsetDraft\n\n\nsetDraft\n\u00b6\n\n\nabstract fun setDraft(draft:\nString\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/set-draft.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/set-draft/#setdraft",
            "text": "abstract fun setDraft(draft: String ): Unit",
            "title": "setDraft"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/chip-selected-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nchipSelectedIntent\n\n\nchipSelectedIntent\n\u00b6\n\n\nabstract val chipSelectedIntent: Subject<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/chip-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/chip-selected-intent/#chipselectedintent",
            "text": "abstract val chipSelectedIntent: Subject< Contact >",
            "title": "chipSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/chip-deleted-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nchipDeletedIntent\n\n\nchipDeletedIntent\n\u00b6\n\n\nabstract val chipDeletedIntent: Subject<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/chip-deleted-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/chip-deleted-intent/#chipdeletedintent",
            "text": "abstract val chipDeletedIntent: Subject< Contact >",
            "title": "chipDeletedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/attach-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nattachIntent\n\n\nattachIntent\n\u00b6\n\n\nabstract val attachIntent: Observable<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/attach-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/attach-intent/#attachintent",
            "text": "abstract val attachIntent: Observable< Unit >",
            "title": "attachIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/delete-message-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \ndeleteMessageIntent\n\n\ndeleteMessageIntent\n\u00b6\n\n\nabstract val deleteMessageIntent: Subject<\nMessage\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/delete-message-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/delete-message-intent/#deletemessageintent",
            "text": "abstract val deleteMessageIntent: Subject< Message >",
            "title": "deleteMessageIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/query-changed-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeView\n / \nqueryChangedIntent\n\n\nqueryChangedIntent\n\u00b6\n\n\nabstract val queryChangedIntent: Observable<\nCharSequence\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-view/query-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-view/query-changed-intent/#querychangedintent",
            "text": "abstract val queryChangedIntent: Observable< CharSequence >",
            "title": "queryChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-create-options-menu/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nonCreateOptionsMenu\n\n\nonCreateOptionsMenu\n\u00b6\n\n\nfun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\nOverrides \nQkActivity.onCreateOptionsMenu",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/on-create-options-menu.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-create-options-menu/#oncreateoptionsmenu",
            "text": "fun onCreateOptionsMenu(menu: Menu ?): Boolean  Overrides  QkActivity.onCreateOptionsMenu",
            "title": "onCreateOptionsMenu"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-start/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nonStart\n\n\nonStart\n\u00b6\n\n\nprotected fun onStart():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/on-start.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-start/#onstart",
            "text": "protected fun onStart(): Unit",
            "title": "onStart"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attachment-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nattachmentAdapter\n\n\nattachmentAdapter\n\u00b6\n\n\n@Inject lateinit var attachmentAdapter:\nAttachmentAdapter",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/attachment-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attachment-adapter/#attachmentadapter",
            "text": "@Inject lateinit var attachmentAdapter: AttachmentAdapter",
            "title": "attachmentAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/view-model-class/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nviewModelClass\n\n\nviewModelClass\n\u00b6\n\n\nprotected val viewModelClass:\nKClass\n<\nComposeViewModel\n>\n\n\nOverrides \nQkActivity.viewModelClass",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/view-model-class.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/view-model-class/#viewmodelclass",
            "text": "protected val viewModelClass: KClass < ComposeViewModel >  Overrides  QkActivity.viewModelClass",
            "title": "viewModelClass"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chips-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nchipsAdapter\n\n\nchipsAdapter\n\u00b6\n\n\n@Inject lateinit var chipsAdapter:\nChipsAdapter",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/chips-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chips-adapter/#chipsadapter",
            "text": "@Inject lateinit var chipsAdapter: ChipsAdapter",
            "title": "chipsAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/message-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nmessageAdapter\n\n\nmessageAdapter\n\u00b6\n\n\n@Inject lateinit var messageAdapter:\nMessagesAdapter",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/message-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/message-adapter/#messageadapter",
            "text": "@Inject lateinit var messageAdapter: MessagesAdapter",
            "title": "messageAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/archive-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \narchiveIntent\n\n\narchiveIntent\n\u00b6\n\n\nval archiveIntent: Subject<\nUnit\n>\n\n\nOverrides \nComposeView.archiveIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/archive-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/archive-intent/#archiveintent",
            "text": "val archiveIntent: Subject< Unit >  Overrides  ComposeView.archiveIntent",
            "title": "archiveIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/text-changed-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ntextChangedIntent\n\n\ntextChangedIntent\n\u00b6\n\n\nval textChangedIntent: <ERROR CLASS>\n\n\nOverrides \nComposeView.textChangedIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/text-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/text-changed-intent/#textchangedintent",
            "text": "val textChangedIntent: <ERROR CLASS>  Overrides  ComposeView.textChangedIntent",
            "title": "textChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/contacts-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ncontactsAdapter\n\n\ncontactsAdapter\n\u00b6\n\n\n@Inject lateinit var contactsAdapter:\nContactAdapter",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/contacts-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/contacts-adapter/#contactsadapter",
            "text": "@Inject lateinit var contactsAdapter: ContactAdapter",
            "title": "contactsAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/activity-visible-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nactivityVisibleIntent\n\n\nactivityVisibleIntent\n\u00b6\n\n\nval activityVisibleIntent: Subject<\nBoolean\n>\n\n\nOverrides \nComposeView.activityVisibleIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/activity-visible-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/activity-visible-intent/#activityvisibleintent",
            "text": "val activityVisibleIntent: Subject< Boolean >  Overrides  ComposeView.activityVisibleIntent",
            "title": "activityVisibleIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/render/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nrender\n\n\nrender\n\u00b6\n\n\nfun render(state:\nComposeState\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/render.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/render/#render",
            "text": "fun render(state: ComposeState ): Unit",
            "title": "render"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/call-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ncallIntent\n\n\ncallIntent\n\u00b6\n\n\nval callIntent: Subject<\nUnit\n>\n\n\nOverrides \nComposeView.callIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/call-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/call-intent/#callintent",
            "text": "val callIntent: Subject< Unit >  Overrides  ComposeView.callIntent",
            "title": "callIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/menu-ready-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nmenuReadyIntent\n\n\nmenuReadyIntent\n\u00b6\n\n\nval menuReadyIntent: Observable<\nUnit\n>\n\n\nOverrides \nComposeView.menuReadyIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/menu-ready-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/menu-ready-intent/#menureadyintent",
            "text": "val menuReadyIntent: Observable< Unit >  Overrides  ComposeView.menuReadyIntent",
            "title": "menuReadyIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/delete-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ndeleteIntent\n\n\ndeleteIntent\n\u00b6\n\n\nval deleteIntent: Subject<\nUnit\n>\n\n\nOverrides \nComposeView.deleteIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/delete-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/delete-intent/#deleteintent",
            "text": "val deleteIntent: Subject< Unit >  Overrides  ComposeView.deleteIntent",
            "title": "deleteIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n\n\nComposeActivity\n\u00b6\n\n\nclass ComposeActivity :\nQkActivity\n<\nComposeViewModel\n>,\nComposeView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nComposeActivity()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nactivityVisibleIntent\n\n\nval activityVisibleIntent: Subject<\nBoolean\n>\n\n\n\n\n\n\narchiveIntent\n\n\nval archiveIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nattachIntent\n\n\nval attachIntent: <ERROR CLASS>\n\n\n\n\n\n\nattachmentAdapter\n\n\nlateinit var attachmentAdapter:\nAttachmentAdapter\n\n\n\n\n\n\nattachmentDeletedIntent\n\n\nval attachmentDeletedIntent: Subject<\nUri\n>\n\n\n\n\n\n\ncallIntent\n\n\nval callIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nchipDeletedIntent\n\n\nval chipDeletedIntent: Subject<\nContact\n>\n\n\n\n\n\n\nchipSelectedIntent\n\n\nval chipSelectedIntent: Subject<\nContact\n>\n\n\n\n\n\n\nchipsAdapter\n\n\nlateinit var chipsAdapter:\nChipsAdapter\n\n\n\n\n\n\ncontactsAdapter\n\n\nlateinit var contactsAdapter:\nContactAdapter\n\n\n\n\n\n\ncopyTextIntent\n\n\nval copyTextIntent: Subject<\nMessage\n>\n\n\n\n\n\n\ndeleteIntent\n\n\nval deleteIntent: Subject<\nUnit\n>\n\n\n\n\n\n\ndeleteMessageIntent\n\n\nval deleteMessageIntent: Subject<\nMessage\n>\n\n\n\n\n\n\nforwardMessageIntent\n\n\nval forwardMessageIntent: Subject<\nMessage\n>\n\n\n\n\n\n\nmenuReadyIntent\n\n\nval menuReadyIntent: Observable<\nUnit\n>\n\n\n\n\n\n\nmessageAdapter\n\n\nlateinit var messageAdapter:\nMessagesAdapter\n\n\n\n\n\n\nqueryChangedIntent\n\n\nval queryChangedIntent: Observable<\nCharSequence\n>\n\n\n\n\n\n\nsendIntent\n\n\nval sendIntent: <ERROR CLASS>\n\n\n\n\n\n\ntextChangedIntent\n\n\nval textChangedIntent: <ERROR CLASS>\n\n\n\n\n\n\nviewModelClass\n\n\nval viewModelClass:\nKClass\n<\nComposeViewModel\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\nmenu\n\n\nval menu: Subject<\nMenu\n>\n\n\n\n\n\n\nviewModel\n\n\nval viewModel: VM\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreate\n\n\nfun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nonCreateOptionsMenu\n\n\nfun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\n\n\n\n\nonOptionsItemSelected\n\n\nfun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nonPause\n\n\nfun onPause():\nUnit\n\n\n\n\n\n\nonStart\n\n\nfun onStart():\nUnit\n\n\n\n\n\n\nrender\n\n\nfun render(state:\nComposeState\n):\nUnit\n\n\n\n\n\n\nsetDraft\n\n\nfun setDraft(draft:\nString\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonPostCreate\n\n\nopen fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nsetContentView\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit\n\n\n\n\n\n\nsetTitle\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#composeactivity",
            "text": "class ComposeActivity : QkActivity < ComposeViewModel >, ComposeView",
            "title": "ComposeActivity"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#constructors",
            "text": "Name  Summary      <init>  ComposeActivity()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#properties",
            "text": "Name  Summary      activityVisibleIntent  val activityVisibleIntent: Subject< Boolean >    archiveIntent  val archiveIntent: Subject< Unit >    attachIntent  val attachIntent: <ERROR CLASS>    attachmentAdapter  lateinit var attachmentAdapter: AttachmentAdapter    attachmentDeletedIntent  val attachmentDeletedIntent: Subject< Uri >    callIntent  val callIntent: Subject< Unit >    chipDeletedIntent  val chipDeletedIntent: Subject< Contact >    chipSelectedIntent  val chipSelectedIntent: Subject< Contact >    chipsAdapter  lateinit var chipsAdapter: ChipsAdapter    contactsAdapter  lateinit var contactsAdapter: ContactAdapter    copyTextIntent  val copyTextIntent: Subject< Message >    deleteIntent  val deleteIntent: Subject< Unit >    deleteMessageIntent  val deleteMessageIntent: Subject< Message >    forwardMessageIntent  val forwardMessageIntent: Subject< Message >    menuReadyIntent  val menuReadyIntent: Observable< Unit >    messageAdapter  lateinit var messageAdapter: MessagesAdapter    queryChangedIntent  val queryChangedIntent: Observable< CharSequence >    sendIntent  val sendIntent: <ERROR CLASS>    textChangedIntent  val textChangedIntent: <ERROR CLASS>    viewModelClass  val viewModelClass: KClass < ComposeViewModel >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#inherited-properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    menu  val menu: Subject< Menu >    viewModel  val viewModel: VM",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#functions",
            "text": "Name  Summary      onCreate  fun onCreate(savedInstanceState: Bundle ?): Unit    onCreateOptionsMenu  fun onCreateOptionsMenu(menu: Menu ?): Boolean    onOptionsItemSelected  fun onOptionsItemSelected(item: MenuItem ): Boolean    onPause  fun onPause(): Unit    onStart  fun onStart(): Unit    render  fun render(state: ComposeState ): Unit    setDraft  fun setDraft(draft: String ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#inherited-functions",
            "text": "Name  Summary      onPostCreate  open fun onPostCreate(savedInstanceState: Bundle ?): Unit    setContentView  open fun setContentView(layoutResID: Int ): Unit    setTitle  open fun setTitle(title: CharSequence ?): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-options-item-selected/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nonOptionsItemSelected\n\n\nonOptionsItemSelected\n\u00b6\n\n\nfun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\nOverrides \nQkActivity.onOptionsItemSelected",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/on-options-item-selected.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-options-item-selected/#onoptionsitemselected",
            "text": "fun onOptionsItemSelected(item: MenuItem ): Boolean  Overrides  QkActivity.onOptionsItemSelected",
            "title": "onOptionsItemSelected"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/forward-message-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nforwardMessageIntent\n\n\nforwardMessageIntent\n\u00b6\n\n\nval forwardMessageIntent: Subject<\nMessage\n>\n\n\nOverrides \nComposeView.forwardMessageIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/forward-message-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/forward-message-intent/#forwardmessageintent",
            "text": "val forwardMessageIntent: Subject< Message >  Overrides  ComposeView.forwardMessageIntent",
            "title": "forwardMessageIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/copy-text-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ncopyTextIntent\n\n\ncopyTextIntent\n\u00b6\n\n\nval copyTextIntent: Subject<\nMessage\n>\n\n\nOverrides \nComposeView.copyTextIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/copy-text-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/copy-text-intent/#copytextintent",
            "text": "val copyTextIntent: Subject< Message >  Overrides  ComposeView.copyTextIntent",
            "title": "copyTextIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-pause/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nonPause\n\n\nonPause\n\u00b6\n\n\nprotected fun onPause():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/on-pause.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-pause/#onpause",
            "text": "protected fun onPause(): Unit",
            "title": "onPause"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nComposeActivity()",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/-init-/#init",
            "text": "ComposeActivity()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/send-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nsendIntent\n\n\nsendIntent\n\u00b6\n\n\nval sendIntent: <ERROR CLASS>\n\n\nOverrides \nComposeView.sendIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/send-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/send-intent/#sendintent",
            "text": "val sendIntent: <ERROR CLASS>  Overrides  ComposeView.sendIntent",
            "title": "sendIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attachment-deleted-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nattachmentDeletedIntent\n\n\nattachmentDeletedIntent\n\u00b6\n\n\nval attachmentDeletedIntent: Subject<\nUri\n>\n\n\nOverrides \nComposeView.attachmentDeletedIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/attachment-deleted-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attachment-deleted-intent/#attachmentdeletedintent",
            "text": "val attachmentDeletedIntent: Subject< Uri >  Overrides  ComposeView.attachmentDeletedIntent",
            "title": "attachmentDeletedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/set-draft/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nsetDraft\n\n\nsetDraft\n\u00b6\n\n\nfun setDraft(draft:\nString\n):\nUnit\n\n\nOverrides \nComposeView.setDraft",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/set-draft.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/set-draft/#setdraft",
            "text": "fun setDraft(draft: String ): Unit  Overrides  ComposeView.setDraft",
            "title": "setDraft"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chip-selected-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nchipSelectedIntent\n\n\nchipSelectedIntent\n\u00b6\n\n\nval chipSelectedIntent: Subject<\nContact\n>\n\n\nOverrides \nComposeView.chipSelectedIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/chip-selected-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chip-selected-intent/#chipselectedintent",
            "text": "val chipSelectedIntent: Subject< Contact >  Overrides  ComposeView.chipSelectedIntent",
            "title": "chipSelectedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chip-deleted-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nchipDeletedIntent\n\n\nchipDeletedIntent\n\u00b6\n\n\nval chipDeletedIntent: Subject<\nContact\n>\n\n\nOverrides \nComposeView.chipDeletedIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/chip-deleted-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/chip-deleted-intent/#chipdeletedintent",
            "text": "val chipDeletedIntent: Subject< Contact >  Overrides  ComposeView.chipDeletedIntent",
            "title": "chipDeletedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attach-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nattachIntent\n\n\nattachIntent\n\u00b6\n\n\nval attachIntent: <ERROR CLASS>\n\n\nOverrides \nComposeView.attachIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/attach-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/attach-intent/#attachintent",
            "text": "val attachIntent: <ERROR CLASS>  Overrides  ComposeView.attachIntent",
            "title": "attachIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-create/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nprotected fun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\nOverrides \nQkActivity.onCreate",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/on-create.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/on-create/#oncreate",
            "text": "protected fun onCreate(savedInstanceState: Bundle ?): Unit  Overrides  QkActivity.onCreate",
            "title": "onCreate"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/delete-message-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \ndeleteMessageIntent\n\n\ndeleteMessageIntent\n\u00b6\n\n\nval deleteMessageIntent: Subject<\nMessage\n>\n\n\nOverrides \nComposeView.deleteMessageIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/delete-message-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/delete-message-intent/#deletemessageintent",
            "text": "val deleteMessageIntent: Subject< Message >  Overrides  ComposeView.deleteMessageIntent",
            "title": "deleteMessageIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/query-changed-intent/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nComposeActivity\n / \nqueryChangedIntent\n\n\nqueryChangedIntent\n\u00b6\n\n\nval queryChangedIntent: Observable<\nCharSequence\n>\n\n\nOverrides \nComposeView.queryChangedIntent",
            "title": "&nbsp;qksms/presentation.feature.compose/-compose-activity/query-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-compose-activity/query-changed-intent/#querychangedintent",
            "text": "val queryChangedIntent: Observable< CharSequence >  Overrides  ComposeView.queryChangedIntent",
            "title": "queryChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nview\n\n\nview\n\u00b6\n\n\nvar view: RecyclerView?",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/view.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/view/#view",
            "text": "var view: RecyclerView?",
            "title": "view"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/text-changes/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \ntextChanges\n\n\ntextChanges\n\u00b6\n\n\nval textChanges: InitialValueObservable<\nCharSequence\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/text-changes.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/text-changes/#textchanges",
            "text": "val textChanges: InitialValueObservable< CharSequence >",
            "title": "textChanges"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n\n\nChipsAdapter\n\u00b6\n\n\nclass ChipsAdapter :\nQkAdapter\n<\nContact\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nChipsAdapter(context:\nContext\n, colors:\nColors\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nchipDeleted\n\n\nval chipDeleted: PublishSubject<\nContact\n>\n\n\n\n\n\n\ntextChanges\n\n\nval textChanges: InitialValueObservable<\nCharSequence\n>\n\n\n\n\n\n\nview\n\n\nvar view: RecyclerView?\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nareItemsTheSame\n\n\nfun areItemsTheSame(old:\nContact\n, new:\nContact\n):\nBoolean\n\n\n\n\n\n\ngetItemCount\n\n\nfun getItemCount():\nInt\n\n\n\n\n\n\ngetItemViewType\n\n\nfun getItemViewType(position:\nInt\n):\nInt\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\nonDatasetChanged\n\n\nfun onDatasetChanged():\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#chipsadapter",
            "text": "class ChipsAdapter : QkAdapter < Contact >",
            "title": "ChipsAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#constructors",
            "text": "Name  Summary      <init>  ChipsAdapter(context: Context , colors: Colors )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#properties",
            "text": "Name  Summary      chipDeleted  val chipDeleted: PublishSubject< Contact >    textChanges  val textChanges: InitialValueObservable< CharSequence >    view  var view: RecyclerView?",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#functions",
            "text": "Name  Summary      areItemsTheSame  fun areItemsTheSame(old: Contact , new: Contact ): Boolean    getItemCount  fun getItemCount(): Int    getItemViewType  fun getItemViewType(position: Int ): Int    onBindViewHolder  fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder    onDatasetChanged  fun onDatasetChanged(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/are-items-the-same/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nareItemsTheSame\n\n\nareItemsTheSame\n\u00b6\n\n\nprotected fun areItemsTheSame(old:\nContact\n, new:\nContact\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/are-items-the-same.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/are-items-the-same/#areitemsthesame",
            "text": "protected fun areItemsTheSame(old: Contact , new: Contact ): Boolean",
            "title": "areItemsTheSame"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/chip-deleted/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nchipDeleted\n\n\nchipDeleted\n\u00b6\n\n\nval chipDeleted: PublishSubject<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/chip-deleted.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/chip-deleted/#chipdeleted",
            "text": "val chipDeleted: PublishSubject< Contact >",
            "title": "chipDeleted"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nChipsAdapter(context:\nContext\n, colors:\nColors\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/-init-/#init",
            "text": "ChipsAdapter(context: Context , colors: Colors )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/get-item-count/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \ngetItemCount\n\n\ngetItemCount\n\u00b6\n\n\nfun getItemCount():\nInt\n\n\nOverrides \nQkAdapter.getItemCount",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/get-item-count.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/get-item-count/#getitemcount",
            "text": "fun getItemCount(): Int  Overrides  QkAdapter.getItemCount",
            "title": "getItemCount"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-dataset-changed/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nonDatasetChanged\n\n\nonDatasetChanged\n\u00b6\n\n\nfun onDatasetChanged():\nUnit\n\n\nOverrides \nQkAdapter.onDatasetChanged",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/on-dataset-changed.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-dataset-changed/#ondatasetchanged",
            "text": "fun onDatasetChanged(): Unit  Overrides  QkAdapter.onDatasetChanged",
            "title": "onDatasetChanged"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/get-item-view-type/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \ngetItemViewType\n\n\ngetItemViewType\n\u00b6\n\n\nfun getItemViewType(position:\nInt\n):\nInt",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/get-item-view-type.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/get-item-view-type/#getitemviewtype",
            "text": "fun getItemViewType(position: Int ): Int",
            "title": "getItemViewType"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nChipsAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.feature.compose/-chips-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-chips-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup , viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/contact-selected/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n / \ncontactSelected\n\n\ncontactSelected\n\u00b6\n\n\nval contactSelected: Subject<\nContact\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/contact-selected.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/contact-selected/#contactselected",
            "text": "val contactSelected: Subject< Contact >",
            "title": "contactSelected"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n\n\nContactAdapter\n\u00b6\n\n\nclass ContactAdapter :\nQkAdapter\n<\nContact\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactAdapter(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontactSelected\n\n\nval contactSelected: Subject<\nContact\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nareItemsTheSame\n\n\nfun areItemsTheSame(old:\nContact\n, new:\nContact\n):\nBoolean\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#contactadapter",
            "text": "class ContactAdapter : QkAdapter < Contact >",
            "title": "ContactAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#constructors",
            "text": "Name  Summary      <init>  ContactAdapter(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#properties",
            "text": "Name  Summary      contactSelected  val contactSelected: Subject< Contact >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#functions",
            "text": "Name  Summary      areItemsTheSame  fun areItemsTheSame(old: Contact , new: Contact ): Boolean    onBindViewHolder  fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/are-items-the-same/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n / \nareItemsTheSame\n\n\nareItemsTheSame\n\u00b6\n\n\nprotected fun areItemsTheSame(old:\nContact\n, new:\nContact\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/are-items-the-same.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/are-items-the-same/#areitemsthesame",
            "text": "protected fun areItemsTheSame(old: Contact , new: Contact ): Boolean",
            "title": "areItemsTheSame"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactAdapter(context:\nContext\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/-init-/#init",
            "text": "ContactAdapter(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(holder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(holder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nContactAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder",
            "title": "&nbsp;qksms/presentation.feature.compose/-contact-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-contact-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n\n\nMessagesAdapter\n\u00b6\n\n\nclass MessagesAdapter : RealmRecyclerViewAdapter<\nMessage\n,\nQkViewHolder\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessagesAdapter(context:\nContext\n, colors:\nColors\n, dateFormatter:\nDateFormatter\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nlongClicks\n\n\nval longClicks: Subject<\nMessage\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItemViewType\n\n\nfun getItemViewType(position:\nInt\n):\nInt\n\n\n\n\n\n\nonBindViewHolder\n\n\nfun onBindViewHolder(viewHolder:\nQkViewHolder\n, position:\nInt\n):\nUnit\n\n\n\n\n\n\nonCreateViewHolder\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder\nIf the viewType is negative, then the viewHolder has an attachment. We'll consider this a unique viewType even though it uses the same view, so that regular messages don't need clipToOutline set to true, and they don't need to worry about images\n\n\n\n\n\n\nonDetachedFromRecyclerView\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/#messagesadapter",
            "text": "class MessagesAdapter : RealmRecyclerViewAdapter< Message , QkViewHolder >",
            "title": "MessagesAdapter"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/#constructors",
            "text": "Name  Summary      <init>  MessagesAdapter(context: Context , colors: Colors , dateFormatter: DateFormatter )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/#properties",
            "text": "Name  Summary      longClicks  val longClicks: Subject< Message >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/#functions",
            "text": "Name  Summary      getItemViewType  fun getItemViewType(position: Int ): Int    onBindViewHolder  fun onBindViewHolder(viewHolder: QkViewHolder , position: Int ): Unit    onCreateViewHolder  fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder If the viewType is negative, then the viewHolder has an attachment. We'll consider this a unique viewType even though it uses the same view, so that regular messages don't need clipToOutline set to true, and they don't need to worry about images    onDetachedFromRecyclerView  fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/-init-/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessagesAdapter(context:\nContext\n, colors:\nColors\n, dateFormatter:\nDateFormatter\n)",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/-init-/#init",
            "text": "MessagesAdapter(context: Context , colors: Colors , dateFormatter: DateFormatter )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-bind-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \nonBindViewHolder\n\n\nonBindViewHolder\n\u00b6\n\n\nfun onBindViewHolder(viewHolder:\nQkViewHolder\n, position:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/on-bind-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-bind-view-holder/#onbindviewholder",
            "text": "fun onBindViewHolder(viewHolder: QkViewHolder , position: Int ): Unit",
            "title": "onBindViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-detached-from-recycler-view/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \nonDetachedFromRecyclerView\n\n\nonDetachedFromRecyclerView\n\u00b6\n\n\nfun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/on-detached-from-recycler-view.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-detached-from-recycler-view/#ondetachedfromrecyclerview",
            "text": "fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "onDetachedFromRecyclerView"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/get-item-view-type/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \ngetItemViewType\n\n\ngetItemViewType\n\u00b6\n\n\nfun getItemViewType(position:\nInt\n):\nInt",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/get-item-view-type.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/get-item-view-type/#getitemviewtype",
            "text": "fun getItemViewType(position: Int ): Int",
            "title": "getItemViewType"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-create-view-holder/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \nonCreateViewHolder\n\n\nonCreateViewHolder\n\u00b6\n\n\nfun onCreateViewHolder(parent:\nViewGroup\n?, viewType:\nInt\n):\nQkViewHolder\n\n\nIf the viewType is negative, then the viewHolder has an attachment. We'll consider\nthis a unique viewType even though it uses the same view, so that regular messages\ndon't need clipToOutline set to true, and they don't need to worry about images",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/on-create-view-holder.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/on-create-view-holder/#oncreateviewholder",
            "text": "fun onCreateViewHolder(parent: ViewGroup ?, viewType: Int ): QkViewHolder  If the viewType is negative, then the viewHolder has an attachment. We'll consider\nthis a unique viewType even though it uses the same view, so that regular messages\ndon't need clipToOutline set to true, and they don't need to worry about images",
            "title": "onCreateViewHolder"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/long-clicks/",
            "text": "qksms\n / \npresentation.feature.compose\n / \nMessagesAdapter\n / \nlongClicks\n\n\nlongClicks\n\u00b6\n\n\nval longClicks: Subject<\nMessage\n>",
            "title": "&nbsp;qksms/presentation.feature.compose/-messages-adapter/long-clicks.md"
        },
        {
            "location": "/qksms/presentation.feature.compose/-messages-adapter/long-clicks/#longclicks",
            "text": "val longClicks: Subject< Message >",
            "title": "longClicks"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/receive-message/",
            "text": "qksms\n / \npresentation.receiver\n / \nSmsReceiver\n / \nreceiveMessage\n\n\nreceiveMessage\n\u00b6\n\n\n@Inject lateinit var receiveMessage:\nReceiveSms",
            "title": "&nbsp;qksms/presentation.receiver/-sms-receiver/receive-message.md"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/receive-message/#receivemessage",
            "text": "@Inject lateinit var receiveMessage: ReceiveSms",
            "title": "receiveMessage"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nSmsReceiver\n\n\nSmsReceiver\n\u00b6\n\n\nclass SmsReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSmsReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nreceiveMessage\n\n\nlateinit var receiveMessage:\nReceiveSms\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-sms-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/#smsreceiver",
            "text": "class SmsReceiver : BroadcastReceiver",
            "title": "SmsReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/#constructors",
            "text": "Name  Summary      <init>  SmsReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/#properties",
            "text": "Name  Summary      receiveMessage  lateinit var receiveMessage: ReceiveSms",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nSmsReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-sms-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nSmsReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSmsReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-sms-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-sms-receiver/-init-/#init",
            "text": "SmsReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/sync-message/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsUpdatedReceiver\n / \nsyncMessage\n\n\nsyncMessage\n\u00b6\n\n\n@Inject lateinit var syncMessage:\nSyncMessage",
            "title": "&nbsp;qksms/presentation.receiver/-mms-updated-receiver/sync-message.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/sync-message/#syncmessage",
            "text": "@Inject lateinit var syncMessage: SyncMessage",
            "title": "syncMessage"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsUpdatedReceiver\n\n\nMmsUpdatedReceiver\n\u00b6\n\n\nclass MmsUpdatedReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsUpdatedReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsyncMessage\n\n\nlateinit var syncMessage:\nSyncMessage\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nURI\n\n\nconst val URI:\nString",
            "title": "&nbsp;qksms/presentation.receiver/-mms-updated-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/#mmsupdatedreceiver",
            "text": "class MmsUpdatedReceiver : BroadcastReceiver",
            "title": "MmsUpdatedReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/#constructors",
            "text": "Name  Summary      <init>  MmsUpdatedReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/#properties",
            "text": "Name  Summary      syncMessage  lateinit var syncMessage: SyncMessage",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/#companion-object-properties",
            "text": "Name  Summary      URI  const val URI: String",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsUpdatedReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mms-updated-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsUpdatedReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsUpdatedReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mms-updated-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/-init-/#init",
            "text": "MmsUpdatedReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/-u-r-i/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsUpdatedReceiver\n / \nURI\n\n\nURI\n\u00b6\n\n\nconst val URI:\nString",
            "title": "&nbsp;qksms/presentation.receiver/-mms-updated-receiver/-u-r-i.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-updated-receiver/-u-r-i/#uri",
            "text": "const val URI: String",
            "title": "URI"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/mark-sent/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageSentReceiver\n / \nmarkSent\n\n\nmarkSent\n\u00b6\n\n\n@Inject lateinit var markSent:\nMarkSent",
            "title": "&nbsp;qksms/presentation.receiver/-message-sent-receiver/mark-sent.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/mark-sent/#marksent",
            "text": "@Inject lateinit var markSent: MarkSent",
            "title": "markSent"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageSentReceiver\n\n\nMessageSentReceiver\n\u00b6\n\n\nclass MessageSentReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessageSentReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmarkFailed\n\n\nlateinit var markFailed:\nMarkFailed\n\n\n\n\n\n\nmarkSent\n\n\nlateinit var markSent:\nMarkSent\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-message-sent-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/#messagesentreceiver",
            "text": "class MessageSentReceiver : BroadcastReceiver",
            "title": "MessageSentReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/#constructors",
            "text": "Name  Summary      <init>  MessageSentReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/#properties",
            "text": "Name  Summary      markFailed  lateinit var markFailed: MarkFailed    markSent  lateinit var markSent: MarkSent",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageSentReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-message-sent-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/mark-failed/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageSentReceiver\n / \nmarkFailed\n\n\nmarkFailed\n\u00b6\n\n\n@Inject lateinit var markFailed:\nMarkFailed",
            "title": "&nbsp;qksms/presentation.receiver/-message-sent-receiver/mark-failed.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/mark-failed/#markfailed",
            "text": "@Inject lateinit var markFailed: MarkFailed",
            "title": "markFailed"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageSentReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessageSentReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-message-sent-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-sent-receiver/-init-/#init",
            "text": "MessageSentReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/",
            "text": "qksms\n / \npresentation.receiver\n\n\nPackage presentation.receiver\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nDefaultSmsChangedReceiver\n\n\nclass DefaultSmsChangedReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nMarkReadReceiver\n\n\nclass MarkReadReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nMarkSeenReceiver\n\n\nclass MarkSeenReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nMessageDeliveredReceiver\n\n\nclass MessageDeliveredReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nMessageSentReceiver\n\n\nclass MessageSentReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nMmsReceivedReceiver\n\n\nclass MmsReceivedReceiver : MmsReceivedReceiver\n\n\n\n\n\n\nMmsReceiver\n\n\nclass MmsReceiver : PushReceiver\n\n\n\n\n\n\nMmsSentReceiver\n\n\nclass MmsSentReceiver : MmsSentReceiver\n\n\n\n\n\n\nMmsUpdatedReceiver\n\n\nclass MmsUpdatedReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nRemoteMessagingReceiver\n\n\nclass RemoteMessagingReceiver :\nBroadcastReceiver\n\n\n\n\n\n\nSmsReceiver\n\n\nclass SmsReceiver :\nBroadcastReceiver",
            "title": "&nbsp;qksms/presentation.receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/#package-presentationreceiver",
            "text": "",
            "title": "Package presentation.receiver"
        },
        {
            "location": "/qksms/presentation.receiver/#types",
            "text": "Name  Summary      DefaultSmsChangedReceiver  class DefaultSmsChangedReceiver : BroadcastReceiver    MarkReadReceiver  class MarkReadReceiver : BroadcastReceiver    MarkSeenReceiver  class MarkSeenReceiver : BroadcastReceiver    MessageDeliveredReceiver  class MessageDeliveredReceiver : BroadcastReceiver    MessageSentReceiver  class MessageSentReceiver : BroadcastReceiver    MmsReceivedReceiver  class MmsReceivedReceiver : MmsReceivedReceiver    MmsReceiver  class MmsReceiver : PushReceiver    MmsSentReceiver  class MmsSentReceiver : MmsSentReceiver    MmsUpdatedReceiver  class MmsUpdatedReceiver : BroadcastReceiver    RemoteMessagingReceiver  class RemoteMessagingReceiver : BroadcastReceiver    SmsReceiver  class SmsReceiver : BroadcastReceiver",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nDefaultSmsChangedReceiver\n\n\nDefaultSmsChangedReceiver\n\u00b6\n\n\nclass DefaultSmsChangedReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nDefaultSmsChangedReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\npartialSync\n\n\nlateinit var partialSync:\nPartialSync\n\n\n\n\n\n\nprefs\n\n\nlateinit var prefs:\nPreferences\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-default-sms-changed-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/#defaultsmschangedreceiver",
            "text": "class DefaultSmsChangedReceiver : BroadcastReceiver",
            "title": "DefaultSmsChangedReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/#constructors",
            "text": "Name  Summary      <init>  DefaultSmsChangedReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/#properties",
            "text": "Name  Summary      partialSync  lateinit var partialSync: PartialSync    prefs  lateinit var prefs: Preferences",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nDefaultSmsChangedReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-default-sms-changed-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nDefaultSmsChangedReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nDefaultSmsChangedReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-default-sms-changed-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/-init-/#init",
            "text": "DefaultSmsChangedReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/prefs/",
            "text": "qksms\n / \npresentation.receiver\n / \nDefaultSmsChangedReceiver\n / \nprefs\n\n\nprefs\n\u00b6\n\n\n@Inject lateinit var prefs:\nPreferences",
            "title": "&nbsp;qksms/presentation.receiver/-default-sms-changed-receiver/prefs.md"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/prefs/#prefs",
            "text": "@Inject lateinit var prefs: Preferences",
            "title": "prefs"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/partial-sync/",
            "text": "qksms\n / \npresentation.receiver\n / \nDefaultSmsChangedReceiver\n / \npartialSync\n\n\npartialSync\n\u00b6\n\n\n@Inject lateinit var partialSync:\nPartialSync",
            "title": "&nbsp;qksms/presentation.receiver/-default-sms-changed-receiver/partial-sync.md"
        },
        {
            "location": "/qksms/presentation.receiver/-default-sms-changed-receiver/partial-sync/#partialsync",
            "text": "@Inject lateinit var partialSync: PartialSync",
            "title": "partialSync"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceiver\n\n\nMmsReceiver\n\u00b6\n\n\nclass MmsReceiver : PushReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mms-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-receiver/#mmsreceiver",
            "text": "class MmsReceiver : PushReceiver",
            "title": "MmsReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-receiver/#constructors",
            "text": "Name  Summary      <init>  MmsReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mms-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-receiver/-init-/#init",
            "text": "MmsReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/mark-delivered/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageDeliveredReceiver\n / \nmarkDelivered\n\n\nmarkDelivered\n\u00b6\n\n\n@Inject lateinit var markDelivered:\nMarkDelivered",
            "title": "&nbsp;qksms/presentation.receiver/-message-delivered-receiver/mark-delivered.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/mark-delivered/#markdelivered",
            "text": "@Inject lateinit var markDelivered: MarkDelivered",
            "title": "markDelivered"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageDeliveredReceiver\n\n\nMessageDeliveredReceiver\n\u00b6\n\n\nclass MessageDeliveredReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessageDeliveredReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmarkDelivered\n\n\nlateinit var markDelivered:\nMarkDelivered\n\n\n\n\n\n\nmarkDeliveryFailed\n\n\nlateinit var markDeliveryFailed:\nMarkDeliveryFailed\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-message-delivered-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/#messagedeliveredreceiver",
            "text": "class MessageDeliveredReceiver : BroadcastReceiver",
            "title": "MessageDeliveredReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/#constructors",
            "text": "Name  Summary      <init>  MessageDeliveredReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/#properties",
            "text": "Name  Summary      markDelivered  lateinit var markDelivered: MarkDelivered    markDeliveryFailed  lateinit var markDeliveryFailed: MarkDeliveryFailed",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageDeliveredReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-message-delivered-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageDeliveredReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessageDeliveredReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-message-delivered-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/-init-/#init",
            "text": "MessageDeliveredReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/mark-delivery-failed/",
            "text": "qksms\n / \npresentation.receiver\n / \nMessageDeliveredReceiver\n / \nmarkDeliveryFailed\n\n\nmarkDeliveryFailed\n\u00b6\n\n\n@Inject lateinit var markDeliveryFailed:\nMarkDeliveryFailed",
            "title": "&nbsp;qksms/presentation.receiver/-message-delivered-receiver/mark-delivery-failed.md"
        },
        {
            "location": "/qksms/presentation.receiver/-message-delivered-receiver/mark-delivery-failed/#markdeliveryfailed",
            "text": "@Inject lateinit var markDeliveryFailed: MarkDeliveryFailed",
            "title": "markDeliveryFailed"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkSeenReceiver\n\n\nMarkSeenReceiver\n\u00b6\n\n\nclass MarkSeenReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkSeenReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmarkSeen\n\n\nlateinit var markSeen:\nMarkSeen\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mark-seen-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/#markseenreceiver",
            "text": "class MarkSeenReceiver : BroadcastReceiver",
            "title": "MarkSeenReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/#constructors",
            "text": "Name  Summary      <init>  MarkSeenReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/#properties",
            "text": "Name  Summary      markSeen  lateinit var markSeen: MarkSeen",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkSeenReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mark-seen-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkSeenReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkSeenReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mark-seen-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/-init-/#init",
            "text": "MarkSeenReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/mark-seen/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkSeenReceiver\n / \nmarkSeen\n\n\nmarkSeen\n\u00b6\n\n\n@Inject lateinit var markSeen:\nMarkSeen",
            "title": "&nbsp;qksms/presentation.receiver/-mark-seen-receiver/mark-seen.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-seen-receiver/mark-seen/#markseen",
            "text": "@Inject lateinit var markSeen: MarkSeen",
            "title": "markSeen"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/sync-message/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsSentReceiver\n / \nsyncMessage\n\n\nsyncMessage\n\u00b6\n\n\n@Inject lateinit var syncMessage:\nSyncMessage",
            "title": "&nbsp;qksms/presentation.receiver/-mms-sent-receiver/sync-message.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/sync-message/#syncmessage",
            "text": "@Inject lateinit var syncMessage: SyncMessage",
            "title": "syncMessage"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsSentReceiver\n\n\nMmsSentReceiver\n\u00b6\n\n\nclass MmsSentReceiver : MmsSentReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsSentReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nsyncMessage\n\n\nlateinit var syncMessage:\nSyncMessage\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mms-sent-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/#mmssentreceiver",
            "text": "class MmsSentReceiver : MmsSentReceiver",
            "title": "MmsSentReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/#constructors",
            "text": "Name  Summary      <init>  MmsSentReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/#properties",
            "text": "Name  Summary      syncMessage  lateinit var syncMessage: SyncMessage",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsSentReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mms-sent-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsSentReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsSentReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mms-sent-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-sent-receiver/-init-/#init",
            "text": "MmsSentReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/receive-mms/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceivedReceiver\n / \nreceiveMms\n\n\nreceiveMms\n\u00b6\n\n\n@Inject lateinit var receiveMms:\nReceiveMms",
            "title": "&nbsp;qksms/presentation.receiver/-mms-received-receiver/receive-mms.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/receive-mms/#receivemms",
            "text": "@Inject lateinit var receiveMms: ReceiveMms",
            "title": "receiveMms"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceivedReceiver\n\n\nMmsReceivedReceiver\n\u00b6\n\n\nclass MmsReceivedReceiver : MmsReceivedReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsReceivedReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nreceiveMms\n\n\nlateinit var receiveMms:\nReceiveMms\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonMessageReceived\n\n\nfun onMessageReceived(messageUri:\nUri\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mms-received-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/#mmsreceivedreceiver",
            "text": "class MmsReceivedReceiver : MmsReceivedReceiver",
            "title": "MmsReceivedReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/#constructors",
            "text": "Name  Summary      <init>  MmsReceivedReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/#properties",
            "text": "Name  Summary      receiveMms  lateinit var receiveMms: ReceiveMms",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/#functions",
            "text": "Name  Summary      onMessageReceived  fun onMessageReceived(messageUri: Uri ?): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceivedReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsReceivedReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mms-received-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/-init-/#init",
            "text": "MmsReceivedReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/on-message-received/",
            "text": "qksms\n / \npresentation.receiver\n / \nMmsReceivedReceiver\n / \nonMessageReceived\n\n\nonMessageReceived\n\u00b6\n\n\nprotected fun onMessageReceived(messageUri:\nUri\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mms-received-receiver/on-message-received.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mms-received-receiver/on-message-received/#onmessagereceived",
            "text": "protected fun onMessageReceived(messageUri: Uri ?): Unit",
            "title": "onMessageReceived"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nRemoteMessagingReceiver\n\n\nRemoteMessagingReceiver\n\u00b6\n\n\nclass RemoteMessagingReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nRemoteMessagingReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmarkRead\n\n\nlateinit var markRead:\nMarkRead\n\n\n\n\n\n\nsendMessage\n\n\nlateinit var sendMessage:\nSendMessage\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-remote-messaging-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/#remotemessagingreceiver",
            "text": "class RemoteMessagingReceiver : BroadcastReceiver",
            "title": "RemoteMessagingReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/#constructors",
            "text": "Name  Summary      <init>  RemoteMessagingReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/#properties",
            "text": "Name  Summary      markRead  lateinit var markRead: MarkRead    sendMessage  lateinit var sendMessage: SendMessage",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nRemoteMessagingReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-remote-messaging-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/send-message/",
            "text": "qksms\n / \npresentation.receiver\n / \nRemoteMessagingReceiver\n / \nsendMessage\n\n\nsendMessage\n\u00b6\n\n\n@Inject lateinit var sendMessage:\nSendMessage",
            "title": "&nbsp;qksms/presentation.receiver/-remote-messaging-receiver/send-message.md"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/send-message/#sendmessage",
            "text": "@Inject lateinit var sendMessage: SendMessage",
            "title": "sendMessage"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nRemoteMessagingReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nRemoteMessagingReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-remote-messaging-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/-init-/#init",
            "text": "RemoteMessagingReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/mark-read/",
            "text": "qksms\n / \npresentation.receiver\n / \nRemoteMessagingReceiver\n / \nmarkRead\n\n\nmarkRead\n\u00b6\n\n\n@Inject lateinit var markRead:\nMarkRead",
            "title": "&nbsp;qksms/presentation.receiver/-remote-messaging-receiver/mark-read.md"
        },
        {
            "location": "/qksms/presentation.receiver/-remote-messaging-receiver/mark-read/#markread",
            "text": "@Inject lateinit var markRead: MarkRead",
            "title": "markRead"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkReadReceiver\n\n\nMarkReadReceiver\n\u00b6\n\n\nclass MarkReadReceiver :\nBroadcastReceiver\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkReadReceiver()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmarkRead\n\n\nlateinit var markRead:\nMarkRead\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonReceive\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mark-read-receiver/index.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/#markreadreceiver",
            "text": "class MarkReadReceiver : BroadcastReceiver",
            "title": "MarkReadReceiver"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/#constructors",
            "text": "Name  Summary      <init>  MarkReadReceiver()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/#properties",
            "text": "Name  Summary      markRead  lateinit var markRead: MarkRead",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/#functions",
            "text": "Name  Summary      onReceive  fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/on-receive/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkReadReceiver\n / \nonReceive\n\n\nonReceive\n\u00b6\n\n\nfun onReceive(context:\nContext\n, intent:\nIntent\n):\nUnit",
            "title": "&nbsp;qksms/presentation.receiver/-mark-read-receiver/on-receive.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/on-receive/#onreceive",
            "text": "fun onReceive(context: Context , intent: Intent ): Unit",
            "title": "onReceive"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/-init-/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkReadReceiver\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkReadReceiver()",
            "title": "&nbsp;qksms/presentation.receiver/-mark-read-receiver/-init-.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/-init-/#init",
            "text": "MarkReadReceiver()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/mark-read/",
            "text": "qksms\n / \npresentation.receiver\n / \nMarkReadReceiver\n / \nmarkRead\n\n\nmarkRead\n\u00b6\n\n\n@Inject lateinit var markRead:\nMarkRead",
            "title": "&nbsp;qksms/presentation.receiver/-mark-read-receiver/mark-read.md"
        },
        {
            "location": "/qksms/presentation.receiver/-mark-read-receiver/mark-read/#markread",
            "text": "@Inject lateinit var markRead: MarkRead",
            "title": "markRead"
        },
        {
            "location": "/qksms/common.util/-message-utils/extract-addr-spec/",
            "text": "qksms\n / \ncommon.util\n / \nMessageUtils\n / \nextractAddrSpec\n\n\nextractAddrSpec\n\u00b6\n\n\nfun extractAddrSpec(address:\nString\n):\nString",
            "title": "&nbsp;qksms/common.util/-message-utils/extract-addr-spec.md"
        },
        {
            "location": "/qksms/common.util/-message-utils/extract-addr-spec/#extractaddrspec",
            "text": "fun extractAddrSpec(address: String ): String",
            "title": "extractAddrSpec"
        },
        {
            "location": "/qksms/common.util/-message-utils/",
            "text": "qksms\n / \ncommon.util\n / \nMessageUtils\n\n\nMessageUtils\n\u00b6\n\n\nobject MessageUtils\n\n\nUtils for using Telephony functions on lower API levels\n\n\nAdapted from \nhttps://android.googlesource.com/platform/packages/apps/Messaging/+/master/src/com/android/messaging/sms/MmsSmsUtils.java\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nNAME_ADDR_EMAIL_PATTERN\n\n\nval NAME_ADDR_EMAIL_PATTERN:\nPattern\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nextractAddrSpec\n\n\nfun extractAddrSpec(address:\nString\n):\nString\n\n\n\n\n\n\nisEmailAddress\n\n\nfun isEmailAddress(address:\nString\n):\nBoolean",
            "title": "&nbsp;qksms/common.util/-message-utils/index.md"
        },
        {
            "location": "/qksms/common.util/-message-utils/#messageutils",
            "text": "object MessageUtils  Utils for using Telephony functions on lower API levels  Adapted from  https://android.googlesource.com/platform/packages/apps/Messaging/+/master/src/com/android/messaging/sms/MmsSmsUtils.java",
            "title": "MessageUtils"
        },
        {
            "location": "/qksms/common.util/-message-utils/#properties",
            "text": "Name  Summary      NAME_ADDR_EMAIL_PATTERN  val NAME_ADDR_EMAIL_PATTERN: Pattern",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-message-utils/#functions",
            "text": "Name  Summary      extractAddrSpec  fun extractAddrSpec(address: String ): String    isEmailAddress  fun isEmailAddress(address: String ): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-message-utils/-n-a-m-e_-a-d-d-r_-e-m-a-i-l_-p-a-t-t-e-r-n/",
            "text": "qksms\n / \ncommon.util\n / \nMessageUtils\n / \nNAME_ADDR_EMAIL_PATTERN\n\n\nNAME_ADDR_EMAIL_PATTERN\n\u00b6\n\n\nval NAME_ADDR_EMAIL_PATTERN:\nPattern",
            "title": "&nbsp;qksms/common.util/-message-utils/-n-a-m-e_-a-d-d-r_-e-m-a-i-l_-p-a-t-t-e-r-n.md"
        },
        {
            "location": "/qksms/common.util/-message-utils/-n-a-m-e_-a-d-d-r_-e-m-a-i-l_-p-a-t-t-e-r-n/#name_addr_email_pattern",
            "text": "val NAME_ADDR_EMAIL_PATTERN: Pattern",
            "title": "NAME_ADDR_EMAIL_PATTERN"
        },
        {
            "location": "/qksms/common.util/-message-utils/is-email-address/",
            "text": "qksms\n / \ncommon.util\n / \nMessageUtils\n / \nisEmailAddress\n\n\nisEmailAddress\n\u00b6\n\n\nfun isEmailAddress(address:\nString\n):\nBoolean",
            "title": "&nbsp;qksms/common.util/-message-utils/is-email-address.md"
        },
        {
            "location": "/qksms/common.util/-message-utils/is-email-address/#isemailaddress",
            "text": "fun isEmailAddress(address: String ): Boolean",
            "title": "isEmailAddress"
        },
        {
            "location": "/qksms/common.util/-keys/reset/",
            "text": "qksms\n / \ncommon.util\n / \nKeys\n / \nreset\n\n\nreset\n\u00b6\n\n\nfun reset():\nUnit\n\n\nShould be called when a new sync is being started",
            "title": "&nbsp;qksms/common.util/-keys/reset.md"
        },
        {
            "location": "/qksms/common.util/-keys/reset/#reset",
            "text": "fun reset(): Unit  Should be called when a new sync is being started",
            "title": "reset"
        },
        {
            "location": "/qksms/common.util/-keys/",
            "text": "qksms\n / \ncommon.util\n / \nKeys\n\n\nKeys\n\u00b6\n\n\n@Singleton class Keys\n\n\nHelper class for generating incrementing ids for messages\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nKeys()\nHelper class for generating incrementing ids for messages\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nnewId\n\n\nfun newId():\nLong\nReturns a valid ID that can be used to store a new message\n\n\n\n\n\n\nreset\n\n\nfun reset():\nUnit\nShould be called when a new sync is being started",
            "title": "&nbsp;qksms/common.util/-keys/index.md"
        },
        {
            "location": "/qksms/common.util/-keys/#keys",
            "text": "@Singleton class Keys  Helper class for generating incrementing ids for messages",
            "title": "Keys"
        },
        {
            "location": "/qksms/common.util/-keys/#constructors",
            "text": "Name  Summary      <init>  Keys() Helper class for generating incrementing ids for messages",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-keys/#functions",
            "text": "Name  Summary      newId  fun newId(): Long Returns a valid ID that can be used to store a new message    reset  fun reset(): Unit Should be called when a new sync is being started",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-keys/new-id/",
            "text": "qksms\n / \ncommon.util\n / \nKeys\n / \nnewId\n\n\nnewId\n\u00b6\n\n\nfun newId():\nLong\n\n\nReturns a valid ID that can be used to store a new message",
            "title": "&nbsp;qksms/common.util/-keys/new-id.md"
        },
        {
            "location": "/qksms/common.util/-keys/new-id/#newid",
            "text": "fun newId(): Long  Returns a valid ID that can be used to store a new message",
            "title": "newId"
        },
        {
            "location": "/qksms/common.util/-keys/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nKeys\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nKeys()\n\n\nHelper class for generating incrementing ids for messages",
            "title": "&nbsp;qksms/common.util/-keys/-init-.md"
        },
        {
            "location": "/qksms/common.util/-keys/-init-/#init",
            "text": "Keys()  Helper class for generating incrementing ids for messages",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/",
            "text": "qksms\n / \ncommon.util\n / \nAnalyticsImpl\n\n\nAnalyticsImpl\n\u00b6\n\n\n@Singleton class AnalyticsImpl :\nAnalytics\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nAnalyticsImpl()\nAnalyticsImpl(context:\nContext\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ntrack\n\n\nfun track(event:\nString\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-analytics-impl/index.md"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/#analyticsimpl",
            "text": "@Singleton class AnalyticsImpl : Analytics",
            "title": "AnalyticsImpl"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/#constructors",
            "text": "Name  Summary      <init>  AnalyticsImpl() AnalyticsImpl(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/#functions",
            "text": "Name  Summary      track  fun track(event: String ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nAnalyticsImpl\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nAnalyticsImpl()\n\n\nAnalyticsImpl(context:\nContext\n)",
            "title": "&nbsp;qksms/common.util/-analytics-impl/-init-.md"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/-init-/#init",
            "text": "AnalyticsImpl()  AnalyticsImpl(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/track/",
            "text": "qksms\n / \ncommon.util\n / \nAnalyticsImpl\n / \ntrack\n\n\ntrack\n\u00b6\n\n\nfun track(event:\nString\n):\nUnit\n\n\nOverrides \nAnalytics.track",
            "title": "&nbsp;qksms/common.util/-analytics-impl/track.md"
        },
        {
            "location": "/qksms/common.util/-analytics-impl/track/#track",
            "text": "fun track(event: String ): Unit  Overrides  Analytics.track",
            "title": "track"
        },
        {
            "location": "/qksms/common.util/",
            "text": "qksms\n / \ncommon.util\n\n\nPackage common.util\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAnalytics\n\n\ninterface Analytics\n\n\n\n\n\n\nAnalyticsImpl\n\n\nclass AnalyticsImpl :\nAnalytics\n\n\n\n\n\n\nClipboardUtils\n\n\nobject ClipboardUtils\n\n\n\n\n\n\nColors\n\n\nclass Colors\n\n\n\n\n\n\nContactImageLoader\n\n\nclass ContactImageLoader : ModelLoader<\nString\n,\nInputStream\n>\n\n\n\n\n\n\nDateFormatter\n\n\nclass DateFormatter\n\n\n\n\n\n\nGlideAppModule\n\n\nclass GlideAppModule : AppGlideModule\n\n\n\n\n\n\nKeys\n\n\nclass Keys\nHelper class for generating incrementing ids for messages\n\n\n\n\n\n\nLiveRealmData\n\n\nclass LiveRealmData<T : RealmModel> : LiveData<RealmResults<T>>\n\n\n\n\n\n\nMessageUtils\n\n\nobject MessageUtils\nUtils for using Telephony functions on lower API levels\n\n\n\n\n\n\nNotificationManager\n\n\nclass NotificationManager\n\n\n\n\n\n\nOptional\n\n\ndata class Optional<out T>\n\n\n\n\n\n\nPermissions\n\n\nclass Permissions\n\n\n\n\n\n\nPreferences\n\n\nclass Preferences\n\n\n\n\n\n\nSyncManager\n\n\nclass SyncManager",
            "title": "&nbsp;qksms/common.util/index.md"
        },
        {
            "location": "/qksms/common.util/#package-commonutil",
            "text": "",
            "title": "Package common.util"
        },
        {
            "location": "/qksms/common.util/#types",
            "text": "Name  Summary      Analytics  interface Analytics    AnalyticsImpl  class AnalyticsImpl : Analytics    ClipboardUtils  object ClipboardUtils    Colors  class Colors    ContactImageLoader  class ContactImageLoader : ModelLoader< String , InputStream >    DateFormatter  class DateFormatter    GlideAppModule  class GlideAppModule : AppGlideModule    Keys  class Keys Helper class for generating incrementing ids for messages    LiveRealmData  class LiveRealmData<T : RealmModel> : LiveData<RealmResults<T>>    MessageUtils  object MessageUtils Utils for using Telephony functions on lower API levels    NotificationManager  class NotificationManager    Optional  data class Optional<out T>    Permissions  class Permissions    Preferences  class Preferences    SyncManager  class SyncManager",
            "title": "Types"
        },
        {
            "location": "/qksms/common.util/-sync-manager/sync-message/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nsyncMessage\n\n\nsyncMessage\n\u00b6\n\n\nfun syncMessage(uri:\nUri\n): Flowable<\nMessage\n>",
            "title": "&nbsp;qksms/common.util/-sync-manager/sync-message.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/sync-message/#syncmessage",
            "text": "fun syncMessage(uri: Uri ): Flowable< Message >",
            "title": "syncMessage"
        },
        {
            "location": "/qksms/common.util/-sync-manager/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n\n\nSyncManager\n\u00b6\n\n\n@Singleton class SyncManager\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nStatus\n\n\nsealed class Status\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSyncManager(context:\nContext\n, messageRepo:\nMessageRepository\n, cursorToConversation:\nCursorToConversation\n, cursorToMessage:\nCursorToMessage\n, cursorToRecipient:\nCursorToRecipient\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nperformSync\n\n\nfun performSync(fullSync:\nBoolean\n= false):\nUnit\n\n\n\n\n\n\nsyncMessage\n\n\nfun syncMessage(uri:\nUri\n): Flowable<\nMessage\n>",
            "title": "&nbsp;qksms/common.util/-sync-manager/index.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/#syncmanager",
            "text": "@Singleton class SyncManager",
            "title": "SyncManager"
        },
        {
            "location": "/qksms/common.util/-sync-manager/#types",
            "text": "Name  Summary      Status  sealed class Status",
            "title": "Types"
        },
        {
            "location": "/qksms/common.util/-sync-manager/#constructors",
            "text": "Name  Summary      <init>  SyncManager(context: Context , messageRepo: MessageRepository , cursorToConversation: CursorToConversation , cursorToMessage: CursorToMessage , cursorToRecipient: CursorToRecipient )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-sync-manager/#functions",
            "text": "Name  Summary      performSync  fun performSync(fullSync: Boolean = false): Unit    syncMessage  fun syncMessage(uri: Uri ): Flowable< Message >",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-sync-manager/perform-sync/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nperformSync\n\n\nperformSync\n\u00b6\n\n\nfun performSync(fullSync:\nBoolean\n= false):\nUnit",
            "title": "&nbsp;qksms/common.util/-sync-manager/perform-sync.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/perform-sync/#performsync",
            "text": "fun performSync(fullSync: Boolean = false): Unit",
            "title": "performSync"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSyncManager(context:\nContext\n, messageRepo:\nMessageRepository\n, cursorToConversation:\nCursorToConversation\n, cursorToMessage:\nCursorToMessage\n, cursorToRecipient:\nCursorToRecipient\n)",
            "title": "&nbsp;qksms/common.util/-sync-manager/-init-.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-init-/#init",
            "text": "SyncManager(context: Context , messageRepo: MessageRepository , cursorToConversation: CursorToConversation , cursorToMessage: CursorToMessage , cursorToRecipient: CursorToRecipient )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nStatus\n\n\nStatus\n\u00b6\n\n\nsealed class Status\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nIdle\n\n\nclass Idle : Status\n\n\n\n\n\n\nRunning\n\n\nclass Running : Status\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nIdle\n\n\nclass Idle : Status\n\n\n\n\n\n\nRunning\n\n\nclass Running : Status",
            "title": "&nbsp;qksms/common.util/-sync-manager/-status/index.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/#status",
            "text": "sealed class Status",
            "title": "Status"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/#types",
            "text": "Name  Summary      Idle  class Idle : Status    Running  class Running : Status",
            "title": "Types"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/#inheritors",
            "text": "Name  Summary      Idle  class Idle : Status    Running  class Running : Status",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-running/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nStatus\n / \nRunning\n\n\nRunning\n\u00b6\n\n\nclass Running :\nStatus\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nRunning()",
            "title": "&nbsp;qksms/common.util/-sync-manager/-status/-running/index.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-running/#running",
            "text": "class Running : Status",
            "title": "Running"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-running/#constructors",
            "text": "Name  Summary      <init>  Running()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-running/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nStatus\n / \nRunning\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nRunning()",
            "title": "&nbsp;qksms/common.util/-sync-manager/-status/-running/-init-.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-running/-init-/#init",
            "text": "Running()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-idle/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nStatus\n / \nIdle\n\n\nIdle\n\u00b6\n\n\nclass Idle :\nStatus\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nIdle()",
            "title": "&nbsp;qksms/common.util/-sync-manager/-status/-idle/index.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-idle/#idle",
            "text": "class Idle : Status",
            "title": "Idle"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-idle/#constructors",
            "text": "Name  Summary      <init>  Idle()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-idle/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nSyncManager\n / \nStatus\n / \nIdle\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nIdle()",
            "title": "&nbsp;qksms/common.util/-sync-manager/-status/-idle/-init-.md"
        },
        {
            "location": "/qksms/common.util/-sync-manager/-status/-idle/-init-/#init",
            "text": "Idle()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-timestamp/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n / \ngetTimestamp\n\n\ngetTimestamp\n\u00b6\n\n\nfun getTimestamp(date:\nLong\n):\nString",
            "title": "&nbsp;qksms/common.util/-date-formatter/get-timestamp.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-timestamp/#gettimestamp",
            "text": "fun getTimestamp(date: Long ): String",
            "title": "getTimestamp"
        },
        {
            "location": "/qksms/common.util/-date-formatter/context/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/common.util/-date-formatter/context.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/common.util/-date-formatter/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n\n\nDateFormatter\n\u00b6\n\n\n@Singleton class DateFormatter\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nDateFormatter(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetConversationTimestamp\n\n\nfun getConversationTimestamp(date:\nLong\n):\nString\n\n\n\n\n\n\ngetMessageTimestamp\n\n\nfun getMessageTimestamp(date:\nLong\n):\nString\n\n\n\n\n\n\ngetTimestamp\n\n\nfun getTimestamp(date:\nLong\n):\nString",
            "title": "&nbsp;qksms/common.util/-date-formatter/index.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/#dateformatter",
            "text": "@Singleton class DateFormatter",
            "title": "DateFormatter"
        },
        {
            "location": "/qksms/common.util/-date-formatter/#constructors",
            "text": "Name  Summary      <init>  DateFormatter(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-date-formatter/#properties",
            "text": "Name  Summary      context  val context: Context",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-date-formatter/#functions",
            "text": "Name  Summary      getConversationTimestamp  fun getConversationTimestamp(date: Long ): String    getMessageTimestamp  fun getMessageTimestamp(date: Long ): String    getTimestamp  fun getTimestamp(date: Long ): String",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-date-formatter/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nDateFormatter(context:\nContext\n)",
            "title": "&nbsp;qksms/common.util/-date-formatter/-init-.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/-init-/#init",
            "text": "DateFormatter(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-conversation-timestamp/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n / \ngetConversationTimestamp\n\n\ngetConversationTimestamp\n\u00b6\n\n\nfun getConversationTimestamp(date:\nLong\n):\nString",
            "title": "&nbsp;qksms/common.util/-date-formatter/get-conversation-timestamp.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-conversation-timestamp/#getconversationtimestamp",
            "text": "fun getConversationTimestamp(date: Long ): String",
            "title": "getConversationTimestamp"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-message-timestamp/",
            "text": "qksms\n / \ncommon.util\n / \nDateFormatter\n / \ngetMessageTimestamp\n\n\ngetMessageTimestamp\n\u00b6\n\n\nfun getMessageTimestamp(date:\nLong\n):\nString",
            "title": "&nbsp;qksms/common.util/-date-formatter/get-message-timestamp.md"
        },
        {
            "location": "/qksms/common.util/-date-formatter/get-message-timestamp/#getmessagetimestamp",
            "text": "fun getMessageTimestamp(date: Long ): String",
            "title": "getMessageTimestamp"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/apply-options/",
            "text": "qksms\n / \ncommon.util\n / \nGlideAppModule\n / \napplyOptions\n\n\napplyOptions\n\u00b6\n\n\nfun applyOptions(context:\nContext\n, builder: GlideBuilder):\nUnit",
            "title": "&nbsp;qksms/common.util/-glide-app-module/apply-options.md"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/apply-options/#applyoptions",
            "text": "fun applyOptions(context: Context , builder: GlideBuilder): Unit",
            "title": "applyOptions"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/",
            "text": "qksms\n / \ncommon.util\n / \nGlideAppModule\n\n\nGlideAppModule\n\u00b6\n\n\nclass GlideAppModule : AppGlideModule\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nGlideAppModule()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\napplyOptions\n\n\nfun applyOptions(context:\nContext\n, builder: GlideBuilder):\nUnit\n\n\n\n\n\n\nregisterComponents\n\n\nfun registerComponents(context:\nContext\n, glide: Glide, registry: Registry):\nUnit",
            "title": "&nbsp;qksms/common.util/-glide-app-module/index.md"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/#glideappmodule",
            "text": "class GlideAppModule : AppGlideModule",
            "title": "GlideAppModule"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/#constructors",
            "text": "Name  Summary      <init>  GlideAppModule()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/#functions",
            "text": "Name  Summary      applyOptions  fun applyOptions(context: Context , builder: GlideBuilder): Unit    registerComponents  fun registerComponents(context: Context , glide: Glide, registry: Registry): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/register-components/",
            "text": "qksms\n / \ncommon.util\n / \nGlideAppModule\n / \nregisterComponents\n\n\nregisterComponents\n\u00b6\n\n\nfun registerComponents(context:\nContext\n, glide: Glide, registry: Registry):\nUnit",
            "title": "&nbsp;qksms/common.util/-glide-app-module/register-components.md"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/register-components/#registercomponents",
            "text": "fun registerComponents(context: Context , glide: Glide, registry: Registry): Unit",
            "title": "registerComponents"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nGlideAppModule\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nGlideAppModule()",
            "title": "&nbsp;qksms/common.util/-glide-app-module/-init-.md"
        },
        {
            "location": "/qksms/common.util/-glide-app-module/-init-/#init",
            "text": "GlideAppModule()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-optional/not-null/",
            "text": "qksms\n / \ncommon.util\n / \nOptional\n / \nnotNull\n\n\nnotNull\n\u00b6\n\n\nfun notNull():\nBoolean",
            "title": "&nbsp;qksms/common.util/-optional/not-null.md"
        },
        {
            "location": "/qksms/common.util/-optional/not-null/#notnull",
            "text": "fun notNull(): Boolean",
            "title": "notNull"
        },
        {
            "location": "/qksms/common.util/-optional/",
            "text": "qksms\n / \ncommon.util\n / \nOptional\n\n\nOptional\n\u00b6\n\n\ndata class Optional<out T>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nOptional(value: T?)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\nval value: T?\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nnotNull\n\n\nfun notNull():\nBoolean",
            "title": "&nbsp;qksms/common.util/-optional/index.md"
        },
        {
            "location": "/qksms/common.util/-optional/#optional",
            "text": "data class Optional<out T>",
            "title": "Optional"
        },
        {
            "location": "/qksms/common.util/-optional/#constructors",
            "text": "Name  Summary      <init>  Optional(value: T?)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-optional/#properties",
            "text": "Name  Summary      value  val value: T?",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-optional/#functions",
            "text": "Name  Summary      notNull  fun notNull(): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-optional/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nOptional\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nOptional(value: T?)",
            "title": "&nbsp;qksms/common.util/-optional/-init-.md"
        },
        {
            "location": "/qksms/common.util/-optional/-init-/#init",
            "text": "Optional(value: T?)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-optional/value/",
            "text": "qksms\n / \ncommon.util\n / \nOptional\n / \nvalue\n\n\nvalue\n\u00b6\n\n\nval value: T?",
            "title": "&nbsp;qksms/common.util/-optional/value.md"
        },
        {
            "location": "/qksms/common.util/-optional/value/#value",
            "text": "val value: T?",
            "title": "value"
        },
        {
            "location": "/qksms/common.util/-permissions/has-sms-and-contacts/",
            "text": "qksms\n / \ncommon.util\n / \nPermissions\n / \nhasSmsAndContacts\n\n\nhasSmsAndContacts\n\u00b6\n\n\nfun hasSmsAndContacts():\nBoolean",
            "title": "&nbsp;qksms/common.util/-permissions/has-sms-and-contacts.md"
        },
        {
            "location": "/qksms/common.util/-permissions/has-sms-and-contacts/#hassmsandcontacts",
            "text": "fun hasSmsAndContacts(): Boolean",
            "title": "hasSmsAndContacts"
        },
        {
            "location": "/qksms/common.util/-permissions/",
            "text": "qksms\n / \ncommon.util\n / \nPermissions\n\n\nPermissions\n\u00b6\n\n\nclass Permissions\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPermissions(context:\nContext\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nhasSmsAndContacts\n\n\nfun hasSmsAndContacts():\nBoolean",
            "title": "&nbsp;qksms/common.util/-permissions/index.md"
        },
        {
            "location": "/qksms/common.util/-permissions/#permissions",
            "text": "class Permissions",
            "title": "Permissions"
        },
        {
            "location": "/qksms/common.util/-permissions/#constructors",
            "text": "Name  Summary      <init>  Permissions(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-permissions/#functions",
            "text": "Name  Summary      hasSmsAndContacts  fun hasSmsAndContacts(): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-permissions/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nPermissions\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPermissions(context:\nContext\n)",
            "title": "&nbsp;qksms/common.util/-permissions/-init-.md"
        },
        {
            "location": "/qksms/common.util/-permissions/-init-/#init",
            "text": "Permissions(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/",
            "text": "qksms\n / \ncommon.util\n / \nLiveRealmData\n\n\nLiveRealmData\n\u00b6\n\n\nclass LiveRealmData<T : RealmModel> : LiveData<RealmResults<T>>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nLiveRealmData(results: RealmResults<T>)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonActive\n\n\nfun onActive():\nUnit\n\n\n\n\n\n\nonInactive\n\n\nfun onInactive():\nUnit",
            "title": "&nbsp;qksms/common.util/-live-realm-data/index.md"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/#liverealmdata",
            "text": "class LiveRealmData<T : RealmModel> : LiveData<RealmResults<T>>",
            "title": "LiveRealmData"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/#constructors",
            "text": "Name  Summary      <init>  LiveRealmData(results: RealmResults<T>)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/#functions",
            "text": "Name  Summary      onActive  fun onActive(): Unit    onInactive  fun onInactive(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nLiveRealmData\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nLiveRealmData(results: RealmResults<T>)",
            "title": "&nbsp;qksms/common.util/-live-realm-data/-init-.md"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/-init-/#init",
            "text": "LiveRealmData(results: RealmResults<T>)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/on-inactive/",
            "text": "qksms\n / \ncommon.util\n / \nLiveRealmData\n / \nonInactive\n\n\nonInactive\n\u00b6\n\n\nprotected fun onInactive():\nUnit",
            "title": "&nbsp;qksms/common.util/-live-realm-data/on-inactive.md"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/on-inactive/#oninactive",
            "text": "protected fun onInactive(): Unit",
            "title": "onInactive"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/on-active/",
            "text": "qksms\n / \ncommon.util\n / \nLiveRealmData\n / \nonActive\n\n\nonActive\n\u00b6\n\n\nprotected fun onActive():\nUnit",
            "title": "&nbsp;qksms/common.util/-live-realm-data/on-active.md"
        },
        {
            "location": "/qksms/common.util/-live-realm-data/on-active/#onactive",
            "text": "protected fun onActive(): Unit",
            "title": "onActive"
        },
        {
            "location": "/qksms/common.util/-analytics/",
            "text": "qksms\n / \ncommon.util\n / \nAnalytics\n\n\nAnalytics\n\u00b6\n\n\ninterface Analytics\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ntrack\n\n\nabstract fun track(event:\nString\n):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAnalyticsImpl\n\n\nclass AnalyticsImpl : Analytics",
            "title": "&nbsp;qksms/common.util/-analytics/index.md"
        },
        {
            "location": "/qksms/common.util/-analytics/#analytics",
            "text": "interface Analytics",
            "title": "Analytics"
        },
        {
            "location": "/qksms/common.util/-analytics/#functions",
            "text": "Name  Summary      track  abstract fun track(event: String ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-analytics/#inheritors",
            "text": "Name  Summary      AnalyticsImpl  class AnalyticsImpl : Analytics",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/common.util/-analytics/track/",
            "text": "qksms\n / \ncommon.util\n / \nAnalytics\n / \ntrack\n\n\ntrack\n\u00b6\n\n\nabstract fun track(event:\nString\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-analytics/track.md"
        },
        {
            "location": "/qksms/common.util/-analytics/track/#track",
            "text": "abstract fun track(event: String ): Unit",
            "title": "track"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/handles/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nhandles\n\n\nhandles\n\u00b6\n\n\nfun handles(model:\nString\n?):\nBoolean",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/handles.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/handles/#handles",
            "text": "fun handles(model: String ?): Boolean",
            "title": "handles"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageKey\n\n\nContactImageKey\n\u00b6\n\n\nclass ContactImageKey : Key\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactImageKey(address:\nString\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nupdateDiskCacheKey\n\n\nfun updateDiskCacheKey(digest:\nMessageDigest\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-key/index.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/#contactimagekey",
            "text": "class ContactImageKey : Key",
            "title": "ContactImageKey"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/#constructors",
            "text": "Name  Summary      <init>  ContactImageKey(address: String )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/#functions",
            "text": "Name  Summary      updateDiskCacheKey  fun updateDiskCacheKey(digest: MessageDigest ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageKey\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactImageKey(address:\nString\n)",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-key/-init-.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/-init-/#init",
            "text": "ContactImageKey(address: String )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/update-disk-cache-key/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageKey\n / \nupdateDiskCacheKey\n\n\nupdateDiskCacheKey\n\u00b6\n\n\nfun updateDiskCacheKey(digest:\nMessageDigest\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-key/update-disk-cache-key.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-key/update-disk-cache-key/#updatediskcachekey",
            "text": "fun updateDiskCacheKey(digest: MessageDigest ): Unit",
            "title": "updateDiskCacheKey"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/context/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/context.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n\n\nContactImageLoader\n\u00b6\n\n\nclass ContactImageLoader : ModelLoader<\nString\n,\nInputStream\n>\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactImageFetcher\n\n\nclass ContactImageFetcher : DataFetcher<\nInputStream\n>\n\n\n\n\n\n\nContactImageKey\n\n\nclass ContactImageKey : Key\n\n\n\n\n\n\nFactory\n\n\nclass Factory : ModelLoaderFactory<\nString\n,\nInputStream\n>\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactImageLoader(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildLoadData\n\n\nfun buildLoadData(model:\nString\n, width:\nInt\n, height:\nInt\n, options: Options?): LoadData<\nInputStream\n>\n\n\n\n\n\n\nhandles\n\n\nfun handles(model:\nString\n?):\nBoolean",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/index.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/#contactimageloader",
            "text": "class ContactImageLoader : ModelLoader< String , InputStream >",
            "title": "ContactImageLoader"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/#types",
            "text": "Name  Summary      ContactImageFetcher  class ContactImageFetcher : DataFetcher< InputStream >    ContactImageKey  class ContactImageKey : Key    Factory  class Factory : ModelLoaderFactory< String , InputStream >",
            "title": "Types"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/#constructors",
            "text": "Name  Summary      <init>  ContactImageLoader(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/#properties",
            "text": "Name  Summary      context  val context: Context",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/#functions",
            "text": "Name  Summary      buildLoadData  fun buildLoadData(model: String , width: Int , height: Int , options: Options?): LoadData< InputStream >    handles  fun handles(model: String ?): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/load-data/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \nloadData\n\n\nloadData\n\u00b6\n\n\nfun loadData(priority: Priority?, callback: DataCallback<in\nInputStream\n>):\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/load-data.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/load-data/#loaddata",
            "text": "fun loadData(priority: Priority?, callback: DataCallback<in InputStream >): Unit",
            "title": "loadData"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n\n\nContactImageFetcher\n\u00b6\n\n\nclass ContactImageFetcher : DataFetcher<\nInputStream\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactImageFetcher(context:\nContext\n, address:\nString\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontactRepo\n\n\nlateinit var contactRepo:\nContactRepository\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncancel\n\n\nfun cancel():\nUnit\n\n\n\n\n\n\ncleanup\n\n\nfun cleanup():\nUnit\n\n\n\n\n\n\ngetDataClass\n\n\nfun getDataClass():\nClass\n<\nInputStream\n>\n\n\n\n\n\n\ngetDataSource\n\n\nfun getDataSource(): DataSource\n\n\n\n\n\n\nloadData\n\n\nfun loadData(priority: Priority?, callback: DataCallback<in\nInputStream\n>):\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/index.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/#contactimagefetcher",
            "text": "class ContactImageFetcher : DataFetcher< InputStream >",
            "title": "ContactImageFetcher"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/#constructors",
            "text": "Name  Summary      <init>  ContactImageFetcher(context: Context , address: String )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/#properties",
            "text": "Name  Summary      contactRepo  lateinit var contactRepo: ContactRepository",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/#functions",
            "text": "Name  Summary      cancel  fun cancel(): Unit    cleanup  fun cleanup(): Unit    getDataClass  fun getDataClass(): Class < InputStream >    getDataSource  fun getDataSource(): DataSource    loadData  fun loadData(priority: Priority?, callback: DataCallback<in InputStream >): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactImageFetcher(context:\nContext\n, address:\nString\n)",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/-init-.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/-init-/#init",
            "text": "ContactImageFetcher(context: Context , address: String )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/cleanup/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \ncleanup\n\n\ncleanup\n\u00b6\n\n\nfun cleanup():\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/cleanup.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/cleanup/#cleanup",
            "text": "fun cleanup(): Unit",
            "title": "cleanup"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-source/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \ngetDataSource\n\n\ngetDataSource\n\u00b6\n\n\nfun getDataSource(): DataSource",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-source.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-source/#getdatasource",
            "text": "fun getDataSource(): DataSource",
            "title": "getDataSource"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/contact-repo/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \ncontactRepo\n\n\ncontactRepo\n\u00b6\n\n\n@Inject lateinit var contactRepo:\nContactRepository",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/contact-repo.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/contact-repo/#contactrepo",
            "text": "@Inject lateinit var contactRepo: ContactRepository",
            "title": "contactRepo"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/cancel/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \ncancel\n\n\ncancel\n\u00b6\n\n\nfun cancel():\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/cancel.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/cancel/#cancel",
            "text": "fun cancel(): Unit",
            "title": "cancel"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-class/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nContactImageFetcher\n / \ngetDataClass\n\n\ngetDataClass\n\u00b6\n\n\nfun getDataClass():\nClass\n<\nInputStream\n>",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-class.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-contact-image-fetcher/get-data-class/#getdataclass",
            "text": "fun getDataClass(): Class < InputStream >",
            "title": "getDataClass"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactImageLoader(context:\nContext\n)",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-init-.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-init-/#init",
            "text": "ContactImageLoader(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/build/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nFactory\n / \nbuild\n\n\nbuild\n\u00b6\n\n\nfun build(multiFactory: MultiModelLoaderFactory):\nContactImageLoader",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-factory/build.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/build/#build",
            "text": "fun build(multiFactory: MultiModelLoaderFactory): ContactImageLoader",
            "title": "build"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/context/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nFactory\n / \ncontext\n\n\ncontext\n\u00b6\n\n\nval context:\nContext",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-factory/context.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/context/#context",
            "text": "val context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nFactory\n\n\nFactory\n\u00b6\n\n\nclass Factory : ModelLoaderFactory<\nString\n,\nInputStream\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nFactory(context:\nContext\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nval context:\nContext\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuild\n\n\nfun build(multiFactory: MultiModelLoaderFactory):\nContactImageLoader\n\n\n\n\n\n\nteardown\n\n\nfun teardown():\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-factory/index.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/#factory",
            "text": "class Factory : ModelLoaderFactory< String , InputStream >",
            "title": "Factory"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/#constructors",
            "text": "Name  Summary      <init>  Factory(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/#properties",
            "text": "Name  Summary      context  val context: Context",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/#functions",
            "text": "Name  Summary      build  fun build(multiFactory: MultiModelLoaderFactory): ContactImageLoader    teardown  fun teardown(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nFactory\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nFactory(context:\nContext\n)",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-factory/-init-.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/-init-/#init",
            "text": "Factory(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/teardown/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nFactory\n / \nteardown\n\n\nteardown\n\u00b6\n\n\nfun teardown():\nUnit",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/-factory/teardown.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/-factory/teardown/#teardown",
            "text": "fun teardown(): Unit",
            "title": "teardown"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/build-load-data/",
            "text": "qksms\n / \ncommon.util\n / \nContactImageLoader\n / \nbuildLoadData\n\n\nbuildLoadData\n\u00b6\n\n\nfun buildLoadData(model:\nString\n, width:\nInt\n, height:\nInt\n, options: Options?): LoadData<\nInputStream\n>",
            "title": "&nbsp;qksms/common.util/-contact-image-loader/build-load-data.md"
        },
        {
            "location": "/qksms/common.util/-contact-image-loader/build-load-data/#buildloaddata",
            "text": "fun buildLoadData(model: String , width: Int , height: Int , options: Options?): LoadData< InputStream >",
            "title": "buildLoadData"
        },
        {
            "location": "/qksms/common.util/-preferences/mms/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nmms\n\n\nmms\n\u00b6\n\n\nval mms: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/mms.md"
        },
        {
            "location": "/qksms/common.util/-preferences/mms/#mms",
            "text": "val mms: @NonNull Preference< Boolean >",
            "title": "mms"
        },
        {
            "location": "/qksms/common.util/-preferences/ringtone/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nringtone\n\n\nringtone\n\u00b6\n\n\nval ringtone: @NonNull Preference<\nString\n>",
            "title": "&nbsp;qksms/common.util/-preferences/ringtone.md"
        },
        {
            "location": "/qksms/common.util/-preferences/ringtone/#ringtone",
            "text": "val ringtone: @NonNull Preference< String >",
            "title": "ringtone"
        },
        {
            "location": "/qksms/common.util/-preferences/vibration/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nvibration\n\n\nvibration\n\u00b6\n\n\nval vibration: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/vibration.md"
        },
        {
            "location": "/qksms/common.util/-preferences/vibration/#vibration",
            "text": "val vibration: @NonNull Preference< Boolean >",
            "title": "vibration"
        },
        {
            "location": "/qksms/common.util/-preferences/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n\n\nPreferences\n\u00b6\n\n\n@Singleton class Preferences\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPreferences(rxPrefs: RxSharedPreferences)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nautoEmoji\n\n\nval autoEmoji: Preference<\nBoolean\n>\n\n\n\n\n\n\ndark\n\n\nval dark: Preference<\nBoolean\n>\n\n\n\n\n\n\ndefaultSms\n\n\nval defaultSms: Preference<\nBoolean\n>\n\n\n\n\n\n\ndelivery\n\n\nval delivery: Preference<\nBoolean\n>\n\n\n\n\n\n\nmms\n\n\nval mms: Preference<\nBoolean\n>\n\n\n\n\n\n\nmmsSize\n\n\nval mmsSize: Preference<\nLong\n>\n\n\n\n\n\n\nnotifications\n\n\nval notifications: Preference<\nBoolean\n>\n\n\n\n\n\n\nringtone\n\n\nval ringtone: Preference<\nString\n>\n\n\n\n\n\n\ntheme\n\n\nval theme: Preference<\nInt\n>\n\n\n\n\n\n\nunicode\n\n\nval unicode: Preference<\nBoolean\n>\n\n\n\n\n\n\nvibration\n\n\nval vibration: Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/index.md"
        },
        {
            "location": "/qksms/common.util/-preferences/#preferences",
            "text": "@Singleton class Preferences",
            "title": "Preferences"
        },
        {
            "location": "/qksms/common.util/-preferences/#constructors",
            "text": "Name  Summary      <init>  Preferences(rxPrefs: RxSharedPreferences)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-preferences/#properties",
            "text": "Name  Summary      autoEmoji  val autoEmoji: Preference< Boolean >    dark  val dark: Preference< Boolean >    defaultSms  val defaultSms: Preference< Boolean >    delivery  val delivery: Preference< Boolean >    mms  val mms: Preference< Boolean >    mmsSize  val mmsSize: Preference< Long >    notifications  val notifications: Preference< Boolean >    ringtone  val ringtone: Preference< String >    theme  val theme: Preference< Int >    unicode  val unicode: Preference< Boolean >    vibration  val vibration: Preference< Boolean >",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-preferences/mms-size/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nmmsSize\n\n\nmmsSize\n\u00b6\n\n\nval mmsSize: @NonNull Preference<\nLong\n>",
            "title": "&nbsp;qksms/common.util/-preferences/mms-size.md"
        },
        {
            "location": "/qksms/common.util/-preferences/mms-size/#mmssize",
            "text": "val mmsSize: @NonNull Preference< Long >",
            "title": "mmsSize"
        },
        {
            "location": "/qksms/common.util/-preferences/unicode/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nunicode\n\n\nunicode\n\u00b6\n\n\nval unicode: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/unicode.md"
        },
        {
            "location": "/qksms/common.util/-preferences/unicode/#unicode",
            "text": "val unicode: @NonNull Preference< Boolean >",
            "title": "unicode"
        },
        {
            "location": "/qksms/common.util/-preferences/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPreferences(rxPrefs: RxSharedPreferences)",
            "title": "&nbsp;qksms/common.util/-preferences/-init-.md"
        },
        {
            "location": "/qksms/common.util/-preferences/-init-/#init",
            "text": "Preferences(rxPrefs: RxSharedPreferences)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-preferences/dark/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \ndark\n\n\ndark\n\u00b6\n\n\nval dark: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/dark.md"
        },
        {
            "location": "/qksms/common.util/-preferences/dark/#dark",
            "text": "val dark: @NonNull Preference< Boolean >",
            "title": "dark"
        },
        {
            "location": "/qksms/common.util/-preferences/notifications/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nnotifications\n\n\nnotifications\n\u00b6\n\n\nval notifications: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/notifications.md"
        },
        {
            "location": "/qksms/common.util/-preferences/notifications/#notifications",
            "text": "val notifications: @NonNull Preference< Boolean >",
            "title": "notifications"
        },
        {
            "location": "/qksms/common.util/-preferences/auto-emoji/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \nautoEmoji\n\n\nautoEmoji\n\u00b6\n\n\nval autoEmoji: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/auto-emoji.md"
        },
        {
            "location": "/qksms/common.util/-preferences/auto-emoji/#autoemoji",
            "text": "val autoEmoji: @NonNull Preference< Boolean >",
            "title": "autoEmoji"
        },
        {
            "location": "/qksms/common.util/-preferences/theme/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \ntheme\n\n\ntheme\n\u00b6\n\n\nval theme: @NonNull Preference<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-preferences/theme.md"
        },
        {
            "location": "/qksms/common.util/-preferences/theme/#theme",
            "text": "val theme: @NonNull Preference< Int >",
            "title": "theme"
        },
        {
            "location": "/qksms/common.util/-preferences/default-sms/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \ndefaultSms\n\n\ndefaultSms\n\u00b6\n\n\nval defaultSms: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/default-sms.md"
        },
        {
            "location": "/qksms/common.util/-preferences/default-sms/#defaultsms",
            "text": "val defaultSms: @NonNull Preference< Boolean >",
            "title": "defaultSms"
        },
        {
            "location": "/qksms/common.util/-preferences/delivery/",
            "text": "qksms\n / \ncommon.util\n / \nPreferences\n / \ndelivery\n\n\ndelivery\n\u00b6\n\n\nval delivery: @NonNull Preference<\nBoolean\n>",
            "title": "&nbsp;qksms/common.util/-preferences/delivery.md"
        },
        {
            "location": "/qksms/common.util/-preferences/delivery/#delivery",
            "text": "val delivery: @NonNull Preference< Boolean >",
            "title": "delivery"
        },
        {
            "location": "/qksms/common.util/-colors/text-primary-on-theme/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextPrimaryOnTheme\n\n\ntextPrimaryOnTheme\n\u00b6\n\n\nval textPrimaryOnTheme: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-primary-on-theme.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-primary-on-theme/#textprimaryontheme",
            "text": "val textPrimaryOnTheme: Observable< Int >",
            "title": "textPrimaryOnTheme"
        },
        {
            "location": "/qksms/common.util/-colors/separator/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nseparator\n\n\nseparator\n\u00b6\n\n\nval separator: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/separator.md"
        },
        {
            "location": "/qksms/common.util/-colors/separator/#separator",
            "text": "val separator: Observable< Int >",
            "title": "separator"
        },
        {
            "location": "/qksms/common.util/-colors/status-bar-icons/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nstatusBarIcons\n\n\nstatusBarIcons\n\u00b6\n\n\nval statusBarIcons: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/status-bar-icons.md"
        },
        {
            "location": "/qksms/common.util/-colors/status-bar-icons/#statusbaricons",
            "text": "val statusBarIcons: Observable< Int >",
            "title": "statusBarIcons"
        },
        {
            "location": "/qksms/common.util/-colors/bubble/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nbubble\n\n\nbubble\n\u00b6\n\n\nval bubble: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/bubble.md"
        },
        {
            "location": "/qksms/common.util/-colors/bubble/#bubble",
            "text": "val bubble: Observable< Int >",
            "title": "bubble"
        },
        {
            "location": "/qksms/common.util/-colors/text-primary/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextPrimary\n\n\ntextPrimary\n\u00b6\n\n\nval textPrimary: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-primary.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-primary/#textprimary",
            "text": "val textPrimary: Observable< Int >",
            "title": "textPrimary"
        },
        {
            "location": "/qksms/common.util/-colors/switch-thumb-disabled/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nswitchThumbDisabled\n\n\nswitchThumbDisabled\n\u00b6\n\n\nval switchThumbDisabled: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/switch-thumb-disabled.md"
        },
        {
            "location": "/qksms/common.util/-colors/switch-thumb-disabled/#switchthumbdisabled",
            "text": "val switchThumbDisabled: Observable< Int >",
            "title": "switchThumbDisabled"
        },
        {
            "location": "/qksms/common.util/-colors/toolbar-color/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntoolbarColor\n\n\ntoolbarColor\n\u00b6\n\n\nval toolbarColor: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/toolbar-color.md"
        },
        {
            "location": "/qksms/common.util/-colors/toolbar-color/#toolbarcolor",
            "text": "val toolbarColor: Observable< Int >",
            "title": "toolbarColor"
        },
        {
            "location": "/qksms/common.util/-colors/background/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nbackground\n\n\nbackground\n\u00b6\n\n\nval background: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/background.md"
        },
        {
            "location": "/qksms/common.util/-colors/background/#background",
            "text": "val background: Observable< Int >",
            "title": "background"
        },
        {
            "location": "/qksms/common.util/-colors/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n\n\nColors\n\u00b6\n\n\n@Singleton class Colors\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nColors(context:\nContext\n, prefs:\nPreferences\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nappThemeResources\n\n\nval appThemeResources: Observable<\nInt\n>\n\n\n\n\n\n\nbackground\n\n\nval background: Observable<\nInt\n>\n\n\n\n\n\n\nbubble\n\n\nval bubble: Observable<\nInt\n>\n\n\n\n\n\n\ncomposeBackground\n\n\nval composeBackground: Observable<\nInt\n>\n\n\n\n\n\n\nfield\n\n\nval field: Observable<\nInt\n>\n\n\n\n\n\n\npopupThemeResource\n\n\nval popupThemeResource: Observable<\nInt\n>\n\n\n\n\n\n\nseparator\n\n\nval separator: Observable<\nInt\n>\n\n\n\n\n\n\nstatusBar\n\n\nval statusBar: Observable<\nInt\n>\n\n\n\n\n\n\nstatusBarIcons\n\n\nval statusBarIcons: Observable<\nInt\n>\n\n\n\n\n\n\nswitchThumbDisabled\n\n\nval switchThumbDisabled: Observable<\nInt\n>\n\n\n\n\n\n\nswitchThumbEnabled\n\n\nval switchThumbEnabled: Observable<\nInt\n>\n\n\n\n\n\n\nswitchTrackDisabled\n\n\nval switchTrackDisabled: Observable<\nInt\n>\n\n\n\n\n\n\nswitchTrackEnabled\n\n\nval switchTrackEnabled: Observable<\nInt\n>\n\n\n\n\n\n\ntextPrimary\n\n\nval textPrimary: Observable<\nInt\n>\n\n\n\n\n\n\ntextPrimaryOnTheme\n\n\nval textPrimaryOnTheme: Observable<\nInt\n>\n\n\n\n\n\n\ntextSecondary\n\n\nval textSecondary: Observable<\nInt\n>\n\n\n\n\n\n\ntextSecondaryOnTheme\n\n\nval textSecondaryOnTheme: Observable<\nInt\n>\n\n\n\n\n\n\ntextTertiary\n\n\nval textTertiary: Observable<\nInt\n>\n\n\n\n\n\n\ntextTertiaryOnTheme\n\n\nval textTertiaryOnTheme: Observable<\nInt\n>\n\n\n\n\n\n\ntheme\n\n\nval theme: Observable<\nInt\n>\n\n\n\n\n\n\ntoolbarColor\n\n\nval toolbarColor: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/index.md"
        },
        {
            "location": "/qksms/common.util/-colors/#colors",
            "text": "@Singleton class Colors",
            "title": "Colors"
        },
        {
            "location": "/qksms/common.util/-colors/#constructors",
            "text": "Name  Summary      <init>  Colors(context: Context , prefs: Preferences )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-colors/#properties",
            "text": "Name  Summary      appThemeResources  val appThemeResources: Observable< Int >    background  val background: Observable< Int >    bubble  val bubble: Observable< Int >    composeBackground  val composeBackground: Observable< Int >    field  val field: Observable< Int >    popupThemeResource  val popupThemeResource: Observable< Int >    separator  val separator: Observable< Int >    statusBar  val statusBar: Observable< Int >    statusBarIcons  val statusBarIcons: Observable< Int >    switchThumbDisabled  val switchThumbDisabled: Observable< Int >    switchThumbEnabled  val switchThumbEnabled: Observable< Int >    switchTrackDisabled  val switchTrackDisabled: Observable< Int >    switchTrackEnabled  val switchTrackEnabled: Observable< Int >    textPrimary  val textPrimary: Observable< Int >    textPrimaryOnTheme  val textPrimaryOnTheme: Observable< Int >    textSecondary  val textSecondary: Observable< Int >    textSecondaryOnTheme  val textSecondaryOnTheme: Observable< Int >    textTertiary  val textTertiary: Observable< Int >    textTertiaryOnTheme  val textTertiaryOnTheme: Observable< Int >    theme  val theme: Observable< Int >    toolbarColor  val toolbarColor: Observable< Int >",
            "title": "Properties"
        },
        {
            "location": "/qksms/common.util/-colors/switch-track-enabled/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nswitchTrackEnabled\n\n\nswitchTrackEnabled\n\u00b6\n\n\nval switchTrackEnabled: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/switch-track-enabled.md"
        },
        {
            "location": "/qksms/common.util/-colors/switch-track-enabled/#switchtrackenabled",
            "text": "val switchTrackEnabled: Observable< Int >",
            "title": "switchTrackEnabled"
        },
        {
            "location": "/qksms/common.util/-colors/status-bar/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nstatusBar\n\n\nstatusBar\n\u00b6\n\n\nval statusBar: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/status-bar.md"
        },
        {
            "location": "/qksms/common.util/-colors/status-bar/#statusbar",
            "text": "val statusBar: Observable< Int >",
            "title": "statusBar"
        },
        {
            "location": "/qksms/common.util/-colors/app-theme-resources/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nappThemeResources\n\n\nappThemeResources\n\u00b6\n\n\nval appThemeResources: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/app-theme-resources.md"
        },
        {
            "location": "/qksms/common.util/-colors/app-theme-resources/#appthemeresources",
            "text": "val appThemeResources: Observable< Int >",
            "title": "appThemeResources"
        },
        {
            "location": "/qksms/common.util/-colors/popup-theme-resource/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \npopupThemeResource\n\n\npopupThemeResource\n\u00b6\n\n\nval popupThemeResource: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/popup-theme-resource.md"
        },
        {
            "location": "/qksms/common.util/-colors/popup-theme-resource/#popupthemeresource",
            "text": "val popupThemeResource: Observable< Int >",
            "title": "popupThemeResource"
        },
        {
            "location": "/qksms/common.util/-colors/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nColors(context:\nContext\n, prefs:\nPreferences\n)",
            "title": "&nbsp;qksms/common.util/-colors/-init-.md"
        },
        {
            "location": "/qksms/common.util/-colors/-init-/#init",
            "text": "Colors(context: Context , prefs: Preferences )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-colors/text-tertiary/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextTertiary\n\n\ntextTertiary\n\u00b6\n\n\nval textTertiary: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-tertiary.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-tertiary/#texttertiary",
            "text": "val textTertiary: Observable< Int >",
            "title": "textTertiary"
        },
        {
            "location": "/qksms/common.util/-colors/text-secondary-on-theme/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextSecondaryOnTheme\n\n\ntextSecondaryOnTheme\n\u00b6\n\n\nval textSecondaryOnTheme: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-secondary-on-theme.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-secondary-on-theme/#textsecondaryontheme",
            "text": "val textSecondaryOnTheme: Observable< Int >",
            "title": "textSecondaryOnTheme"
        },
        {
            "location": "/qksms/common.util/-colors/switch-thumb-enabled/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nswitchThumbEnabled\n\n\nswitchThumbEnabled\n\u00b6\n\n\nval switchThumbEnabled: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/switch-thumb-enabled.md"
        },
        {
            "location": "/qksms/common.util/-colors/switch-thumb-enabled/#switchthumbenabled",
            "text": "val switchThumbEnabled: Observable< Int >",
            "title": "switchThumbEnabled"
        },
        {
            "location": "/qksms/common.util/-colors/compose-background/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ncomposeBackground\n\n\ncomposeBackground\n\u00b6\n\n\nval composeBackground: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/compose-background.md"
        },
        {
            "location": "/qksms/common.util/-colors/compose-background/#composebackground",
            "text": "val composeBackground: Observable< Int >",
            "title": "composeBackground"
        },
        {
            "location": "/qksms/common.util/-colors/switch-track-disabled/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nswitchTrackDisabled\n\n\nswitchTrackDisabled\n\u00b6\n\n\nval switchTrackDisabled: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/switch-track-disabled.md"
        },
        {
            "location": "/qksms/common.util/-colors/switch-track-disabled/#switchtrackdisabled",
            "text": "val switchTrackDisabled: Observable< Int >",
            "title": "switchTrackDisabled"
        },
        {
            "location": "/qksms/common.util/-colors/theme/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntheme\n\n\ntheme\n\u00b6\n\n\nval theme: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/theme.md"
        },
        {
            "location": "/qksms/common.util/-colors/theme/#theme",
            "text": "val theme: Observable< Int >",
            "title": "theme"
        },
        {
            "location": "/qksms/common.util/-colors/field/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \nfield\n\n\nfield\n\u00b6\n\n\nval field: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/field.md"
        },
        {
            "location": "/qksms/common.util/-colors/field/#field",
            "text": "val field: Observable< Int >",
            "title": "field"
        },
        {
            "location": "/qksms/common.util/-colors/text-tertiary-on-theme/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextTertiaryOnTheme\n\n\ntextTertiaryOnTheme\n\u00b6\n\n\nval textTertiaryOnTheme: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-tertiary-on-theme.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-tertiary-on-theme/#texttertiaryontheme",
            "text": "val textTertiaryOnTheme: Observable< Int >",
            "title": "textTertiaryOnTheme"
        },
        {
            "location": "/qksms/common.util/-colors/text-secondary/",
            "text": "qksms\n / \ncommon.util\n / \nColors\n / \ntextSecondary\n\n\ntextSecondary\n\u00b6\n\n\nval textSecondary: Observable<\nInt\n>",
            "title": "&nbsp;qksms/common.util/-colors/text-secondary.md"
        },
        {
            "location": "/qksms/common.util/-colors/text-secondary/#textsecondary",
            "text": "val textSecondary: Observable< Int >",
            "title": "textSecondary"
        },
        {
            "location": "/qksms/common.util/-clipboard-utils/",
            "text": "qksms\n / \ncommon.util\n / \nClipboardUtils\n\n\nClipboardUtils\n\u00b6\n\n\nobject ClipboardUtils\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncopy\n\n\nfun copy(context:\nContext\n, string:\nString\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-clipboard-utils/index.md"
        },
        {
            "location": "/qksms/common.util/-clipboard-utils/#clipboardutils",
            "text": "object ClipboardUtils",
            "title": "ClipboardUtils"
        },
        {
            "location": "/qksms/common.util/-clipboard-utils/#functions",
            "text": "Name  Summary      copy  fun copy(context: Context , string: String ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-clipboard-utils/copy/",
            "text": "qksms\n / \ncommon.util\n / \nClipboardUtils\n / \ncopy\n\n\ncopy\n\u00b6\n\n\nfun copy(context:\nContext\n, string:\nString\n):\nUnit",
            "title": "&nbsp;qksms/common.util/-clipboard-utils/copy.md"
        },
        {
            "location": "/qksms/common.util/-clipboard-utils/copy/#copy",
            "text": "fun copy(context: Context , string: String ): Unit",
            "title": "copy"
        },
        {
            "location": "/qksms/common.util/-notification-manager/update/",
            "text": "qksms\n / \ncommon.util\n / \nNotificationManager\n / \nupdate\n\n\nupdate\n\u00b6\n\n\nfun update(threadId:\nLong\n):\nUnit\n\n\nUpdates the notification for a particular conversation",
            "title": "&nbsp;qksms/common.util/-notification-manager/update.md"
        },
        {
            "location": "/qksms/common.util/-notification-manager/update/#update",
            "text": "fun update(threadId: Long ): Unit  Updates the notification for a particular conversation",
            "title": "update"
        },
        {
            "location": "/qksms/common.util/-notification-manager/",
            "text": "qksms\n / \ncommon.util\n / \nNotificationManager\n\n\nNotificationManager\n\u00b6\n\n\n@Singleton class NotificationManager\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nNotificationManager(context:\nContext\n, prefs:\nPreferences\n, colors:\nColors\n, messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nupdate\n\n\nfun update(threadId:\nLong\n):\nUnit\nUpdates the notification for a particular conversation\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nDEFAULT_CHANNEL_ID\n\n\nval DEFAULT_CHANNEL_ID:\nString\n\n\n\n\n\n\nVIBRATE_PATTERN\n\n\nval VIBRATE_PATTERN:\nLongArray",
            "title": "&nbsp;qksms/common.util/-notification-manager/index.md"
        },
        {
            "location": "/qksms/common.util/-notification-manager/#notificationmanager",
            "text": "@Singleton class NotificationManager",
            "title": "NotificationManager"
        },
        {
            "location": "/qksms/common.util/-notification-manager/#constructors",
            "text": "Name  Summary      <init>  NotificationManager(context: Context , prefs: Preferences , colors: Colors , messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/common.util/-notification-manager/#functions",
            "text": "Name  Summary      update  fun update(threadId: Long ): Unit Updates the notification for a particular conversation",
            "title": "Functions"
        },
        {
            "location": "/qksms/common.util/-notification-manager/#companion-object-properties",
            "text": "Name  Summary      DEFAULT_CHANNEL_ID  val DEFAULT_CHANNEL_ID: String    VIBRATE_PATTERN  val VIBRATE_PATTERN: LongArray",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-init-/",
            "text": "qksms\n / \ncommon.util\n / \nNotificationManager\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nNotificationManager(context:\nContext\n, prefs:\nPreferences\n, colors:\nColors\n, messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/common.util/-notification-manager/-init-.md"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-init-/#init",
            "text": "NotificationManager(context: Context , prefs: Preferences , colors: Colors , messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-v-i-b-r-a-t-e_-p-a-t-t-e-r-n/",
            "text": "qksms\n / \ncommon.util\n / \nNotificationManager\n / \nVIBRATE_PATTERN\n\n\nVIBRATE_PATTERN\n\u00b6\n\n\nval VIBRATE_PATTERN:\nLongArray",
            "title": "&nbsp;qksms/common.util/-notification-manager/-v-i-b-r-a-t-e_-p-a-t-t-e-r-n.md"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-v-i-b-r-a-t-e_-p-a-t-t-e-r-n/#vibrate_pattern",
            "text": "val VIBRATE_PATTERN: LongArray",
            "title": "VIBRATE_PATTERN"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-d-e-f-a-u-l-t_-c-h-a-n-n-e-l_-i-d/",
            "text": "qksms\n / \ncommon.util\n / \nNotificationManager\n / \nDEFAULT_CHANNEL_ID\n\n\nDEFAULT_CHANNEL_ID\n\u00b6\n\n\nval DEFAULT_CHANNEL_ID:\nString",
            "title": "&nbsp;qksms/common.util/-notification-manager/-d-e-f-a-u-l-t_-c-h-a-n-n-e-l_-i-d.md"
        },
        {
            "location": "/qksms/common.util/-notification-manager/-d-e-f-a-u-l-t_-c-h-a-n-n-e-l_-i-d/#default_channel_id",
            "text": "val DEFAULT_CHANNEL_ID: String",
            "title": "DEFAULT_CHANNEL_ID"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-create-options-menu/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nonCreateOptionsMenu\n\n\nonCreateOptionsMenu\n\u00b6\n\n\nfun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\nOverrides \nQkActivity.onCreateOptionsMenu",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/on-create-options-menu.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-create-options-menu/#oncreateoptionsmenu",
            "text": "fun onCreateOptionsMenu(menu: Menu ?): Boolean  Overrides  QkActivity.onCreateOptionsMenu",
            "title": "onCreateOptionsMenu"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/view-model-class/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nviewModelClass\n\n\nviewModelClass\n\u00b6\n\n\nprotected val viewModelClass:\nKClass\n<\nMainViewModel\n>\n\n\nOverrides \nQkActivity.viewModelClass",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/view-model-class.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/view-model-class/#viewmodelclass",
            "text": "protected val viewModelClass: KClass < MainViewModel >  Overrides  QkActivity.viewModelClass",
            "title": "viewModelClass"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/clear-search/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nclearSearch\n\n\nclearSearch\n\u00b6\n\n\nfun clearSearch():\nUnit\n\n\nOverrides \nMainView.clearSearch",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/clear-search.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/clear-search/#clearsearch",
            "text": "fun clearSearch(): Unit  Overrides  MainView.clearSearch",
            "title": "clearSearch"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/swipe-conversation-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nswipeConversationIntent\n\n\nswipeConversationIntent\n\u00b6\n\n\nval swipeConversationIntent: Subject<\nInt\n>\n\n\nOverrides \nMainView.swipeConversationIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/swipe-conversation-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/swipe-conversation-intent/#swipeconversationintent",
            "text": "val swipeConversationIntent: Subject< Int >  Overrides  MainView.swipeConversationIntent",
            "title": "swipeConversationIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/menu-item-adapter/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nmenuItemAdapter\n\n\nmenuItemAdapter\n\u00b6\n\n\n@Inject lateinit var menuItemAdapter:\nMenuItemAdapter",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/menu-item-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/menu-item-adapter/#menuitemadapter",
            "text": "@Inject lateinit var menuItemAdapter: MenuItemAdapter",
            "title": "menuItemAdapter"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/undo-swipe-conversation-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nundoSwipeConversationIntent\n\n\nundoSwipeConversationIntent\n\u00b6\n\n\nval undoSwipeConversationIntent: Subject<\nUnit\n>\n\n\nOverrides \nMainView.undoSwipeConversationIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/undo-swipe-conversation-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/undo-swipe-conversation-intent/#undoswipeconversationintent",
            "text": "val undoSwipeConversationIntent: Subject< Unit >  Overrides  MainView.undoSwipeConversationIntent",
            "title": "undoSwipeConversationIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/render/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nrender\n\n\nrender\n\u00b6\n\n\nfun render(state:\nMainState\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/render.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/render/#render",
            "text": "fun render(state: MainState ): Unit",
            "title": "render"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n\n\nMainActivity\n\u00b6\n\n\nclass MainActivity :\nQkActivity\n<\nMainViewModel\n>,\nMainView\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMainActivity()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncomposeIntent\n\n\nval composeIntent: <ERROR CLASS>\n\n\n\n\n\n\nconversationClickIntent\n\n\nval conversationClickIntent: Subject<\nLong\n>\n\n\n\n\n\n\nconversationLongClickIntent\n\n\nval conversationLongClickIntent: Subject<\nLong\n>\n\n\n\n\n\n\nconversationMenuItemIntent\n\n\nval conversationMenuItemIntent: Subject<\nInt\n>\n\n\n\n\n\n\nconversationsAdapter\n\n\nlateinit var conversationsAdapter:\nConversationsAdapter\n\n\n\n\n\n\ndrawerItemIntent\n\n\nval drawerItemIntent: Observable<\nDrawerItem\n>\n\n\n\n\n\n\ndrawerOpenIntent\n\n\nval drawerOpenIntent: <ERROR CLASS>\n\n\n\n\n\n\nitemTouchCallback\n\n\nlateinit var itemTouchCallback:\nConversationItemTouchCallback\n\n\n\n\n\n\nmenuItemAdapter\n\n\nlateinit var menuItemAdapter:\nMenuItemAdapter\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\nqueryCancelledIntent\n\n\nval queryCancelledIntent: PublishSubject<\nUnit\n>\n\n\n\n\n\n\nqueryChangedIntent\n\n\nval queryChangedIntent: <ERROR CLASS>\n\n\n\n\n\n\nswipeConversationIntent\n\n\nval swipeConversationIntent: Subject<\nInt\n>\n\n\n\n\n\n\nundoSwipeConversationIntent\n\n\nval undoSwipeConversationIntent: Subject<\nUnit\n>\n\n\n\n\n\n\nviewModelClass\n\n\nval viewModelClass:\nKClass\n<\nMainViewModel\n>\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\nmenu\n\n\nval menu: Subject<\nMenu\n>\n\n\n\n\n\n\nviewModel\n\n\nval viewModel: VM\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nclearSearch\n\n\nfun clearSearch():\nUnit\n\n\n\n\n\n\nonCreate\n\n\nfun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nonCreateOptionsMenu\n\n\nfun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\n\n\n\n\nonOptionsItemSelected\n\n\nfun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nrender\n\n\nfun render(state:\nMainState\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonPostCreate\n\n\nopen fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nsetContentView\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit\n\n\n\n\n\n\nsetTitle\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#mainactivity",
            "text": "class MainActivity : QkActivity < MainViewModel >, MainView",
            "title": "MainActivity"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#constructors",
            "text": "Name  Summary      <init>  MainActivity()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#properties",
            "text": "Name  Summary      composeIntent  val composeIntent: <ERROR CLASS>    conversationClickIntent  val conversationClickIntent: Subject< Long >    conversationLongClickIntent  val conversationLongClickIntent: Subject< Long >    conversationMenuItemIntent  val conversationMenuItemIntent: Subject< Int >    conversationsAdapter  lateinit var conversationsAdapter: ConversationsAdapter    drawerItemIntent  val drawerItemIntent: Observable< DrawerItem >    drawerOpenIntent  val drawerOpenIntent: <ERROR CLASS>    itemTouchCallback  lateinit var itemTouchCallback: ConversationItemTouchCallback    menuItemAdapter  lateinit var menuItemAdapter: MenuItemAdapter    navigator  lateinit var navigator: Navigator    queryCancelledIntent  val queryCancelledIntent: PublishSubject< Unit >    queryChangedIntent  val queryChangedIntent: <ERROR CLASS>    swipeConversationIntent  val swipeConversationIntent: Subject< Int >    undoSwipeConversationIntent  val undoSwipeConversationIntent: Subject< Unit >    viewModelClass  val viewModelClass: KClass < MainViewModel >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#inherited-properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    menu  val menu: Subject< Menu >    viewModel  val viewModel: VM",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#functions",
            "text": "Name  Summary      clearSearch  fun clearSearch(): Unit    onCreate  fun onCreate(savedInstanceState: Bundle ?): Unit    onCreateOptionsMenu  fun onCreateOptionsMenu(menu: Menu ?): Boolean    onOptionsItemSelected  fun onOptionsItemSelected(item: MenuItem ): Boolean    render  fun render(state: MainState ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#inherited-functions",
            "text": "Name  Summary      onPostCreate  open fun onPostCreate(savedInstanceState: Bundle ?): Unit    setContentView  open fun setContentView(layoutResID: Int ): Unit    setTitle  open fun setTitle(title: CharSequence ?): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/drawer-item-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \ndrawerItemIntent\n\n\ndrawerItemIntent\n\u00b6\n\n\nval drawerItemIntent: Observable<\nDrawerItem\n>\n\n\nOverrides \nMainView.drawerItemIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/drawer-item-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/drawer-item-intent/#draweritemintent",
            "text": "val drawerItemIntent: Observable< DrawerItem >  Overrides  MainView.drawerItemIntent",
            "title": "drawerItemIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/item-touch-callback/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nitemTouchCallback\n\n\nitemTouchCallback\n\u00b6\n\n\n@Inject lateinit var itemTouchCallback:\nConversationItemTouchCallback",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/item-touch-callback.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/item-touch-callback/#itemtouchcallback",
            "text": "@Inject lateinit var itemTouchCallback: ConversationItemTouchCallback",
            "title": "itemTouchCallback"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-options-item-selected/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nonOptionsItemSelected\n\n\nonOptionsItemSelected\n\u00b6\n\n\nfun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\nOverrides \nQkActivity.onOptionsItemSelected",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/on-options-item-selected.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-options-item-selected/#onoptionsitemselected",
            "text": "fun onOptionsItemSelected(item: MenuItem ): Boolean  Overrides  QkActivity.onOptionsItemSelected",
            "title": "onOptionsItemSelected"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/navigator/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMainActivity()",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/-init-/#init",
            "text": "MainActivity()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-menu-item-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nconversationMenuItemIntent\n\n\nconversationMenuItemIntent\n\u00b6\n\n\nval conversationMenuItemIntent: Subject<\nInt\n>\n\n\nOverrides \nMainView.conversationMenuItemIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/conversation-menu-item-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-menu-item-intent/#conversationmenuitemintent",
            "text": "val conversationMenuItemIntent: Subject< Int >  Overrides  MainView.conversationMenuItemIntent",
            "title": "conversationMenuItemIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-click-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nconversationClickIntent\n\n\nconversationClickIntent\n\u00b6\n\n\nval conversationClickIntent: Subject<\nLong\n>\n\n\nOverrides \nMainView.conversationClickIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/conversation-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-click-intent/#conversationclickintent",
            "text": "val conversationClickIntent: Subject< Long >  Overrides  MainView.conversationClickIntent",
            "title": "conversationClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/drawer-open-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \ndrawerOpenIntent\n\n\ndrawerOpenIntent\n\u00b6\n\n\nval drawerOpenIntent: <ERROR CLASS>\n\n\nOverrides \nMainView.drawerOpenIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/drawer-open-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/drawer-open-intent/#draweropenintent",
            "text": "val drawerOpenIntent: <ERROR CLASS>  Overrides  MainView.drawerOpenIntent",
            "title": "drawerOpenIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversations-adapter/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nconversationsAdapter\n\n\nconversationsAdapter\n\u00b6\n\n\n@Inject lateinit var conversationsAdapter:\nConversationsAdapter",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/conversations-adapter.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversations-adapter/#conversationsadapter",
            "text": "@Inject lateinit var conversationsAdapter: ConversationsAdapter",
            "title": "conversationsAdapter"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/query-cancelled-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nqueryCancelledIntent\n\n\nqueryCancelledIntent\n\u00b6\n\n\nval queryCancelledIntent: PublishSubject<\nUnit\n>\n\n\nOverrides \nMainView.queryCancelledIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/query-cancelled-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/query-cancelled-intent/#querycancelledintent",
            "text": "val queryCancelledIntent: PublishSubject< Unit >  Overrides  MainView.queryCancelledIntent",
            "title": "queryCancelledIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-create/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nprotected fun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\nOverrides \nQkActivity.onCreate",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/on-create.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/on-create/#oncreate",
            "text": "protected fun onCreate(savedInstanceState: Bundle ?): Unit  Overrides  QkActivity.onCreate",
            "title": "onCreate"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/query-changed-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nqueryChangedIntent\n\n\nqueryChangedIntent\n\u00b6\n\n\nval queryChangedIntent: <ERROR CLASS>\n\n\nOverrides \nMainView.queryChangedIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/query-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/query-changed-intent/#querychangedintent",
            "text": "val queryChangedIntent: <ERROR CLASS>  Overrides  MainView.queryChangedIntent",
            "title": "queryChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-long-click-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \nconversationLongClickIntent\n\n\nconversationLongClickIntent\n\u00b6\n\n\nval conversationLongClickIntent: Subject<\nLong\n>\n\n\nOverrides \nMainView.conversationLongClickIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/conversation-long-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/conversation-long-click-intent/#conversationlongclickintent",
            "text": "val conversationLongClickIntent: Subject< Long >  Overrides  MainView.conversationLongClickIntent",
            "title": "conversationLongClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/compose-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainActivity\n / \ncomposeIntent\n\n\ncomposeIntent\n\u00b6\n\n\nval composeIntent: <ERROR CLASS>\n\n\nOverrides \nMainView.composeIntent",
            "title": "&nbsp;qksms/presentation.feature.main/-main-activity/compose-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-activity/compose-intent/#composeintent",
            "text": "val composeIntent: <ERROR CLASS>  Overrides  MainView.composeIntent",
            "title": "composeIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/menu/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n / \nmenu\n\n\nmenu\n\u00b6\n\n\nval menu:\nList\n<\nMenuItem\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/menu.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/menu/#menu",
            "text": "val menu: List < MenuItem >",
            "title": "menu"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n\n\nInbox\n\u00b6\n\n\ndata class Inbox :\nMainPage\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nInbox(showClearButton:\nBoolean\n= false, data: Flowable<\nList\n<\nInboxItem\n>>? = null, menu:\nList\n<\nMenuItem\n> = ArrayList(), showArchivedSnackbar:\nBoolean\n= false)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nval data: Flowable<\nList\n<\nInboxItem\n>>?\n\n\n\n\n\n\nmenu\n\n\nval menu:\nList\n<\nMenuItem\n>\n\n\n\n\n\n\nshowArchivedSnackbar\n\n\nval showArchivedSnackbar:\nBoolean\n\n\n\n\n\n\nshowClearButton\n\n\nval showClearButton:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/#inbox",
            "text": "data class Inbox : MainPage",
            "title": "Inbox"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/#constructors",
            "text": "Name  Summary      <init>  Inbox(showClearButton: Boolean = false, data: Flowable< List < InboxItem >>? = null, menu: List < MenuItem > = ArrayList(), showArchivedSnackbar: Boolean = false)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/#properties",
            "text": "Name  Summary      data  val data: Flowable< List < InboxItem >>?    menu  val menu: List < MenuItem >    showArchivedSnackbar  val showArchivedSnackbar: Boolean    showClearButton  val showClearButton: Boolean",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/show-clear-button/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n / \nshowClearButton\n\n\nshowClearButton\n\u00b6\n\n\nval showClearButton:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/show-clear-button.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/show-clear-button/#showclearbutton",
            "text": "val showClearButton: Boolean",
            "title": "showClearButton"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/show-archived-snackbar/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n / \nshowArchivedSnackbar\n\n\nshowArchivedSnackbar\n\u00b6\n\n\nval showArchivedSnackbar:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/show-archived-snackbar.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/show-archived-snackbar/#showarchivedsnackbar",
            "text": "val showArchivedSnackbar: Boolean",
            "title": "showArchivedSnackbar"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/data/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n / \ndata\n\n\ndata\n\u00b6\n\n\nval data: Flowable<\nList\n<\nInboxItem\n>>?",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/data.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/data/#data",
            "text": "val data: Flowable< List < InboxItem >>?",
            "title": "data"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nInbox\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nInbox(showClearButton:\nBoolean\n= false, data: Flowable<\nList\n<\nInboxItem\n>>? = null, menu:\nList\n<\nMenuItem\n> = ArrayList(), showArchivedSnackbar:\nBoolean\n= false)",
            "title": "&nbsp;qksms/presentation.feature.main/-inbox/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-inbox/-init-/#init",
            "text": "Inbox(showClearButton: Boolean = false, data: Flowable< List < InboxItem >>? = null, menu: List < MenuItem > = ArrayList(), showArchivedSnackbar: Boolean = false)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/syncing/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainState\n / \nsyncing\n\n\nsyncing\n\u00b6\n\n\nval syncing:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-main-state/syncing.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/syncing/#syncing",
            "text": "val syncing: Boolean",
            "title": "syncing"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainState\n\n\nMainState\n\u00b6\n\n\ndata class MainState\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMainState(page:\nMainPage\n= Inbox(), drawerOpen:\nBoolean\n= false, syncing:\nBoolean\n= false)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndrawerOpen\n\n\nval drawerOpen:\nBoolean\n\n\n\n\n\n\npage\n\n\nval page:\nMainPage\n\n\n\n\n\n\nsyncing\n\n\nval syncing:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-main-state/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/#mainstate",
            "text": "data class MainState",
            "title": "MainState"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/#constructors",
            "text": "Name  Summary      <init>  MainState(page: MainPage = Inbox(), drawerOpen: Boolean = false, syncing: Boolean = false)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/#properties",
            "text": "Name  Summary      drawerOpen  val drawerOpen: Boolean    page  val page: MainPage    syncing  val syncing: Boolean",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/page/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainState\n / \npage\n\n\npage\n\u00b6\n\n\nval page:\nMainPage",
            "title": "&nbsp;qksms/presentation.feature.main/-main-state/page.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/page/#page",
            "text": "val page: MainPage",
            "title": "page"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainState\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMainState(page:\nMainPage\n= Inbox(), drawerOpen:\nBoolean\n= false, syncing:\nBoolean\n= false)",
            "title": "&nbsp;qksms/presentation.feature.main/-main-state/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/-init-/#init",
            "text": "MainState(page: MainPage = Inbox(), drawerOpen: Boolean = false, syncing: Boolean = false)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/drawer-open/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainState\n / \ndrawerOpen\n\n\ndrawerOpen\n\u00b6\n\n\nval drawerOpen:\nBoolean",
            "title": "&nbsp;qksms/presentation.feature.main/-main-state/drawer-open.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-state/drawer-open/#draweropen",
            "text": "val drawerOpen: Boolean",
            "title": "drawerOpen"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/menu/",
            "text": "qksms\n / \npresentation.feature.main\n / \nArchived\n / \nmenu\n\n\nmenu\n\u00b6\n\n\nval menu:\nList\n<\nMenuItem\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-archived/menu.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/menu/#menu",
            "text": "val menu: List < MenuItem >",
            "title": "menu"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/",
            "text": "qksms\n / \npresentation.feature.main\n / \nArchived\n\n\nArchived\n\u00b6\n\n\ndata class Archived :\nMainPage\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nArchived(data: Flowable<\nList\n<\nInboxItem\n>>?, menu:\nList\n<\nMenuItem\n> = ArrayList())\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nval data: Flowable<\nList\n<\nInboxItem\n>>?\n\n\n\n\n\n\nmenu\n\n\nval menu:\nList\n<\nMenuItem\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-archived/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/#archived",
            "text": "data class Archived : MainPage",
            "title": "Archived"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/#constructors",
            "text": "Name  Summary      <init>  Archived(data: Flowable< List < InboxItem >>?, menu: List < MenuItem > = ArrayList())",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/#properties",
            "text": "Name  Summary      data  val data: Flowable< List < InboxItem >>?    menu  val menu: List < MenuItem >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/data/",
            "text": "qksms\n / \npresentation.feature.main\n / \nArchived\n / \ndata\n\n\ndata\n\u00b6\n\n\nval data: Flowable<\nList\n<\nInboxItem\n>>?",
            "title": "&nbsp;qksms/presentation.feature.main/-archived/data.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/data/#data",
            "text": "val data: Flowable< List < InboxItem >>?",
            "title": "data"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nArchived\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nArchived(data: Flowable<\nList\n<\nInboxItem\n>>?, menu:\nList\n<\nMenuItem\n> = ArrayList())",
            "title": "&nbsp;qksms/presentation.feature.main/-archived/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-archived/-init-/#init",
            "text": "Archived(data: Flowable< List < InboxItem >>?, menu: List < MenuItem > = ArrayList())",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/",
            "text": "qksms\n / \npresentation.feature.main\n\n\nPackage presentation.feature.main\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nArchived\n\n\ndata class Archived :\nMainPage\n\n\n\n\n\n\nBlocked\n\n\ndata class Blocked :\nMainPage\n\n\n\n\n\n\nDrawerItem\n\n\nenum class DrawerItem\n\n\n\n\n\n\nInbox\n\n\ndata class Inbox :\nMainPage\n\n\n\n\n\n\nMainActivity\n\n\nclass MainActivity :\nQkActivity\n<\nMainViewModel\n>,\nMainView\n\n\n\n\n\n\nMainPage\n\n\nsealed class MainPage\n\n\n\n\n\n\nMainState\n\n\ndata class MainState\n\n\n\n\n\n\nMainView\n\n\ninterface MainView :\nQkView\n<\nMainState\n>\n\n\n\n\n\n\nMainViewModel\n\n\nclass MainViewModel :\nQkViewModel\n<\nMainView\n,\nMainState\n>\n\n\n\n\n\n\nScheduled\n\n\ndata class Scheduled :\nMainPage",
            "title": "&nbsp;qksms/presentation.feature.main/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/#package-presentationfeaturemain",
            "text": "",
            "title": "Package presentation.feature.main"
        },
        {
            "location": "/qksms/presentation.feature.main/#types",
            "text": "Name  Summary      Archived  data class Archived : MainPage    Blocked  data class Blocked : MainPage    DrawerItem  enum class DrawerItem    Inbox  data class Inbox : MainPage    MainActivity  class MainActivity : QkActivity < MainViewModel >, MainView    MainPage  sealed class MainPage    MainState  data class MainState    MainView  interface MainView : QkView < MainState >    MainViewModel  class MainViewModel : QkViewModel < MainView , MainState >    Scheduled  data class Scheduled : MainPage",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/",
            "text": "qksms\n / \npresentation.feature.main\n / \nScheduled\n\n\nScheduled\n\u00b6\n\n\ndata class Scheduled :\nMainPage\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nScheduled(data:\nAny\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nval data:\nAny\n?",
            "title": "&nbsp;qksms/presentation.feature.main/-scheduled/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/#scheduled",
            "text": "data class Scheduled : MainPage",
            "title": "Scheduled"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/#constructors",
            "text": "Name  Summary      <init>  Scheduled(data: Any ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/#properties",
            "text": "Name  Summary      data  val data: Any ?",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/data/",
            "text": "qksms\n / \npresentation.feature.main\n / \nScheduled\n / \ndata\n\n\ndata\n\u00b6\n\n\nval data:\nAny\n?",
            "title": "&nbsp;qksms/presentation.feature.main/-scheduled/data.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/data/#data",
            "text": "val data: Any ?",
            "title": "data"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nScheduled\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nScheduled(data:\nAny\n? = null)",
            "title": "&nbsp;qksms/presentation.feature.main/-scheduled/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-scheduled/-init-/#init",
            "text": "Scheduled(data: Any ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/conversation-filter/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nconversationFilter\n\n\nconversationFilter\n\u00b6\n\n\n@Inject lateinit var conversationFilter:\nConversationFilter",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/conversation-filter.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/conversation-filter/#conversationfilter",
            "text": "@Inject lateinit var conversationFilter: ConversationFilter",
            "title": "conversationFilter"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-all-seen/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nmarkAllSeen\n\n\nmarkAllSeen\n\u00b6\n\n\n@Inject lateinit var markAllSeen:\nMarkAllSeen",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/mark-all-seen.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-all-seen/#markallseen",
            "text": "@Inject lateinit var markAllSeen: MarkAllSeen",
            "title": "markAllSeen"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-archived/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nmarkArchived\n\n\nmarkArchived\n\u00b6\n\n\n@Inject lateinit var markArchived:\nMarkArchived",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/mark-archived.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-archived/#markarchived",
            "text": "@Inject lateinit var markArchived: MarkArchived",
            "title": "markArchived"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/message-repo/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nmessageRepo\n\n\nmessageRepo\n\u00b6\n\n\n@Inject lateinit var messageRepo:\nMessageRepository",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/message-repo.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/message-repo/#messagerepo",
            "text": "@Inject lateinit var messageRepo: MessageRepository",
            "title": "messageRepo"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/context/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \ncontext\n\n\ncontext\n\u00b6\n\n\n@Inject lateinit var context:\nContext",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/context.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/context/#context",
            "text": "@Inject lateinit var context: Context",
            "title": "context"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n\n\nMainViewModel\n\u00b6\n\n\nclass MainViewModel :\nQkViewModel\n<\nMainView\n,\nMainState\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMainViewModel()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncontext\n\n\nlateinit var context:\nContext\n\n\n\n\n\n\nconversationFilter\n\n\nlateinit var conversationFilter:\nConversationFilter\n\n\n\n\n\n\ndeleteConversation\n\n\nlateinit var deleteConversation:\nDeleteConversation\n\n\n\n\n\n\nmarkAllSeen\n\n\nlateinit var markAllSeen:\nMarkAllSeen\n\n\n\n\n\n\nmarkArchived\n\n\nlateinit var markArchived:\nMarkArchived\n\n\n\n\n\n\nmarkUnarchived\n\n\nlateinit var markUnarchived:\nMarkUnarchived\n\n\n\n\n\n\nmessageRepo\n\n\nlateinit var messageRepo:\nMessageRepository\n\n\n\n\n\n\nnavigator\n\n\nlateinit var navigator:\nNavigator\n\n\n\n\n\n\npartialSync\n\n\nlateinit var partialSync:\nPartialSync\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndisposables\n\n\nval disposables: CompositeDisposable\n\n\n\n\n\n\nstate\n\n\nval state: BehaviorSubject<State>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbindView\n\n\nfun bindView(view:\nMainView\n):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCleared\n\n\nopen fun onCleared():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#mainviewmodel",
            "text": "class MainViewModel : QkViewModel < MainView , MainState >",
            "title": "MainViewModel"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#constructors",
            "text": "Name  Summary      <init>  MainViewModel()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#properties",
            "text": "Name  Summary      context  lateinit var context: Context    conversationFilter  lateinit var conversationFilter: ConversationFilter    deleteConversation  lateinit var deleteConversation: DeleteConversation    markAllSeen  lateinit var markAllSeen: MarkAllSeen    markArchived  lateinit var markArchived: MarkArchived    markUnarchived  lateinit var markUnarchived: MarkUnarchived    messageRepo  lateinit var messageRepo: MessageRepository    navigator  lateinit var navigator: Navigator    partialSync  lateinit var partialSync: PartialSync",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#inherited-properties",
            "text": "Name  Summary      disposables  val disposables: CompositeDisposable    state  val state: BehaviorSubject<State>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#functions",
            "text": "Name  Summary      bindView  fun bindView(view: MainView ): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/#inherited-functions",
            "text": "Name  Summary      onCleared  open fun onCleared(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/navigator/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nnavigator\n\n\nnavigator\n\u00b6\n\n\n@Inject lateinit var navigator:\nNavigator",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/navigator.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/navigator/#navigator",
            "text": "@Inject lateinit var navigator: Navigator",
            "title": "navigator"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMainViewModel()",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/-init-/#init",
            "text": "MainViewModel()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/delete-conversation/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \ndeleteConversation\n\n\ndeleteConversation\n\u00b6\n\n\n@Inject lateinit var deleteConversation:\nDeleteConversation",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/delete-conversation.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/delete-conversation/#deleteconversation",
            "text": "@Inject lateinit var deleteConversation: DeleteConversation",
            "title": "deleteConversation"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/bind-view/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nbindView\n\n\nbindView\n\u00b6\n\n\nfun bindView(view:\nMainView\n):\nUnit",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/bind-view.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/bind-view/#bindview",
            "text": "fun bindView(view: MainView ): Unit",
            "title": "bindView"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/partial-sync/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \npartialSync\n\n\npartialSync\n\u00b6\n\n\n@Inject lateinit var partialSync:\nPartialSync",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/partial-sync.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/partial-sync/#partialsync",
            "text": "@Inject lateinit var partialSync: PartialSync",
            "title": "partialSync"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-unarchived/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainViewModel\n / \nmarkUnarchived\n\n\nmarkUnarchived\n\u00b6\n\n\n@Inject lateinit var markUnarchived:\nMarkUnarchived",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view-model/mark-unarchived.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view-model/mark-unarchived/#markunarchived",
            "text": "@Inject lateinit var markUnarchived: MarkUnarchived",
            "title": "markUnarchived"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/",
            "text": "qksms\n / \npresentation.feature.main\n / \nBlocked\n\n\nBlocked\n\u00b6\n\n\ndata class Blocked :\nMainPage\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nBlocked(data:\nAny\n? = null)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nval data:\nAny\n?",
            "title": "&nbsp;qksms/presentation.feature.main/-blocked/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/#blocked",
            "text": "data class Blocked : MainPage",
            "title": "Blocked"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/#constructors",
            "text": "Name  Summary      <init>  Blocked(data: Any ? = null)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/#properties",
            "text": "Name  Summary      data  val data: Any ?",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/data/",
            "text": "qksms\n / \npresentation.feature.main\n / \nBlocked\n / \ndata\n\n\ndata\n\u00b6\n\n\nval data:\nAny\n?",
            "title": "&nbsp;qksms/presentation.feature.main/-blocked/data.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/data/#data",
            "text": "val data: Any ?",
            "title": "data"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/-init-/",
            "text": "qksms\n / \npresentation.feature.main\n / \nBlocked\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nBlocked(data:\nAny\n? = null)",
            "title": "&nbsp;qksms/presentation.feature.main/-blocked/-init-.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-blocked/-init-/#init",
            "text": "Blocked(data: Any ? = null)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-i-n-b-o-x/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nINBOX\n\n\nINBOX\n\u00b6\n\n\nINBOX",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-i-n-b-o-x.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-i-n-b-o-x/#inbox",
            "text": "INBOX",
            "title": "INBOX"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-h-e-l-p/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nHELP\n\n\nHELP\n\u00b6\n\n\nHELP",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-h-e-l-p.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-h-e-l-p/#help",
            "text": "HELP",
            "title": "HELP"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n\n\nDrawerItem\n\u00b6\n\n\nenum class DrawerItem\n\n\nEnum Values\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nINBOX\n\n\n\n\n\n\n\n\nARCHIVED\n\n\n\n\n\n\n\n\nSCHEDULED\n\n\n\n\n\n\n\n\nBLOCKED\n\n\n\n\n\n\n\n\nSETTINGS\n\n\n\n\n\n\n\n\nHELP",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/#draweritem",
            "text": "enum class DrawerItem",
            "title": "DrawerItem"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/#enum-values",
            "text": "Name  Summary      INBOX     ARCHIVED     SCHEDULED     BLOCKED     SETTINGS     HELP",
            "title": "Enum Values"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-a-r-c-h-i-v-e-d/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nARCHIVED\n\n\nARCHIVED\n\u00b6\n\n\nARCHIVED",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-a-r-c-h-i-v-e-d.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-a-r-c-h-i-v-e-d/#archived",
            "text": "ARCHIVED",
            "title": "ARCHIVED"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-b-l-o-c-k-e-d/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nBLOCKED\n\n\nBLOCKED\n\u00b6\n\n\nBLOCKED",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-b-l-o-c-k-e-d.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-b-l-o-c-k-e-d/#blocked",
            "text": "BLOCKED",
            "title": "BLOCKED"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-s-e-t-t-i-n-g-s/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nSETTINGS\n\n\nSETTINGS\n\u00b6\n\n\nSETTINGS",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-s-e-t-t-i-n-g-s.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-s-e-t-t-i-n-g-s/#settings",
            "text": "SETTINGS",
            "title": "SETTINGS"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-s-c-h-e-d-u-l-e-d/",
            "text": "qksms\n / \npresentation.feature.main\n / \nDrawerItem\n / \nSCHEDULED\n\n\nSCHEDULED\n\u00b6\n\n\nSCHEDULED",
            "title": "&nbsp;qksms/presentation.feature.main/-drawer-item/-s-c-h-e-d-u-l-e-d.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-drawer-item/-s-c-h-e-d-u-l-e-d/#scheduled",
            "text": "SCHEDULED",
            "title": "SCHEDULED"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/clear-search/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nclearSearch\n\n\nclearSearch\n\u00b6\n\n\nabstract fun clearSearch():\nUnit",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/clear-search.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/clear-search/#clearsearch",
            "text": "abstract fun clearSearch(): Unit",
            "title": "clearSearch"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/swipe-conversation-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nswipeConversationIntent\n\n\nswipeConversationIntent\n\u00b6\n\n\nabstract val swipeConversationIntent: Observable<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/swipe-conversation-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/swipe-conversation-intent/#swipeconversationintent",
            "text": "abstract val swipeConversationIntent: Observable< Int >",
            "title": "swipeConversationIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/undo-swipe-conversation-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nundoSwipeConversationIntent\n\n\nundoSwipeConversationIntent\n\u00b6\n\n\nabstract val undoSwipeConversationIntent: Subject<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/undo-swipe-conversation-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/undo-swipe-conversation-intent/#undoswipeconversationintent",
            "text": "abstract val undoSwipeConversationIntent: Subject< Unit >",
            "title": "undoSwipeConversationIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n\n\nMainView\n\u00b6\n\n\ninterface MainView :\nQkView\n<\nMainState\n>\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncomposeIntent\n\n\nabstract val composeIntent: Observable<\nUnit\n>\n\n\n\n\n\n\nconversationClickIntent\n\n\nabstract val conversationClickIntent: Observable<\nLong\n>\n\n\n\n\n\n\nconversationLongClickIntent\n\n\nabstract val conversationLongClickIntent: Observable<\nLong\n>\n\n\n\n\n\n\nconversationMenuItemIntent\n\n\nabstract val conversationMenuItemIntent: Subject<\nInt\n>\n\n\n\n\n\n\ndrawerItemIntent\n\n\nabstract val drawerItemIntent: Observable<\nDrawerItem\n>\n\n\n\n\n\n\ndrawerOpenIntent\n\n\nabstract val drawerOpenIntent: Observable<\nBoolean\n>\n\n\n\n\n\n\nqueryCancelledIntent\n\n\nabstract val queryCancelledIntent: Observable<*>\n\n\n\n\n\n\nqueryChangedIntent\n\n\nabstract val queryChangedIntent: Observable<\nCharSequence\n>\n\n\n\n\n\n\nswipeConversationIntent\n\n\nabstract val swipeConversationIntent: Observable<\nInt\n>\n\n\n\n\n\n\nundoSwipeConversationIntent\n\n\nabstract val undoSwipeConversationIntent: Subject<\nUnit\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nclearSearch\n\n\nabstract fun clearSearch():\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nMainActivity\n\n\nclass MainActivity :\nQkActivity\n<\nMainViewModel\n>, MainView",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/index.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/#mainview",
            "text": "interface MainView : QkView < MainState >",
            "title": "MainView"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/#properties",
            "text": "Name  Summary      composeIntent  abstract val composeIntent: Observable< Unit >    conversationClickIntent  abstract val conversationClickIntent: Observable< Long >    conversationLongClickIntent  abstract val conversationLongClickIntent: Observable< Long >    conversationMenuItemIntent  abstract val conversationMenuItemIntent: Subject< Int >    drawerItemIntent  abstract val drawerItemIntent: Observable< DrawerItem >    drawerOpenIntent  abstract val drawerOpenIntent: Observable< Boolean >    queryCancelledIntent  abstract val queryCancelledIntent: Observable<*>    queryChangedIntent  abstract val queryChangedIntent: Observable< CharSequence >    swipeConversationIntent  abstract val swipeConversationIntent: Observable< Int >    undoSwipeConversationIntent  abstract val undoSwipeConversationIntent: Subject< Unit >",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/#functions",
            "text": "Name  Summary      clearSearch  abstract fun clearSearch(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/#inheritors",
            "text": "Name  Summary      MainActivity  class MainActivity : QkActivity < MainViewModel >, MainView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/drawer-item-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \ndrawerItemIntent\n\n\ndrawerItemIntent\n\u00b6\n\n\nabstract val drawerItemIntent: Observable<\nDrawerItem\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/drawer-item-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/drawer-item-intent/#draweritemintent",
            "text": "abstract val drawerItemIntent: Observable< DrawerItem >",
            "title": "drawerItemIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-menu-item-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nconversationMenuItemIntent\n\n\nconversationMenuItemIntent\n\u00b6\n\n\nabstract val conversationMenuItemIntent: Subject<\nInt\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/conversation-menu-item-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-menu-item-intent/#conversationmenuitemintent",
            "text": "abstract val conversationMenuItemIntent: Subject< Int >",
            "title": "conversationMenuItemIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-click-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nconversationClickIntent\n\n\nconversationClickIntent\n\u00b6\n\n\nabstract val conversationClickIntent: Observable<\nLong\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/conversation-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-click-intent/#conversationclickintent",
            "text": "abstract val conversationClickIntent: Observable< Long >",
            "title": "conversationClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/drawer-open-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \ndrawerOpenIntent\n\n\ndrawerOpenIntent\n\u00b6\n\n\nabstract val drawerOpenIntent: Observable<\nBoolean\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/drawer-open-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/drawer-open-intent/#draweropenintent",
            "text": "abstract val drawerOpenIntent: Observable< Boolean >",
            "title": "drawerOpenIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/query-cancelled-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nqueryCancelledIntent\n\n\nqueryCancelledIntent\n\u00b6\n\n\nabstract val queryCancelledIntent: Observable<*>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/query-cancelled-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/query-cancelled-intent/#querycancelledintent",
            "text": "abstract val queryCancelledIntent: Observable<*>",
            "title": "queryCancelledIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/query-changed-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nqueryChangedIntent\n\n\nqueryChangedIntent\n\u00b6\n\n\nabstract val queryChangedIntent: Observable<\nCharSequence\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/query-changed-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/query-changed-intent/#querychangedintent",
            "text": "abstract val queryChangedIntent: Observable< CharSequence >",
            "title": "queryChangedIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-long-click-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \nconversationLongClickIntent\n\n\nconversationLongClickIntent\n\u00b6\n\n\nabstract val conversationLongClickIntent: Observable<\nLong\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/conversation-long-click-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/conversation-long-click-intent/#conversationlongclickintent",
            "text": "abstract val conversationLongClickIntent: Observable< Long >",
            "title": "conversationLongClickIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/compose-intent/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainView\n / \ncomposeIntent\n\n\ncomposeIntent\n\u00b6\n\n\nabstract val composeIntent: Observable<\nUnit\n>",
            "title": "&nbsp;qksms/presentation.feature.main/-main-view/compose-intent.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-view/compose-intent/#composeintent",
            "text": "abstract val composeIntent: Observable< Unit >",
            "title": "composeIntent"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-page/",
            "text": "qksms\n / \npresentation.feature.main\n / \nMainPage\n\n\nMainPage\n\u00b6\n\n\nsealed class MainPage\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nArchived\n\n\ndata class Archived : MainPage\n\n\n\n\n\n\nBlocked\n\n\ndata class Blocked : MainPage\n\n\n\n\n\n\nInbox\n\n\ndata class Inbox : MainPage\n\n\n\n\n\n\nScheduled\n\n\ndata class Scheduled : MainPage",
            "title": "&nbsp;qksms/presentation.feature.main/-main-page.md"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-page/#mainpage",
            "text": "sealed class MainPage",
            "title": "MainPage"
        },
        {
            "location": "/qksms/presentation.feature.main/-main-page/#inheritors",
            "text": "Name  Summary      Archived  data class Archived : MainPage    Blocked  data class Blocked : MainPage    Inbox  data class Inbox : MainPage    Scheduled  data class Scheduled : MainPage",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/alltypes/",
            "text": "All Types\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncommon.util.Analytics\n\n\n\n\n\n\n\n\ncommon.util.AnalyticsImpl\n\n\n\n\n\n\n\n\ncommon.di.AppComponent\n\n\n\n\n\n\n\n\ncommon.di.AppModule\n\n\n\n\n\n\n\n\npresentation.feature.main.Archived\n\n\n\n\n\n\n\n\npresentation.feature.compose.AttachmentAdapter\n\n\n\n\n\n\n\n\npresentation.common.widget.AvatarView\n\n\n\n\n\n\n\n\npresentation.feature.main.Blocked\n\n\n\n\n\n\n\n\njava.util.Calendar\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\npresentation.feature.compose.ChipsAdapter\n\n\n\n\n\n\n\n\ncommon.util.ClipboardUtils\n\n\n\n\n\n\n\n\nkotlin.collections.Collection\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ncommon.util.Colors\n\n\n\n\n\n\n\n\npresentation.feature.compose.ComposeActivity\n\n\n\n\n\n\n\n\npresentation.feature.compose.ComposeState\n\n\n\n\n\n\n\n\npresentation.feature.compose.ComposeView\n\n\n\n\n\n\n\n\npresentation.feature.compose.ComposeViewModel\n\n\n\n\n\n\n\n\npresentation.feature.compose.ComposeWindowCallback\n\n\n\n\n\n\n\n\ndata.model.Contact\n\n\n\n\n\n\n\n\npresentation.feature.compose.ContactAdapter\n\n\n\n\n\n\n\n\ncommon.util.filter.ContactFilter\n\n\n\n\n\n\n\n\ncommon.util.ContactImageLoader\n\n\n\n\n\n\n\n\ndata.repository.ContactRepository\n\n\n\n\n\n\n\n\ninteractor.ContactSync\n\n\n\n\n\n\n\n\nandroid.content.Context\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ndata.model.Conversation\n\n\n\n\n\n\n\n\ncommon.util.filter.ConversationFilter\n\n\n\n\n\n\n\n\npresentation.feature.conversations.ConversationItemTouchCallback\n\n\n\n\n\n\n\n\npresentation.feature.conversations.ConversationsAdapter\n\n\n\n\n\n\n\n\nandroid.database.Cursor\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ndata.mapper.CursorToContact\n\n\n\n\n\n\n\n\ndata.mapper.CursorToConversation\n\n\n\n\n\n\n\n\ndata.mapper.CursorToMessage\n\n\n\n\n\n\n\n\ndata.mapper.CursorToPart\n\n\n\n\n\n\n\n\ndata.mapper.CursorToRecipient\n\n\n\n\n\n\n\n\ncommon.util.DateFormatter\n\n\n\n\n\n\n\n\npresentation.receiver.DefaultSmsChangedReceiver\n\n\n\n\n\n\n\n\ninteractor.DeleteConversation\n\n\n\n\n\n\n\n\ninteractor.DeleteMessage\n\n\n\n\n\n\n\n\npresentation.feature.compose.DetailedChipView\n\n\n\n\n\n\n\n\npresentation.feature.main.DrawerItem\n\n\n\n\n\n\n\n\nandroid.widget.EditText\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ncommon.util.filter.Filter\n\n\n\n\n\n\n\n\nio.reactivex.Flowable\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\npresentation.common.base.FlowableAdapter\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\ninteractor.FullSync\n\n\n\n\n\n\n\n\ncommon.util.GlideAppModule\n\n\n\n\n\n\n\n\npresentation.common.widget.GroupAvatarView\n\n\n\n\n\n\n\n\npresentation.service.HeadlessSmsSendService\n\n\n\n\n\n\n\n\nandroid.widget.ImageView\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\npresentation.feature.main.Inbox\n\n\n\n\n\n\n\n\ndata.model.InboxItem\n\n\nGroups a conversation with its latest message into a single model\n\n\n\n\n\n\nkotlin.Int\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ninteractor.Interactor\n\n\n\n\n\n\n\n\ncommon.util.Keys\n\n\nHelper class for generating incrementing ids for messages\n\n\n\n\n\n\ncommon.util.LiveRealmData\n\n\n\n\n\n\n\n\npresentation.feature.main.MainActivity\n\n\n\n\n\n\n\n\npresentation.feature.main.MainPage\n\n\n\n\n\n\n\n\npresentation.feature.main.MainState\n\n\n\n\n\n\n\n\npresentation.feature.main.MainView\n\n\n\n\n\n\n\n\npresentation.feature.main.MainViewModel\n\n\n\n\n\n\n\n\ndata.mapper.Mapper\n\n\n\n\n\n\n\n\ninteractor.MarkAllSeen\n\n\n\n\n\n\n\n\ninteractor.MarkArchived\n\n\n\n\n\n\n\n\ninteractor.MarkDelivered\n\n\n\n\n\n\n\n\ninteractor.MarkDeliveryFailed\n\n\n\n\n\n\n\n\ninteractor.MarkFailed\n\n\n\n\n\n\n\n\ninteractor.MarkRead\n\n\n\n\n\n\n\n\npresentation.receiver.MarkReadReceiver\n\n\n\n\n\n\n\n\ninteractor.MarkSeen\n\n\n\n\n\n\n\n\npresentation.receiver.MarkSeenReceiver\n\n\n\n\n\n\n\n\ninteractor.MarkSent\n\n\n\n\n\n\n\n\ninteractor.MarkUnarchived\n\n\n\n\n\n\n\n\ndata.model.MenuItem\n\n\n\n\n\n\n\n\npresentation.common.MenuItemAdapter\n\n\n\n\n\n\n\n\ndata.model.Message\n\n\n\n\n\n\n\n\npresentation.receiver.MessageDeliveredReceiver\n\n\n\n\n\n\n\n\ndata.repository.MessageRepository\n\n\n\n\n\n\n\n\npresentation.receiver.MessageSentReceiver\n\n\n\n\n\n\n\n\ncommon.util.MessageUtils\n\n\nUtils for using Telephony functions on lower API levels\n\n\n\n\n\n\npresentation.feature.compose.MessagesAdapter\n\n\n\n\n\n\n\n\ndata.model.MmsPart\n\n\n\n\n\n\n\n\npresentation.common.widget.MmsPreviewView\n\n\n\n\n\n\n\n\npresentation.receiver.MmsReceivedReceiver\n\n\n\n\n\n\n\n\npresentation.receiver.MmsReceiver\n\n\n\n\n\n\n\n\npresentation.receiver.MmsSentReceiver\n\n\n\n\n\n\n\n\npresentation.receiver.MmsUpdatedReceiver\n\n\n\n\n\n\n\n\npresentation.common.Navigator\n\n\n\n\n\n\n\n\ncommon.util.NotificationManager\n\n\n\n\n\n\n\n\ncommon.util.Optional\n\n\n\n\n\n\n\n\ninteractor.PartialSync\n\n\n\n\n\n\n\n\ncommon.util.Permissions\n\n\n\n\n\n\n\n\ndata.model.PhoneNumber\n\n\n\n\n\n\n\n\ncommon.util.filter.PhoneNumberFilter\n\n\n\n\n\n\n\n\npresentation.common.widget.PreferenceView\n\n\n\n\n\n\n\n\ncommon.util.Preferences\n\n\n\n\n\n\n\n\ncommon.QKApplication\n\n\n\n\n\n\n\n\npresentation.common.base.QkActivity\n\n\n\n\n\n\n\n\npresentation.common.base.QkAdapter\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\npresentation.common.widget.QkEditText\n\n\nCustom implementation of EditText to allow for dynamic text colors\n\n\n\n\n\n\npresentation.common.widget.QkSwitch\n\n\n\n\n\n\n\n\npresentation.common.widget.QkTextView\n\n\n\n\n\n\n\n\npresentation.common.base.QkView\n\n\n\n\n\n\n\n\npresentation.common.base.QkViewHolder\n\n\n\n\n\n\n\n\npresentation.common.base.QkViewModel\n\n\n\n\n\n\n\n\nio.realm.RealmModel\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\nio.realm.RealmObject\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\nio.realm.RealmResults\n (extensions in package common.util.extensions)\n\n\n\n\n\n\n\n\ninteractor.ReceiveMms\n\n\n\n\n\n\n\n\ninteractor.ReceiveSms\n\n\n\n\n\n\n\n\ndata.model.Recipient\n\n\n\n\n\n\n\n\ncommon.util.filter.RecipientFilter\n\n\n\n\n\n\n\n\npresentation.receiver.RemoteMessagingReceiver\n\n\n\n\n\n\n\n\npresentation.feature.main.Scheduled\n\n\n\n\n\n\n\n\ninteractor.SendMessage\n\n\n\n\n\n\n\n\npresentation.common.widget.Separator\n\n\n\n\n\n\n\n\npresentation.feature.settings.SettingsActivity\n\n\n\n\n\n\n\n\npresentation.feature.settings.SettingsState\n\n\n\n\n\n\n\n\npresentation.feature.settings.SettingsView\n\n\n\n\n\n\n\n\npresentation.feature.settings.SettingsViewModel\n\n\n\n\n\n\n\n\npresentation.feature.setup.SetupActivity\n\n\n\n\n\n\n\n\npresentation.feature.setup.SetupState\n\n\n\n\n\n\n\n\npresentation.feature.setup.SetupView\n\n\n\n\n\n\n\n\npresentation.feature.setup.SetupViewModel\n\n\n\n\n\n\n\n\npresentation.receiver.SmsReceiver\n\n\n\n\n\n\n\n\ndata.model.SyncLog\n\n\n\n\n\n\n\n\ncommon.util.SyncManager\n\n\n\n\n\n\n\n\ninteractor.SyncMessage\n\n\n\n\n\n\n\n\npresentation.feature.settings.ThemeAdapter\n\n\n\n\n\n\n\n\npresentation.common.widget.TightTextView\n\n\n\n\n\n\n\n\nandroid.view.View\n (extensions in package common.util.extensions)",
            "title": "&nbsp;qksms/alltypes/index.md"
        },
        {
            "location": "/qksms/alltypes/#all-types",
            "text": "Name  Summary      common.util.Analytics     common.util.AnalyticsImpl     common.di.AppComponent     common.di.AppModule     presentation.feature.main.Archived     presentation.feature.compose.AttachmentAdapter     presentation.common.widget.AvatarView     presentation.feature.main.Blocked     java.util.Calendar  (extensions in package common.util.extensions)     presentation.feature.compose.ChipsAdapter     common.util.ClipboardUtils     kotlin.collections.Collection  (extensions in package common.util.extensions)     common.util.Colors     presentation.feature.compose.ComposeActivity     presentation.feature.compose.ComposeState     presentation.feature.compose.ComposeView     presentation.feature.compose.ComposeViewModel     presentation.feature.compose.ComposeWindowCallback     data.model.Contact     presentation.feature.compose.ContactAdapter     common.util.filter.ContactFilter     common.util.ContactImageLoader     data.repository.ContactRepository     interactor.ContactSync     android.content.Context  (extensions in package common.util.extensions)     data.model.Conversation     common.util.filter.ConversationFilter     presentation.feature.conversations.ConversationItemTouchCallback     presentation.feature.conversations.ConversationsAdapter     android.database.Cursor  (extensions in package common.util.extensions)     data.mapper.CursorToContact     data.mapper.CursorToConversation     data.mapper.CursorToMessage     data.mapper.CursorToPart     data.mapper.CursorToRecipient     common.util.DateFormatter     presentation.receiver.DefaultSmsChangedReceiver     interactor.DeleteConversation     interactor.DeleteMessage     presentation.feature.compose.DetailedChipView     presentation.feature.main.DrawerItem     android.widget.EditText  (extensions in package common.util.extensions)     common.util.filter.Filter     io.reactivex.Flowable  (extensions in package common.util.extensions)     presentation.common.base.FlowableAdapter  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations    interactor.FullSync     common.util.GlideAppModule     presentation.common.widget.GroupAvatarView     presentation.service.HeadlessSmsSendService     android.widget.ImageView  (extensions in package common.util.extensions)     presentation.feature.main.Inbox     data.model.InboxItem  Groups a conversation with its latest message into a single model    kotlin.Int  (extensions in package common.util.extensions)     interactor.Interactor     common.util.Keys  Helper class for generating incrementing ids for messages    common.util.LiveRealmData     presentation.feature.main.MainActivity     presentation.feature.main.MainPage     presentation.feature.main.MainState     presentation.feature.main.MainView     presentation.feature.main.MainViewModel     data.mapper.Mapper     interactor.MarkAllSeen     interactor.MarkArchived     interactor.MarkDelivered     interactor.MarkDeliveryFailed     interactor.MarkFailed     interactor.MarkRead     presentation.receiver.MarkReadReceiver     interactor.MarkSeen     presentation.receiver.MarkSeenReceiver     interactor.MarkSent     interactor.MarkUnarchived     data.model.MenuItem     presentation.common.MenuItemAdapter     data.model.Message     presentation.receiver.MessageDeliveredReceiver     data.repository.MessageRepository     presentation.receiver.MessageSentReceiver     common.util.MessageUtils  Utils for using Telephony functions on lower API levels    presentation.feature.compose.MessagesAdapter     data.model.MmsPart     presentation.common.widget.MmsPreviewView     presentation.receiver.MmsReceivedReceiver     presentation.receiver.MmsReceiver     presentation.receiver.MmsSentReceiver     presentation.receiver.MmsUpdatedReceiver     presentation.common.Navigator     common.util.NotificationManager     common.util.Optional     interactor.PartialSync     common.util.Permissions     data.model.PhoneNumber     common.util.filter.PhoneNumberFilter     presentation.common.widget.PreferenceView     common.util.Preferences     common.QKApplication     presentation.common.base.QkActivity     presentation.common.base.QkAdapter  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations    presentation.common.widget.QkEditText  Custom implementation of EditText to allow for dynamic text colors    presentation.common.widget.QkSwitch     presentation.common.widget.QkTextView     presentation.common.base.QkView     presentation.common.base.QkViewHolder     presentation.common.base.QkViewModel     io.realm.RealmModel  (extensions in package common.util.extensions)     io.realm.RealmObject  (extensions in package common.util.extensions)     io.realm.RealmResults  (extensions in package common.util.extensions)     interactor.ReceiveMms     interactor.ReceiveSms     data.model.Recipient     common.util.filter.RecipientFilter     presentation.receiver.RemoteMessagingReceiver     presentation.feature.main.Scheduled     interactor.SendMessage     presentation.common.widget.Separator     presentation.feature.settings.SettingsActivity     presentation.feature.settings.SettingsState     presentation.feature.settings.SettingsView     presentation.feature.settings.SettingsViewModel     presentation.feature.setup.SetupActivity     presentation.feature.setup.SetupState     presentation.feature.setup.SetupView     presentation.feature.setup.SetupViewModel     presentation.receiver.SmsReceiver     data.model.SyncLog     common.util.SyncManager     interactor.SyncMessage     presentation.feature.settings.ThemeAdapter     presentation.common.widget.TightTextView     android.view.View  (extensions in package common.util.extensions)",
            "title": "All Types"
        },
        {
            "location": "/qksms/data.model/-sync-log/",
            "text": "qksms\n / \ndata.model\n / \nSyncLog\n\n\nSyncLog\n\u00b6\n\n\nopen class SyncLog : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSyncLog()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndate\n\n\nvar date:\nLong\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-sync-log/index.md"
        },
        {
            "location": "/qksms/data.model/-sync-log/#synclog",
            "text": "open class SyncLog : RealmObject",
            "title": "SyncLog"
        },
        {
            "location": "/qksms/data.model/-sync-log/#constructors",
            "text": "Name  Summary      <init>  SyncLog()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-sync-log/#properties",
            "text": "Name  Summary      date  var date: Long",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-sync-log/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-sync-log/-init-/",
            "text": "qksms\n / \ndata.model\n / \nSyncLog\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSyncLog()",
            "title": "&nbsp;qksms/data.model/-sync-log/-init-.md"
        },
        {
            "location": "/qksms/data.model/-sync-log/-init-/#init",
            "text": "SyncLog()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-sync-log/date/",
            "text": "qksms\n / \ndata.model\n / \nSyncLog\n / \ndate\n\n\ndate\n\u00b6\n\n\nvar date:\nLong",
            "title": "&nbsp;qksms/data.model/-sync-log/date.md"
        },
        {
            "location": "/qksms/data.model/-sync-log/date/#date",
            "text": "var date: Long",
            "title": "date"
        },
        {
            "location": "/qksms/data.model/-recipient/contact/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n / \ncontact\n\n\ncontact\n\u00b6\n\n\nvar contact:\nContact\n?",
            "title": "&nbsp;qksms/data.model/-recipient/contact.md"
        },
        {
            "location": "/qksms/data.model/-recipient/contact/#contact",
            "text": "var contact: Contact ?",
            "title": "contact"
        },
        {
            "location": "/qksms/data.model/-recipient/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n\n\nRecipient\n\u00b6\n\n\nopen class Recipient : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nRecipient()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nvar address:\nString\n\n\n\n\n\n\ncontact\n\n\nvar contact:\nContact\n?\n\n\n\n\n\n\nid\n\n\nvar id:\nLong\n\n\n\n\n\n\nlastUpdate\n\n\nvar lastUpdate:\nLong\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-recipient/index.md"
        },
        {
            "location": "/qksms/data.model/-recipient/#recipient",
            "text": "open class Recipient : RealmObject",
            "title": "Recipient"
        },
        {
            "location": "/qksms/data.model/-recipient/#constructors",
            "text": "Name  Summary      <init>  Recipient()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-recipient/#properties",
            "text": "Name  Summary      address  var address: String    contact  var contact: Contact ?    id  var id: Long    lastUpdate  var lastUpdate: Long",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-recipient/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-recipient/-init-/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nRecipient()",
            "title": "&nbsp;qksms/data.model/-recipient/-init-.md"
        },
        {
            "location": "/qksms/data.model/-recipient/-init-/#init",
            "text": "Recipient()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-recipient/last-update/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n / \nlastUpdate\n\n\nlastUpdate\n\u00b6\n\n\nvar lastUpdate:\nLong",
            "title": "&nbsp;qksms/data.model/-recipient/last-update.md"
        },
        {
            "location": "/qksms/data.model/-recipient/last-update/#lastupdate",
            "text": "var lastUpdate: Long",
            "title": "lastUpdate"
        },
        {
            "location": "/qksms/data.model/-recipient/address/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n / \naddress\n\n\naddress\n\u00b6\n\n\nvar address:\nString",
            "title": "&nbsp;qksms/data.model/-recipient/address.md"
        },
        {
            "location": "/qksms/data.model/-recipient/address/#address",
            "text": "var address: String",
            "title": "address"
        },
        {
            "location": "/qksms/data.model/-recipient/id/",
            "text": "qksms\n / \ndata.model\n / \nRecipient\n / \nid\n\n\nid\n\u00b6\n\n\nvar id:\nLong",
            "title": "&nbsp;qksms/data.model/-recipient/id.md"
        },
        {
            "location": "/qksms/data.model/-recipient/id/#id",
            "text": "var id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/data.model/-phone-number/type/",
            "text": "qksms\n / \ndata.model\n / \nPhoneNumber\n / \ntype\n\n\ntype\n\u00b6\n\n\nvar type:\nString",
            "title": "&nbsp;qksms/data.model/-phone-number/type.md"
        },
        {
            "location": "/qksms/data.model/-phone-number/type/#type",
            "text": "var type: String",
            "title": "type"
        },
        {
            "location": "/qksms/data.model/-phone-number/",
            "text": "qksms\n / \ndata.model\n / \nPhoneNumber\n\n\nPhoneNumber\n\u00b6\n\n\nopen class PhoneNumber : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPhoneNumber()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nvar address:\nString\n\n\n\n\n\n\ntype\n\n\nvar type:\nString\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-phone-number/index.md"
        },
        {
            "location": "/qksms/data.model/-phone-number/#phonenumber",
            "text": "open class PhoneNumber : RealmObject",
            "title": "PhoneNumber"
        },
        {
            "location": "/qksms/data.model/-phone-number/#constructors",
            "text": "Name  Summary      <init>  PhoneNumber()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-phone-number/#properties",
            "text": "Name  Summary      address  var address: String    type  var type: String",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-phone-number/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-phone-number/-init-/",
            "text": "qksms\n / \ndata.model\n / \nPhoneNumber\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPhoneNumber()",
            "title": "&nbsp;qksms/data.model/-phone-number/-init-.md"
        },
        {
            "location": "/qksms/data.model/-phone-number/-init-/#init",
            "text": "PhoneNumber()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-phone-number/address/",
            "text": "qksms\n / \ndata.model\n / \nPhoneNumber\n / \naddress\n\n\naddress\n\u00b6\n\n\nvar address:\nString",
            "title": "&nbsp;qksms/data.model/-phone-number/address.md"
        },
        {
            "location": "/qksms/data.model/-phone-number/address/#address",
            "text": "var address: String",
            "title": "address"
        },
        {
            "location": "/qksms/data.model/-conversation/get-title/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n / \ngetTitle\n\n\ngetTitle\n\u00b6\n\n\nfun getTitle():\nString",
            "title": "&nbsp;qksms/data.model/-conversation/get-title.md"
        },
        {
            "location": "/qksms/data.model/-conversation/get-title/#gettitle",
            "text": "fun getTitle(): String",
            "title": "getTitle"
        },
        {
            "location": "/qksms/data.model/-conversation/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n\n\nConversation\n\u00b6\n\n\nopen class Conversation : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nConversation()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\narchived\n\n\nvar archived:\nBoolean\n\n\n\n\n\n\nid\n\n\nvar id:\nLong\n\n\n\n\n\n\nrecipients\n\n\nvar recipients: RealmList<\nRecipient\n>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetTitle\n\n\nfun getTitle():\nString\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-conversation/index.md"
        },
        {
            "location": "/qksms/data.model/-conversation/#conversation",
            "text": "open class Conversation : RealmObject",
            "title": "Conversation"
        },
        {
            "location": "/qksms/data.model/-conversation/#constructors",
            "text": "Name  Summary      <init>  Conversation()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-conversation/#properties",
            "text": "Name  Summary      archived  var archived: Boolean    id  var id: Long    recipients  var recipients: RealmList< Recipient >",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-conversation/#functions",
            "text": "Name  Summary      getTitle  fun getTitle(): String",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.model/-conversation/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-conversation/-init-/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nConversation()",
            "title": "&nbsp;qksms/data.model/-conversation/-init-.md"
        },
        {
            "location": "/qksms/data.model/-conversation/-init-/#init",
            "text": "Conversation()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-conversation/recipients/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n / \nrecipients\n\n\nrecipients\n\u00b6\n\n\nvar recipients: RealmList<\nRecipient\n>",
            "title": "&nbsp;qksms/data.model/-conversation/recipients.md"
        },
        {
            "location": "/qksms/data.model/-conversation/recipients/#recipients",
            "text": "var recipients: RealmList< Recipient >",
            "title": "recipients"
        },
        {
            "location": "/qksms/data.model/-conversation/archived/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n / \narchived\n\n\narchived\n\u00b6\n\n\nvar archived:\nBoolean",
            "title": "&nbsp;qksms/data.model/-conversation/archived.md"
        },
        {
            "location": "/qksms/data.model/-conversation/archived/#archived",
            "text": "var archived: Boolean",
            "title": "archived"
        },
        {
            "location": "/qksms/data.model/-conversation/id/",
            "text": "qksms\n / \ndata.model\n / \nConversation\n / \nid\n\n\nid\n\u00b6\n\n\nvar id:\nLong",
            "title": "&nbsp;qksms/data.model/-conversation/id.md"
        },
        {
            "location": "/qksms/data.model/-conversation/id/#id",
            "text": "var id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/data.model/-contact/lookup-key/",
            "text": "qksms\n / \ndata.model\n / \nContact\n / \nlookupKey\n\n\nlookupKey\n\u00b6\n\n\nvar lookupKey:\nString",
            "title": "&nbsp;qksms/data.model/-contact/lookup-key.md"
        },
        {
            "location": "/qksms/data.model/-contact/lookup-key/#lookupkey",
            "text": "var lookupKey: String",
            "title": "lookupKey"
        },
        {
            "location": "/qksms/data.model/-contact/name/",
            "text": "qksms\n / \ndata.model\n / \nContact\n / \nname\n\n\nname\n\u00b6\n\n\nvar name:\nString",
            "title": "&nbsp;qksms/data.model/-contact/name.md"
        },
        {
            "location": "/qksms/data.model/-contact/name/#name",
            "text": "var name: String",
            "title": "name"
        },
        {
            "location": "/qksms/data.model/-contact/",
            "text": "qksms\n / \ndata.model\n / \nContact\n\n\nContact\n\u00b6\n\n\nopen class Contact : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContact()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nlastUpdate\n\n\nvar lastUpdate:\nLong\n\n\n\n\n\n\nlookupKey\n\n\nvar lookupKey:\nString\n\n\n\n\n\n\nname\n\n\nvar name:\nString\n\n\n\n\n\n\nnumbers\n\n\nvar numbers: RealmList<\nPhoneNumber\n>\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-contact/index.md"
        },
        {
            "location": "/qksms/data.model/-contact/#contact",
            "text": "open class Contact : RealmObject",
            "title": "Contact"
        },
        {
            "location": "/qksms/data.model/-contact/#constructors",
            "text": "Name  Summary      <init>  Contact()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-contact/#properties",
            "text": "Name  Summary      lastUpdate  var lastUpdate: Long    lookupKey  var lookupKey: String    name  var name: String    numbers  var numbers: RealmList< PhoneNumber >",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-contact/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-contact/-init-/",
            "text": "qksms\n / \ndata.model\n / \nContact\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContact()",
            "title": "&nbsp;qksms/data.model/-contact/-init-.md"
        },
        {
            "location": "/qksms/data.model/-contact/-init-/#init",
            "text": "Contact()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-contact/numbers/",
            "text": "qksms\n / \ndata.model\n / \nContact\n / \nnumbers\n\n\nnumbers\n\u00b6\n\n\nvar numbers: RealmList<\nPhoneNumber\n>",
            "title": "&nbsp;qksms/data.model/-contact/numbers.md"
        },
        {
            "location": "/qksms/data.model/-contact/numbers/#numbers",
            "text": "var numbers: RealmList< PhoneNumber >",
            "title": "numbers"
        },
        {
            "location": "/qksms/data.model/-contact/last-update/",
            "text": "qksms\n / \ndata.model\n / \nContact\n / \nlastUpdate\n\n\nlastUpdate\n\u00b6\n\n\nvar lastUpdate:\nLong",
            "title": "&nbsp;qksms/data.model/-contact/last-update.md"
        },
        {
            "location": "/qksms/data.model/-contact/last-update/#lastupdate",
            "text": "var lastUpdate: Long",
            "title": "lastUpdate"
        },
        {
            "location": "/qksms/data.model/",
            "text": "qksms\n / \ndata.model\n\n\nPackage data.model\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContact\n\n\nopen class Contact : RealmObject\n\n\n\n\n\n\nConversation\n\n\nopen class Conversation : RealmObject\n\n\n\n\n\n\nInboxItem\n\n\ndata class InboxItem\nGroups a conversation with its latest message into a single model\n\n\n\n\n\n\nMenuItem\n\n\ndata class MenuItem\n\n\n\n\n\n\nMessage\n\n\nopen class Message : RealmObject\n\n\n\n\n\n\nMmsPart\n\n\nopen class MmsPart : RealmObject\n\n\n\n\n\n\nPhoneNumber\n\n\nopen class PhoneNumber : RealmObject\n\n\n\n\n\n\nRecipient\n\n\nopen class Recipient : RealmObject\n\n\n\n\n\n\nSyncLog\n\n\nopen class SyncLog : RealmObject",
            "title": "&nbsp;qksms/data.model/index.md"
        },
        {
            "location": "/qksms/data.model/#package-datamodel",
            "text": "",
            "title": "Package data.model"
        },
        {
            "location": "/qksms/data.model/#types",
            "text": "Name  Summary      Contact  open class Contact : RealmObject    Conversation  open class Conversation : RealmObject    InboxItem  data class InboxItem Groups a conversation with its latest message into a single model    MenuItem  data class MenuItem    Message  open class Message : RealmObject    MmsPart  open class MmsPart : RealmObject    PhoneNumber  open class PhoneNumber : RealmObject    Recipient  open class Recipient : RealmObject    SyncLog  open class SyncLog : RealmObject",
            "title": "Types"
        },
        {
            "location": "/qksms/data.model/-menu-item/title/",
            "text": "qksms\n / \ndata.model\n / \nMenuItem\n / \ntitle\n\n\ntitle\n\u00b6\n\n\nval title:\nInt",
            "title": "&nbsp;qksms/data.model/-menu-item/title.md"
        },
        {
            "location": "/qksms/data.model/-menu-item/title/#title",
            "text": "val title: Int",
            "title": "title"
        },
        {
            "location": "/qksms/data.model/-menu-item/",
            "text": "qksms\n / \ndata.model\n / \nMenuItem\n\n\nMenuItem\n\u00b6\n\n\ndata class MenuItem\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMenuItem(title:\nInt\n, actionId:\nInt\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nactionId\n\n\nval actionId:\nInt\n\n\n\n\n\n\ntitle\n\n\nval title:\nInt",
            "title": "&nbsp;qksms/data.model/-menu-item/index.md"
        },
        {
            "location": "/qksms/data.model/-menu-item/#menuitem",
            "text": "data class MenuItem",
            "title": "MenuItem"
        },
        {
            "location": "/qksms/data.model/-menu-item/#constructors",
            "text": "Name  Summary      <init>  MenuItem(title: Int , actionId: Int )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-menu-item/#properties",
            "text": "Name  Summary      actionId  val actionId: Int    title  val title: Int",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-menu-item/action-id/",
            "text": "qksms\n / \ndata.model\n / \nMenuItem\n / \nactionId\n\n\nactionId\n\u00b6\n\n\nval actionId:\nInt",
            "title": "&nbsp;qksms/data.model/-menu-item/action-id.md"
        },
        {
            "location": "/qksms/data.model/-menu-item/action-id/#actionid",
            "text": "val actionId: Int",
            "title": "actionId"
        },
        {
            "location": "/qksms/data.model/-menu-item/-init-/",
            "text": "qksms\n / \ndata.model\n / \nMenuItem\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMenuItem(@StringRes title:\nInt\n, actionId:\nInt\n)",
            "title": "&nbsp;qksms/data.model/-menu-item/-init-.md"
        },
        {
            "location": "/qksms/data.model/-menu-item/-init-/#init",
            "text": "MenuItem(@StringRes title: Int , actionId: Int )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-mms-part/image/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nimage\n\n\nimage\n\u00b6\n\n\nvar image:\nString\n?",
            "title": "&nbsp;qksms/data.model/-mms-part/image.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/image/#image",
            "text": "var image: String ?",
            "title": "image"
        },
        {
            "location": "/qksms/data.model/-mms-part/type/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \ntype\n\n\ntype\n\u00b6\n\n\nvar type:\nString",
            "title": "&nbsp;qksms/data.model/-mms-part/type.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/type/#type",
            "text": "var type: String",
            "title": "type"
        },
        {
            "location": "/qksms/data.model/-mms-part/message-id/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nmessageId\n\n\nmessageId\n\u00b6\n\n\nvar messageId:\nLong",
            "title": "&nbsp;qksms/data.model/-mms-part/message-id.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/message-id/#messageid",
            "text": "var messageId: Long",
            "title": "messageId"
        },
        {
            "location": "/qksms/data.model/-mms-part/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n\n\nMmsPart\n\u00b6\n\n\nopen class MmsPart : RealmObject\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMmsPart()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nid\n\n\nvar id:\nLong\n\n\n\n\n\n\nimage\n\n\nvar image:\nString\n?\n\n\n\n\n\n\nmessageId\n\n\nvar messageId:\nLong\n\n\n\n\n\n\ntext\n\n\nvar text:\nString\n?\n\n\n\n\n\n\ntype\n\n\nvar type:\nString\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nisImage\n\n\nfun isImage():\nBoolean\n\n\n\n\n\n\nisSmil\n\n\nfun isSmil():\nBoolean\n\n\n\n\n\n\nisText\n\n\nfun isText():\nBoolean\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-mms-part/index.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/#mmspart",
            "text": "open class MmsPart : RealmObject",
            "title": "MmsPart"
        },
        {
            "location": "/qksms/data.model/-mms-part/#constructors",
            "text": "Name  Summary      <init>  MmsPart()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-mms-part/#properties",
            "text": "Name  Summary      id  var id: Long    image  var image: String ?    messageId  var messageId: Long    text  var text: String ?    type  var type: String",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-mms-part/#functions",
            "text": "Name  Summary      isImage  fun isImage(): Boolean    isSmil  fun isSmil(): Boolean    isText  fun isText(): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.model/-mms-part/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-mms-part/text/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \ntext\n\n\ntext\n\u00b6\n\n\nvar text:\nString\n?",
            "title": "&nbsp;qksms/data.model/-mms-part/text.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/text/#text",
            "text": "var text: String ?",
            "title": "text"
        },
        {
            "location": "/qksms/data.model/-mms-part/-init-/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMmsPart()",
            "title": "&nbsp;qksms/data.model/-mms-part/-init-.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/-init-/#init",
            "text": "MmsPart()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-text/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nisText\n\n\nisText\n\u00b6\n\n\nfun isText():\nBoolean",
            "title": "&nbsp;qksms/data.model/-mms-part/is-text.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-text/#istext",
            "text": "fun isText(): Boolean",
            "title": "isText"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-smil/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nisSmil\n\n\nisSmil\n\u00b6\n\n\nfun isSmil():\nBoolean",
            "title": "&nbsp;qksms/data.model/-mms-part/is-smil.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-smil/#issmil",
            "text": "fun isSmil(): Boolean",
            "title": "isSmil"
        },
        {
            "location": "/qksms/data.model/-mms-part/id/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nid\n\n\nid\n\u00b6\n\n\nvar id:\nLong",
            "title": "&nbsp;qksms/data.model/-mms-part/id.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/id/#id",
            "text": "var id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-image/",
            "text": "qksms\n / \ndata.model\n / \nMmsPart\n / \nisImage\n\n\nisImage\n\u00b6\n\n\nfun isImage():\nBoolean",
            "title": "&nbsp;qksms/data.model/-mms-part/is-image.md"
        },
        {
            "location": "/qksms/data.model/-mms-part/is-image/#isimage",
            "text": "fun isImage(): Boolean",
            "title": "isImage"
        },
        {
            "location": "/qksms/data.model/-message/text-content-type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ntextContentType\n\n\ntextContentType\n\u00b6\n\n\nvar textContentType:\nString",
            "title": "&nbsp;qksms/data.model/-message/text-content-type.md"
        },
        {
            "location": "/qksms/data.model/-message/text-content-type/#textcontenttype",
            "text": "var textContentType: String",
            "title": "textContentType"
        },
        {
            "location": "/qksms/data.model/-message/is-sending/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisSending\n\n\nisSending\n\u00b6\n\n\nfun isSending():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-sending.md"
        },
        {
            "location": "/qksms/data.model/-message/is-sending/#issending",
            "text": "fun isSending(): Boolean",
            "title": "isSending"
        },
        {
            "location": "/qksms/data.model/-message/type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ntype\n\n\ntype\n\u00b6\n\n\nvar type:\nString",
            "title": "&nbsp;qksms/data.model/-message/type.md"
        },
        {
            "location": "/qksms/data.model/-message/type/#type",
            "text": "var type: String",
            "title": "type"
        },
        {
            "location": "/qksms/data.model/-message/content-id/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ncontentId\n\n\ncontentId\n\u00b6\n\n\nvar contentId:\nLong",
            "title": "&nbsp;qksms/data.model/-message/content-id.md"
        },
        {
            "location": "/qksms/data.model/-message/content-id/#contentid",
            "text": "var contentId: Long",
            "title": "contentId"
        },
        {
            "location": "/qksms/data.model/-message/is-delivered/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisDelivered\n\n\nisDelivered\n\u00b6\n\n\nfun isDelivered():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-delivered.md"
        },
        {
            "location": "/qksms/data.model/-message/is-delivered/#isdelivered",
            "text": "fun isDelivered(): Boolean",
            "title": "isDelivered"
        },
        {
            "location": "/qksms/data.model/-message/box-id/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nboxId\n\n\nboxId\n\u00b6\n\n\nvar boxId:\nInt",
            "title": "&nbsp;qksms/data.model/-message/box-id.md"
        },
        {
            "location": "/qksms/data.model/-message/box-id/#boxid",
            "text": "var boxId: Int",
            "title": "boxId"
        },
        {
            "location": "/qksms/data.model/-message/delivery-status/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ndeliveryStatus\n\n\ndeliveryStatus\n\u00b6\n\n\nvar deliveryStatus:\nInt",
            "title": "&nbsp;qksms/data.model/-message/delivery-status.md"
        },
        {
            "location": "/qksms/data.model/-message/delivery-status/#deliverystatus",
            "text": "var deliveryStatus: Int",
            "title": "deliveryStatus"
        },
        {
            "location": "/qksms/data.model/-message/subject/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nsubject\n\n\nsubject\n\u00b6\n\n\nvar subject:\nString",
            "title": "&nbsp;qksms/data.model/-message/subject.md"
        },
        {
            "location": "/qksms/data.model/-message/subject/#subject",
            "text": "var subject: String",
            "title": "subject"
        },
        {
            "location": "/qksms/data.model/-message/get-uri/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ngetUri\n\n\ngetUri\n\u00b6\n\n\nfun getUri():\nUri",
            "title": "&nbsp;qksms/data.model/-message/get-uri.md"
        },
        {
            "location": "/qksms/data.model/-message/get-uri/#geturi",
            "text": "fun getUri(): Uri",
            "title": "getUri"
        },
        {
            "location": "/qksms/data.model/-message/mms-delivery-status-string/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nmmsDeliveryStatusString\n\n\nmmsDeliveryStatusString\n\u00b6\n\n\nvar mmsDeliveryStatusString:\nString",
            "title": "&nbsp;qksms/data.model/-message/mms-delivery-status-string.md"
        },
        {
            "location": "/qksms/data.model/-message/mms-delivery-status-string/#mmsdeliverystatusstring",
            "text": "var mmsDeliveryStatusString: String",
            "title": "mmsDeliveryStatusString"
        },
        {
            "location": "/qksms/data.model/-message/message-size/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nmessageSize\n\n\nmessageSize\n\u00b6\n\n\nvar messageSize:\nInt",
            "title": "&nbsp;qksms/data.model/-message/message-size.md"
        },
        {
            "location": "/qksms/data.model/-message/message-size/#messagesize",
            "text": "var messageSize: Int",
            "title": "messageSize"
        },
        {
            "location": "/qksms/data.model/-message/seen/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nseen\n\n\nseen\n\u00b6\n\n\nvar seen:\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/seen.md"
        },
        {
            "location": "/qksms/data.model/-message/seen/#seen",
            "text": "var seen: Boolean",
            "title": "seen"
        },
        {
            "location": "/qksms/data.model/-message/get-summary/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ngetSummary\n\n\ngetSummary\n\u00b6\n\n\nfun getSummary():\nString\n\n\nReturns the text that should be displayed when a preview of the message\nneeds to be displayed, such as in the conversation view or in a notification\n\n\nTODO: Don't return a hardcoded string",
            "title": "&nbsp;qksms/data.model/-message/get-summary.md"
        },
        {
            "location": "/qksms/data.model/-message/get-summary/#getsummary",
            "text": "fun getSummary(): String  Returns the text that should be displayed when a preview of the message\nneeds to be displayed, such as in the conversation view or in a notification  TODO: Don't return a hardcoded string",
            "title": "getSummary"
        },
        {
            "location": "/qksms/data.model/-message/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n\n\nMessage\n\u00b6\n\n\nopen class Message : RealmObject\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAttachmentType\n\n\nenum class AttachmentType\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessage()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nvar address:\nString\n\n\n\n\n\n\nattachmentType\n\n\nvar attachmentType:\nAttachmentType\n\n\n\n\n\n\nattachmentTypeString\n\n\nvar attachmentTypeString:\nString\n\n\n\n\n\n\nbody\n\n\nvar body:\nString\n\n\n\n\n\n\nboxId\n\n\nvar boxId:\nInt\n\n\n\n\n\n\ncontentId\n\n\nvar contentId:\nLong\n\n\n\n\n\n\ndate\n\n\nvar date:\nLong\n\n\n\n\n\n\ndateSent\n\n\nvar dateSent:\nLong\n\n\n\n\n\n\ndeliveryStatus\n\n\nvar deliveryStatus:\nInt\n\n\n\n\n\n\nerrorCode\n\n\nvar errorCode:\nInt\n\n\n\n\n\n\nerrorType\n\n\nvar errorType:\nInt\n\n\n\n\n\n\nid\n\n\nvar id:\nLong\n\n\n\n\n\n\nlocked\n\n\nvar locked:\nBoolean\n\n\n\n\n\n\nmessageSize\n\n\nvar messageSize:\nInt\n\n\n\n\n\n\nmessageType\n\n\nvar messageType:\nInt\n\n\n\n\n\n\nmmsDeliveryStatusString\n\n\nvar mmsDeliveryStatusString:\nString\n\n\n\n\n\n\nmmsStatus\n\n\nvar mmsStatus:\nInt\n\n\n\n\n\n\nparts\n\n\nvar parts: RealmList<\nMmsPart\n>\n\n\n\n\n\n\nread\n\n\nvar read:\nBoolean\n\n\n\n\n\n\nreadReportString\n\n\nvar readReportString:\nString\n\n\n\n\n\n\nseen\n\n\nvar seen:\nBoolean\n\n\n\n\n\n\nsubject\n\n\nvar subject:\nString\n\n\n\n\n\n\ntextContentType\n\n\nvar textContentType:\nString\n\n\n\n\n\n\nthreadId\n\n\nvar threadId:\nLong\n\n\n\n\n\n\ntype\n\n\nvar type:\nString\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetSummary\n\n\nfun getSummary():\nString\nReturns the text that should be displayed when a preview of the message needs to be displayed, such as in the conversation view or in a notification\n\n\n\n\n\n\ngetText\n\n\nfun getText():\nString\nReturns the text that should be displayed in the messagelist view The returned text may be an empty string\n\n\n\n\n\n\ngetUri\n\n\nfun getUri():\nUri\n\n\n\n\n\n\nisDelivered\n\n\nfun isDelivered():\nBoolean\n\n\n\n\n\n\nisFailedMessage\n\n\nfun isFailedMessage():\nBoolean\n\n\n\n\n\n\nisMe\n\n\nfun isMe():\nBoolean\n\n\n\n\n\n\nisMms\n\n\nfun isMms():\nBoolean\n\n\n\n\n\n\nisOutgoingMessage\n\n\nfun isOutgoingMessage():\nBoolean\n\n\n\n\n\n\nisSending\n\n\nfun isSending():\nBoolean\n\n\n\n\n\n\nisSms\n\n\nfun isSms():\nBoolean\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nasObservable\n\n\nfun <T : RealmObject> RealmObject.asObservable(): Observable<T>\n\n\n\n\n\n\ninsertOrUpdate\n\n\nfun RealmModel.insertOrUpdate():\nUnit",
            "title": "&nbsp;qksms/data.model/-message/index.md"
        },
        {
            "location": "/qksms/data.model/-message/#message",
            "text": "open class Message : RealmObject",
            "title": "Message"
        },
        {
            "location": "/qksms/data.model/-message/#types",
            "text": "Name  Summary      AttachmentType  enum class AttachmentType",
            "title": "Types"
        },
        {
            "location": "/qksms/data.model/-message/#constructors",
            "text": "Name  Summary      <init>  Message()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-message/#properties",
            "text": "Name  Summary      address  var address: String    attachmentType  var attachmentType: AttachmentType    attachmentTypeString  var attachmentTypeString: String    body  var body: String    boxId  var boxId: Int    contentId  var contentId: Long    date  var date: Long    dateSent  var dateSent: Long    deliveryStatus  var deliveryStatus: Int    errorCode  var errorCode: Int    errorType  var errorType: Int    id  var id: Long    locked  var locked: Boolean    messageSize  var messageSize: Int    messageType  var messageType: Int    mmsDeliveryStatusString  var mmsDeliveryStatusString: String    mmsStatus  var mmsStatus: Int    parts  var parts: RealmList< MmsPart >    read  var read: Boolean    readReportString  var readReportString: String    seen  var seen: Boolean    subject  var subject: String    textContentType  var textContentType: String    threadId  var threadId: Long    type  var type: String",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-message/#functions",
            "text": "Name  Summary      getSummary  fun getSummary(): String Returns the text that should be displayed when a preview of the message needs to be displayed, such as in the conversation view or in a notification    getText  fun getText(): String Returns the text that should be displayed in the messagelist view The returned text may be an empty string    getUri  fun getUri(): Uri    isDelivered  fun isDelivered(): Boolean    isFailedMessage  fun isFailedMessage(): Boolean    isMe  fun isMe(): Boolean    isMms  fun isMms(): Boolean    isOutgoingMessage  fun isOutgoingMessage(): Boolean    isSending  fun isSending(): Boolean    isSms  fun isSms(): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.model/-message/#extension-functions",
            "text": "Name  Summary      asObservable  fun <T : RealmObject> RealmObject.asObservable(): Observable<T>    insertOrUpdate  fun RealmModel.insertOrUpdate(): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/data.model/-message/body/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nbody\n\n\nbody\n\u00b6\n\n\nvar body:\nString",
            "title": "&nbsp;qksms/data.model/-message/body.md"
        },
        {
            "location": "/qksms/data.model/-message/body/#body",
            "text": "var body: String",
            "title": "body"
        },
        {
            "location": "/qksms/data.model/-message/is-failed-message/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisFailedMessage\n\n\nisFailedMessage\n\u00b6\n\n\nfun isFailedMessage():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-failed-message.md"
        },
        {
            "location": "/qksms/data.model/-message/is-failed-message/#isfailedmessage",
            "text": "fun isFailedMessage(): Boolean",
            "title": "isFailedMessage"
        },
        {
            "location": "/qksms/data.model/-message/parts/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nparts\n\n\nparts\n\u00b6\n\n\nvar parts: RealmList<\nMmsPart\n>",
            "title": "&nbsp;qksms/data.model/-message/parts.md"
        },
        {
            "location": "/qksms/data.model/-message/parts/#parts",
            "text": "var parts: RealmList< MmsPart >",
            "title": "parts"
        },
        {
            "location": "/qksms/data.model/-message/error-code/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nerrorCode\n\n\nerrorCode\n\u00b6\n\n\nvar errorCode:\nInt",
            "title": "&nbsp;qksms/data.model/-message/error-code.md"
        },
        {
            "location": "/qksms/data.model/-message/error-code/#errorcode",
            "text": "var errorCode: Int",
            "title": "errorCode"
        },
        {
            "location": "/qksms/data.model/-message/read/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nread\n\n\nread\n\u00b6\n\n\nvar read:\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/read.md"
        },
        {
            "location": "/qksms/data.model/-message/read/#read",
            "text": "var read: Boolean",
            "title": "read"
        },
        {
            "location": "/qksms/data.model/-message/-init-/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessage()",
            "title": "&nbsp;qksms/data.model/-message/-init-.md"
        },
        {
            "location": "/qksms/data.model/-message/-init-/#init",
            "text": "Message()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-message/attachment-type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nattachmentType\n\n\nattachmentType\n\u00b6\n\n\nvar attachmentType:\nAttachmentType",
            "title": "&nbsp;qksms/data.model/-message/attachment-type.md"
        },
        {
            "location": "/qksms/data.model/-message/attachment-type/#attachmenttype",
            "text": "var attachmentType: AttachmentType",
            "title": "attachmentType"
        },
        {
            "location": "/qksms/data.model/-message/get-text/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ngetText\n\n\ngetText\n\u00b6\n\n\nfun getText():\nString\n\n\nReturns the text that should be displayed in the messagelist view\nThe returned text may be an empty string",
            "title": "&nbsp;qksms/data.model/-message/get-text.md"
        },
        {
            "location": "/qksms/data.model/-message/get-text/#gettext",
            "text": "fun getText(): String  Returns the text that should be displayed in the messagelist view\nThe returned text may be an empty string",
            "title": "getText"
        },
        {
            "location": "/qksms/data.model/-message/is-sms/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisSms\n\n\nisSms\n\u00b6\n\n\nfun isSms():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-sms.md"
        },
        {
            "location": "/qksms/data.model/-message/is-sms/#issms",
            "text": "fun isSms(): Boolean",
            "title": "isSms"
        },
        {
            "location": "/qksms/data.model/-message/address/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \naddress\n\n\naddress\n\u00b6\n\n\nvar address:\nString",
            "title": "&nbsp;qksms/data.model/-message/address.md"
        },
        {
            "location": "/qksms/data.model/-message/address/#address",
            "text": "var address: String",
            "title": "address"
        },
        {
            "location": "/qksms/data.model/-message/is-me/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisMe\n\n\nisMe\n\u00b6\n\n\nfun isMe():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-me.md"
        },
        {
            "location": "/qksms/data.model/-message/is-me/#isme",
            "text": "fun isMe(): Boolean",
            "title": "isMe"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-s-l-i-d-e-s-h-o-w/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nSLIDESHOW\n\n\nSLIDESHOW\n\u00b6\n\n\nSLIDESHOW",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-s-l-i-d-e-s-h-o-w.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-s-l-i-d-e-s-h-o-w/#slideshow",
            "text": "SLIDESHOW",
            "title": "SLIDESHOW"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-a-u-d-i-o/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nAUDIO\n\n\nAUDIO\n\u00b6\n\n\nAUDIO",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-a-u-d-i-o.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-a-u-d-i-o/#audio",
            "text": "AUDIO",
            "title": "AUDIO"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-i-m-a-g-e/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nIMAGE\n\n\nIMAGE\n\u00b6\n\n\nIMAGE",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-i-m-a-g-e.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-i-m-a-g-e/#image",
            "text": "IMAGE",
            "title": "IMAGE"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n\n\nAttachmentType\n\u00b6\n\n\nenum class AttachmentType\n\n\nEnum Values\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nTEXT\n\n\n\n\n\n\n\n\nIMAGE\n\n\n\n\n\n\n\n\nVIDEO\n\n\n\n\n\n\n\n\nAUDIO\n\n\n\n\n\n\n\n\nSLIDESHOW\n\n\n\n\n\n\n\n\nNOT_LOADED",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/index.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/#attachmenttype",
            "text": "enum class AttachmentType",
            "title": "AttachmentType"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/#enum-values",
            "text": "Name  Summary      TEXT     IMAGE     VIDEO     AUDIO     SLIDESHOW     NOT_LOADED",
            "title": "Enum Values"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-n-o-t_-l-o-a-d-e-d/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nNOT_LOADED\n\n\nNOT_LOADED\n\u00b6\n\n\nNOT_LOADED",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-n-o-t_-l-o-a-d-e-d.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-n-o-t_-l-o-a-d-e-d/#not_loaded",
            "text": "NOT_LOADED",
            "title": "NOT_LOADED"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-t-e-x-t/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nTEXT\n\n\nTEXT\n\u00b6\n\n\nTEXT",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-t-e-x-t.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-t-e-x-t/#text",
            "text": "TEXT",
            "title": "TEXT"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-v-i-d-e-o/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nAttachmentType\n / \nVIDEO\n\n\nVIDEO\n\u00b6\n\n\nVIDEO",
            "title": "&nbsp;qksms/data.model/-message/-attachment-type/-v-i-d-e-o.md"
        },
        {
            "location": "/qksms/data.model/-message/-attachment-type/-v-i-d-e-o/#video",
            "text": "VIDEO",
            "title": "VIDEO"
        },
        {
            "location": "/qksms/data.model/-message/is-mms/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisMms\n\n\nisMms\n\u00b6\n\n\nfun isMms():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-mms.md"
        },
        {
            "location": "/qksms/data.model/-message/is-mms/#ismms",
            "text": "fun isMms(): Boolean",
            "title": "isMms"
        },
        {
            "location": "/qksms/data.model/-message/message-type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nmessageType\n\n\nmessageType\n\u00b6\n\n\nvar messageType:\nInt",
            "title": "&nbsp;qksms/data.model/-message/message-type.md"
        },
        {
            "location": "/qksms/data.model/-message/message-type/#messagetype",
            "text": "var messageType: Int",
            "title": "messageType"
        },
        {
            "location": "/qksms/data.model/-message/date-sent/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ndateSent\n\n\ndateSent\n\u00b6\n\n\nvar dateSent:\nLong",
            "title": "&nbsp;qksms/data.model/-message/date-sent.md"
        },
        {
            "location": "/qksms/data.model/-message/date-sent/#datesent",
            "text": "var dateSent: Long",
            "title": "dateSent"
        },
        {
            "location": "/qksms/data.model/-message/date/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \ndate\n\n\ndate\n\u00b6\n\n\nvar date:\nLong",
            "title": "&nbsp;qksms/data.model/-message/date.md"
        },
        {
            "location": "/qksms/data.model/-message/date/#date",
            "text": "var date: Long",
            "title": "date"
        },
        {
            "location": "/qksms/data.model/-message/read-report-string/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nreadReportString\n\n\nreadReportString\n\u00b6\n\n\nvar readReportString:\nString",
            "title": "&nbsp;qksms/data.model/-message/read-report-string.md"
        },
        {
            "location": "/qksms/data.model/-message/read-report-string/#readreportstring",
            "text": "var readReportString: String",
            "title": "readReportString"
        },
        {
            "location": "/qksms/data.model/-message/thread-id/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nthreadId\n\n\nthreadId\n\u00b6\n\n\nvar threadId:\nLong",
            "title": "&nbsp;qksms/data.model/-message/thread-id.md"
        },
        {
            "location": "/qksms/data.model/-message/thread-id/#threadid",
            "text": "var threadId: Long",
            "title": "threadId"
        },
        {
            "location": "/qksms/data.model/-message/locked/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nlocked\n\n\nlocked\n\u00b6\n\n\nvar locked:\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/locked.md"
        },
        {
            "location": "/qksms/data.model/-message/locked/#locked",
            "text": "var locked: Boolean",
            "title": "locked"
        },
        {
            "location": "/qksms/data.model/-message/mms-status/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nmmsStatus\n\n\nmmsStatus\n\u00b6\n\n\nvar mmsStatus:\nInt",
            "title": "&nbsp;qksms/data.model/-message/mms-status.md"
        },
        {
            "location": "/qksms/data.model/-message/mms-status/#mmsstatus",
            "text": "var mmsStatus: Int",
            "title": "mmsStatus"
        },
        {
            "location": "/qksms/data.model/-message/id/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nid\n\n\nid\n\u00b6\n\n\nvar id:\nLong",
            "title": "&nbsp;qksms/data.model/-message/id.md"
        },
        {
            "location": "/qksms/data.model/-message/id/#id",
            "text": "var id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/data.model/-message/is-outgoing-message/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nisOutgoingMessage\n\n\nisOutgoingMessage\n\u00b6\n\n\nfun isOutgoingMessage():\nBoolean",
            "title": "&nbsp;qksms/data.model/-message/is-outgoing-message.md"
        },
        {
            "location": "/qksms/data.model/-message/is-outgoing-message/#isoutgoingmessage",
            "text": "fun isOutgoingMessage(): Boolean",
            "title": "isOutgoingMessage"
        },
        {
            "location": "/qksms/data.model/-message/error-type/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nerrorType\n\n\nerrorType\n\u00b6\n\n\nvar errorType:\nInt",
            "title": "&nbsp;qksms/data.model/-message/error-type.md"
        },
        {
            "location": "/qksms/data.model/-message/error-type/#errortype",
            "text": "var errorType: Int",
            "title": "errorType"
        },
        {
            "location": "/qksms/data.model/-message/attachment-type-string/",
            "text": "qksms\n / \ndata.model\n / \nMessage\n / \nattachmentTypeString\n\n\nattachmentTypeString\n\u00b6\n\n\nvar attachmentTypeString:\nString",
            "title": "&nbsp;qksms/data.model/-message/attachment-type-string.md"
        },
        {
            "location": "/qksms/data.model/-message/attachment-type-string/#attachmenttypestring",
            "text": "var attachmentTypeString: String",
            "title": "attachmentTypeString"
        },
        {
            "location": "/qksms/data.model/-inbox-item/message/",
            "text": "qksms\n / \ndata.model\n / \nInboxItem\n / \nmessage\n\n\nmessage\n\u00b6\n\n\nval message:\nMessage",
            "title": "&nbsp;qksms/data.model/-inbox-item/message.md"
        },
        {
            "location": "/qksms/data.model/-inbox-item/message/#message",
            "text": "val message: Message",
            "title": "message"
        },
        {
            "location": "/qksms/data.model/-inbox-item/",
            "text": "qksms\n / \ndata.model\n / \nInboxItem\n\n\nInboxItem\n\u00b6\n\n\ndata class InboxItem\n\n\nGroups a conversation with its latest message into a single model\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nInboxItem(conversation:\nConversation\n, message:\nMessage\n)\nGroups a conversation with its latest message into a single model\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nconversation\n\n\nval conversation:\nConversation\n\n\n\n\n\n\nmessage\n\n\nval message:\nMessage",
            "title": "&nbsp;qksms/data.model/-inbox-item/index.md"
        },
        {
            "location": "/qksms/data.model/-inbox-item/#inboxitem",
            "text": "data class InboxItem  Groups a conversation with its latest message into a single model",
            "title": "InboxItem"
        },
        {
            "location": "/qksms/data.model/-inbox-item/#constructors",
            "text": "Name  Summary      <init>  InboxItem(conversation: Conversation , message: Message ) Groups a conversation with its latest message into a single model",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.model/-inbox-item/#properties",
            "text": "Name  Summary      conversation  val conversation: Conversation    message  val message: Message",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.model/-inbox-item/-init-/",
            "text": "qksms\n / \ndata.model\n / \nInboxItem\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nInboxItem(conversation:\nConversation\n, message:\nMessage\n)\n\n\nGroups a conversation with its latest message into a single model",
            "title": "&nbsp;qksms/data.model/-inbox-item/-init-.md"
        },
        {
            "location": "/qksms/data.model/-inbox-item/-init-/#init",
            "text": "InboxItem(conversation: Conversation , message: Message )  Groups a conversation with its latest message into a single model",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.model/-inbox-item/conversation/",
            "text": "qksms\n / \ndata.model\n / \nInboxItem\n / \nconversation\n\n\nconversation\n\u00b6\n\n\nval conversation:\nConversation",
            "title": "&nbsp;qksms/data.model/-inbox-item/conversation.md"
        },
        {
            "location": "/qksms/data.model/-inbox-item/conversation/#conversation",
            "text": "val conversation: Conversation",
            "title": "conversation"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/-c-o-n-t-e-n-t_-u-r-i/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToPart\n / \nCONTENT_URI\n\n\nCONTENT_URI\n\u00b6\n\n\nval CONTENT_URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-part/-c-o-n-t-e-n-t_-u-r-i.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/-c-o-n-t-e-n-t_-u-r-i/#content_uri",
            "text": "val CONTENT_URI: Uri",
            "title": "CONTENT_URI"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToPart\n\n\nCursorToPart\n\u00b6\n\n\nclass CursorToPart :\nMapper\n<\nCursor\n,\nMmsPart\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nCursorToPart(context:\nContext\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nfun map(from:\nCursor\n):\nMmsPart\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nCONTENT_URI\n\n\nval CONTENT_URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-part/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/#cursortopart",
            "text": "class CursorToPart : Mapper < Cursor , MmsPart >",
            "title": "CursorToPart"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/#constructors",
            "text": "Name  Summary      <init>  CursorToPart(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/#functions",
            "text": "Name  Summary      map  fun map(from: Cursor ): MmsPart",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/#companion-object-properties",
            "text": "Name  Summary      CONTENT_URI  val CONTENT_URI: Uri",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/map/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToPart\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun map(from:\nCursor\n):\nMmsPart",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-part/map.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/map/#map",
            "text": "fun map(from: Cursor ): MmsPart",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToPart\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nCursorToPart(context:\nContext\n)",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-part/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-part/-init-/#init",
            "text": "CursorToPart(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-r-e-c-i-p-i-e-n-t_-i-d-s/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \nRECIPIENT_IDS\n\n\nRECIPIENT_IDS\n\u00b6\n\n\nval RECIPIENT_IDS:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/-r-e-c-i-p-i-e-n-t_-i-d-s.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-r-e-c-i-p-i-e-n-t_-i-d-s/#recipient_ids",
            "text": "val RECIPIENT_IDS: Int",
            "title": "RECIPIENT_IDS"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-i-d/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \nID\n\n\nID\n\u00b6\n\n\nval ID:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/-i-d.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-i-d/#id",
            "text": "val ID: Int",
            "title": "ID"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-p-r-o-j-e-c-t-i-o-n/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \nPROJECTION\n\n\nPROJECTION\n\u00b6\n\n\nval PROJECTION:\nArray\n<\nString\n>",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/-p-r-o-j-e-c-t-i-o-n.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-p-r-o-j-e-c-t-i-o-n/#projection",
            "text": "val PROJECTION: Array < String >",
            "title": "PROJECTION"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n\n\nCursorToConversation\n\u00b6\n\n\nclass CursorToConversation :\nMapper\n<\nCursor\n,\nConversation\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nCursorToConversation()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nfun map(from:\nCursor\n):\nConversation\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nID\n\n\nval ID:\nInt\n\n\n\n\n\n\nPROJECTION\n\n\nval PROJECTION:\nArray\n<\nString\n>\n\n\n\n\n\n\nRECIPIENT_IDS\n\n\nval RECIPIENT_IDS:\nInt\n\n\n\n\n\n\nURI\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/#cursortoconversation",
            "text": "class CursorToConversation : Mapper < Cursor , Conversation >",
            "title": "CursorToConversation"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/#constructors",
            "text": "Name  Summary      <init>  CursorToConversation()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/#functions",
            "text": "Name  Summary      map  fun map(from: Cursor ): Conversation",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/#companion-object-properties",
            "text": "Name  Summary      ID  val ID: Int    PROJECTION  val PROJECTION: Array < String >    RECIPIENT_IDS  val RECIPIENT_IDS: Int    URI  val URI: Uri",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/map/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun map(from:\nCursor\n):\nConversation",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/map.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/map/#map",
            "text": "fun map(from: Cursor ): Conversation",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nCursorToConversation()",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-init-/#init",
            "text": "CursorToConversation()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-u-r-i/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToConversation\n / \nURI\n\n\nURI\n\u00b6\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-conversation/-u-r-i.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-conversation/-u-r-i/#uri",
            "text": "val URI: Uri",
            "title": "URI"
        },
        {
            "location": "/qksms/data.mapper/",
            "text": "qksms\n / \ndata.mapper\n\n\nPackage data.mapper\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nCursorToContact\n\n\nclass CursorToContact :\nMapper\n<\nCursor\n,\nContact\n>\n\n\n\n\n\n\nCursorToConversation\n\n\nclass CursorToConversation :\nMapper\n<\nCursor\n,\nConversation\n>\n\n\n\n\n\n\nCursorToMessage\n\n\nclass CursorToMessage :\nMapper\n<\nPair\n<\nCursor\n,\nMessageColumns\n>,\nMessage\n>\n\n\n\n\n\n\nCursorToPart\n\n\nclass CursorToPart :\nMapper\n<\nCursor\n,\nMmsPart\n>\n\n\n\n\n\n\nCursorToRecipient\n\n\nclass CursorToRecipient :\nMapper\n<\nCursor\n,\nRecipient\n>\n\n\n\n\n\n\nMapper\n\n\ninterface Mapper<in From, out To>",
            "title": "&nbsp;qksms/data.mapper/index.md"
        },
        {
            "location": "/qksms/data.mapper/#package-datamapper",
            "text": "",
            "title": "Package data.mapper"
        },
        {
            "location": "/qksms/data.mapper/#types",
            "text": "Name  Summary      CursorToContact  class CursorToContact : Mapper < Cursor , Contact >    CursorToConversation  class CursorToConversation : Mapper < Cursor , Conversation >    CursorToMessage  class CursorToMessage : Mapper < Pair < Cursor , MessageColumns >, Message >    CursorToPart  class CursorToPart : Mapper < Cursor , MmsPart >    CursorToRecipient  class CursorToRecipient : Mapper < Cursor , Recipient >    Mapper  interface Mapper<in From, out To>",
            "title": "Types"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-i-d/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n / \nCOLUMN_ID\n\n\nCOLUMN_ID\n\u00b6\n\n\nval COLUMN_ID:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-i-d.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-i-d/#column_id",
            "text": "val COLUMN_ID: Int",
            "title": "COLUMN_ID"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-a-d-d-r-e-s-s/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n / \nCOLUMN_ADDRESS\n\n\nCOLUMN_ADDRESS\n\u00b6\n\n\nval COLUMN_ADDRESS:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-a-d-d-r-e-s-s.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-c-o-l-u-m-n_-a-d-d-r-e-s-s/#column_address",
            "text": "val COLUMN_ADDRESS: Int",
            "title": "COLUMN_ADDRESS"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n\n\nCursorToRecipient\n\u00b6\n\n\nclass CursorToRecipient :\nMapper\n<\nCursor\n,\nRecipient\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nCursorToRecipient(contactRepository:\nContactRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nfun map(from:\nCursor\n):\nRecipient\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nCOLUMN_ADDRESS\n\n\nval COLUMN_ADDRESS:\nInt\n\n\n\n\n\n\nCOLUMN_ID\n\n\nval COLUMN_ID:\nInt\n\n\n\n\n\n\nURI\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/#cursortorecipient",
            "text": "class CursorToRecipient : Mapper < Cursor , Recipient >",
            "title": "CursorToRecipient"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/#constructors",
            "text": "Name  Summary      <init>  CursorToRecipient(contactRepository: ContactRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/#functions",
            "text": "Name  Summary      map  fun map(from: Cursor ): Recipient",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/#companion-object-properties",
            "text": "Name  Summary      COLUMN_ADDRESS  val COLUMN_ADDRESS: Int    COLUMN_ID  val COLUMN_ID: Int    URI  val URI: Uri",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/map/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun map(from:\nCursor\n):\nRecipient",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/map.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/map/#map",
            "text": "fun map(from: Cursor ): Recipient",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nCursorToRecipient(contactRepository:\nContactRepository\n)",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-init-/#init",
            "text": "CursorToRecipient(contactRepository: ContactRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-u-r-i/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToRecipient\n / \nURI\n\n\nURI\n\u00b6\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-recipient/-u-r-i.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-recipient/-u-r-i/#uri",
            "text": "val URI: Uri",
            "title": "URI"
        },
        {
            "location": "/qksms/data.mapper/-mapper/",
            "text": "qksms\n / \ndata.mapper\n / \nMapper\n\n\nMapper\n\u00b6\n\n\ninterface Mapper<in From, out To>\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nabstract fun map(from: From): To\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nCursorToContact\n\n\nclass CursorToContact : Mapper<\nCursor\n,\nContact\n>\n\n\n\n\n\n\nCursorToConversation\n\n\nclass CursorToConversation : Mapper<\nCursor\n,\nConversation\n>\n\n\n\n\n\n\nCursorToMessage\n\n\nclass CursorToMessage : Mapper<\nPair\n<\nCursor\n,\nMessageColumns\n>,\nMessage\n>\n\n\n\n\n\n\nCursorToPart\n\n\nclass CursorToPart : Mapper<\nCursor\n,\nMmsPart\n>\n\n\n\n\n\n\nCursorToRecipient\n\n\nclass CursorToRecipient : Mapper<\nCursor\n,\nRecipient\n>",
            "title": "&nbsp;qksms/data.mapper/-mapper/index.md"
        },
        {
            "location": "/qksms/data.mapper/-mapper/#mapper",
            "text": "interface Mapper<in From, out To>",
            "title": "Mapper"
        },
        {
            "location": "/qksms/data.mapper/-mapper/#functions",
            "text": "Name  Summary      map  abstract fun map(from: From): To",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-mapper/#inheritors",
            "text": "Name  Summary      CursorToContact  class CursorToContact : Mapper< Cursor , Contact >    CursorToConversation  class CursorToConversation : Mapper< Cursor , Conversation >    CursorToMessage  class CursorToMessage : Mapper< Pair < Cursor , MessageColumns >, Message >    CursorToPart  class CursorToPart : Mapper< Cursor , MmsPart >    CursorToRecipient  class CursorToRecipient : Mapper< Cursor , Recipient >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/data.mapper/-mapper/map/",
            "text": "qksms\n / \ndata.mapper\n / \nMapper\n / \nmap\n\n\nmap\n\u00b6\n\n\nabstract fun map(from: From): To",
            "title": "&nbsp;qksms/data.mapper/-mapper/map.md"
        },
        {
            "location": "/qksms/data.mapper/-mapper/map/#map",
            "text": "abstract fun map(from: From): To",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-n-u-m-b-e-r/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nCOLUMN_NUMBER\n\n\nCOLUMN_NUMBER\n\u00b6\n\n\nval COLUMN_NUMBER:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-n-u-m-b-e-r.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-n-u-m-b-e-r/#column_number",
            "text": "val COLUMN_NUMBER: Int",
            "title": "COLUMN_NUMBER"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-t-y-p-e/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nCOLUMN_TYPE\n\n\nCOLUMN_TYPE\n\u00b6\n\n\nval COLUMN_TYPE:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-t-y-p-e.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-t-y-p-e/#column_type",
            "text": "val COLUMN_TYPE: Int",
            "title": "COLUMN_TYPE"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-p-r-o-j-e-c-t-i-o-n/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nPROJECTION\n\n\nPROJECTION\n\u00b6\n\n\nval PROJECTION:\nArray\n<\nString\n>",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-p-r-o-j-e-c-t-i-o-n.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-p-r-o-j-e-c-t-i-o-n/#projection",
            "text": "val PROJECTION: Array < String >",
            "title": "PROJECTION"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-l-o-o-k-u-p_-k-e-y/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nCOLUMN_LOOKUP_KEY\n\n\nCOLUMN_LOOKUP_KEY\n\u00b6\n\n\nval COLUMN_LOOKUP_KEY:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-l-o-o-k-u-p_-k-e-y.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-l-o-o-k-u-p_-k-e-y/#column_lookup_key",
            "text": "val COLUMN_LOOKUP_KEY: Int",
            "title": "COLUMN_LOOKUP_KEY"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n\n\nCursorToContact\n\u00b6\n\n\nclass CursorToContact :\nMapper\n<\nCursor\n,\nContact\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nCursorToContact(context:\nContext\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nfun map(from:\nCursor\n):\nContact\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nCOLUMN_DISPLAY_NAME\n\n\nval COLUMN_DISPLAY_NAME:\nInt\n\n\n\n\n\n\nCOLUMN_LOOKUP_KEY\n\n\nval COLUMN_LOOKUP_KEY:\nInt\n\n\n\n\n\n\nCOLUMN_NUMBER\n\n\nval COLUMN_NUMBER:\nInt\n\n\n\n\n\n\nCOLUMN_TYPE\n\n\nval COLUMN_TYPE:\nInt\n\n\n\n\n\n\nPROJECTION\n\n\nval PROJECTION:\nArray\n<\nString\n>\n\n\n\n\n\n\nURI\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/#cursortocontact",
            "text": "class CursorToContact : Mapper < Cursor , Contact >",
            "title": "CursorToContact"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/#constructors",
            "text": "Name  Summary      <init>  CursorToContact(context: Context )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/#functions",
            "text": "Name  Summary      map  fun map(from: Cursor ): Contact",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/#companion-object-properties",
            "text": "Name  Summary      COLUMN_DISPLAY_NAME  val COLUMN_DISPLAY_NAME: Int    COLUMN_LOOKUP_KEY  val COLUMN_LOOKUP_KEY: Int    COLUMN_NUMBER  val COLUMN_NUMBER: Int    COLUMN_TYPE  val COLUMN_TYPE: Int    PROJECTION  val PROJECTION: Array < String >    URI  val URI: Uri",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/map/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun map(from:\nCursor\n):\nContact",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/map.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/map/#map",
            "text": "fun map(from: Cursor ): Contact",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nCursorToContact(context:\nContext\n)",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-init-/#init",
            "text": "CursorToContact(context: Context )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-d-i-s-p-l-a-y_-n-a-m-e/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nCOLUMN_DISPLAY_NAME\n\n\nCOLUMN_DISPLAY_NAME\n\u00b6\n\n\nval COLUMN_DISPLAY_NAME:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-d-i-s-p-l-a-y_-n-a-m-e.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-c-o-l-u-m-n_-d-i-s-p-l-a-y_-n-a-m-e/#column_display_name",
            "text": "val COLUMN_DISPLAY_NAME: Int",
            "title": "COLUMN_DISPLAY_NAME"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-u-r-i/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToContact\n / \nURI\n\n\nURI\n\u00b6\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-contact/-u-r-i.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-contact/-u-r-i/#uri",
            "text": "val URI: Uri",
            "title": "URI"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-p-r-o-j-e-c-t-i-o-n/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nPROJECTION\n\n\nPROJECTION\n\u00b6\n\n\nval PROJECTION:\nArray\n<\nString\n>",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-p-r-o-j-e-c-t-i-o-n.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-p-r-o-j-e-c-t-i-o-n/#projection",
            "text": "val PROJECTION: Array < String >",
            "title": "PROJECTION"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n\n\nCursorToMessage\n\u00b6\n\n\nclass CursorToMessage :\nMapper\n<\nPair\n<\nCursor\n,\nMessageColumns\n>,\nMessage\n>\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nMessageColumns\n\n\nclass MessageColumns\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nCursorToMessage(context:\nContext\n, keys:\nKeys\n, cursorToPart:\nCursorToPart\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nmap\n\n\nfun map(from:\nPair\n<\nCursor\n,\nMessageColumns\n>):\nMessage\n\n\n\n\n\n\n\n\nCompanion Object Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nPROJECTION\n\n\nval PROJECTION:\nArray\n<\nString\n>\n\n\n\n\n\n\nURI\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/#cursortomessage",
            "text": "class CursorToMessage : Mapper < Pair < Cursor , MessageColumns >, Message >",
            "title": "CursorToMessage"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/#types",
            "text": "Name  Summary      MessageColumns  class MessageColumns",
            "title": "Types"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/#constructors",
            "text": "Name  Summary      <init>  CursorToMessage(context: Context , keys: Keys , cursorToPart: CursorToPart )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/#functions",
            "text": "Name  Summary      map  fun map(from: Pair < Cursor , MessageColumns >): Message",
            "title": "Functions"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/#companion-object-properties",
            "text": "Name  Summary      PROJECTION  val PROJECTION: Array < String >    URI  val URI: Uri",
            "title": "Companion Object Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/map/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nmap\n\n\nmap\n\u00b6\n\n\nfun map(from:\nPair\n<\nCursor\n,\nMessageColumns\n>):\nMessage",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/map.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/map/#map",
            "text": "fun map(from: Pair < Cursor , MessageColumns >): Message",
            "title": "map"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nCursorToMessage(context:\nContext\n, keys:\nKeys\n, cursorToPart:\nCursorToPart\n)",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-init-/#init",
            "text": "CursorToMessage(context: Context , keys: Keys , cursorToPart: CursorToPart )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-type/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsType\n\n\nsmsType\n\u00b6\n\n\nval smsType:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-type.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-type/#smstype",
            "text": "val smsType: Int",
            "title": "smsType"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-address/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsAddress\n\n\nsmsAddress\n\u00b6\n\n\nval smsAddress:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-address.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-address/#smsaddress",
            "text": "val smsAddress: Int",
            "title": "smsAddress"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-box/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsMessageBox\n\n\nmmsMessageBox\n\u00b6\n\n\nval mmsMessageBox:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-box.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-box/#mmsmessagebox",
            "text": "val mmsMessageBox: Int",
            "title": "mmsMessageBox"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-error-type/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsErrorType\n\n\nmmsErrorType\n\u00b6\n\n\nval mmsErrorType:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-error-type.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-error-type/#mmserrortype",
            "text": "val mmsErrorType: Int",
            "title": "mmsErrorType"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-body/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsBody\n\n\nsmsBody\n\u00b6\n\n\nval smsBody:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-body.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-body/#smsbody",
            "text": "val smsBody: Int",
            "title": "smsBody"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsSubject\n\n\nmmsSubject\n\u00b6\n\n\nval mmsSubject:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject/#mmssubject",
            "text": "val mmsSubject: Int",
            "title": "mmsSubject"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-seen/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsSeen\n\n\nsmsSeen\n\u00b6\n\n\nval smsSeen:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-seen.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-seen/#smsseen",
            "text": "val smsSeen: Int",
            "title": "smsSeen"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-seen/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsSeen\n\n\nmmsSeen\n\u00b6\n\n\nval mmsSeen:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-seen.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-seen/#mmsseen",
            "text": "val mmsSeen: Int",
            "title": "mmsSeen"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n\n\nMessageColumns\n\u00b6\n\n\nclass MessageColumns\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMessageColumns(cursor:\nCursor\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndate\n\n\nval date:\nInt\n\n\n\n\n\n\ndateSent\n\n\nval dateSent:\nInt\n\n\n\n\n\n\nlocked\n\n\nval locked:\nInt\n\n\n\n\n\n\nmmsAddress\n\n\nval mmsAddress:\nInt\n\n\n\n\n\n\nmmsDeliveryReport\n\n\nval mmsDeliveryReport:\nInt\n\n\n\n\n\n\nmmsErrorType\n\n\nval mmsErrorType:\nInt\n\n\n\n\n\n\nmmsMessageBox\n\n\nval mmsMessageBox:\nInt\n\n\n\n\n\n\nmmsMessageType\n\n\nval mmsMessageType:\nInt\n\n\n\n\n\n\nmmsReadReport\n\n\nval mmsReadReport:\nInt\n\n\n\n\n\n\nmmsSeen\n\n\nval mmsSeen:\nInt\n\n\n\n\n\n\nmmsStatus\n\n\nval mmsStatus:\nInt\n\n\n\n\n\n\nmmsSubject\n\n\nval mmsSubject:\nInt\n\n\n\n\n\n\nmmsSubjectCharset\n\n\nval mmsSubjectCharset:\nInt\n\n\n\n\n\n\nmsgId\n\n\nval msgId:\nInt\n\n\n\n\n\n\nmsgType\n\n\nval msgType:\nInt\n\n\n\n\n\n\nread\n\n\nval read:\nInt\n\n\n\n\n\n\nsmsAddress\n\n\nval smsAddress:\nInt\n\n\n\n\n\n\nsmsBody\n\n\nval smsBody:\nInt\n\n\n\n\n\n\nsmsErrorCode\n\n\nval smsErrorCode:\nInt\n\n\n\n\n\n\nsmsSeen\n\n\nval smsSeen:\nInt\n\n\n\n\n\n\nsmsStatus\n\n\nval smsStatus:\nInt\n\n\n\n\n\n\nsmsType\n\n\nval smsType:\nInt\n\n\n\n\n\n\nthreadId\n\n\nval threadId:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/index.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/#messagecolumns",
            "text": "class MessageColumns",
            "title": "MessageColumns"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/#constructors",
            "text": "Name  Summary      <init>  MessageColumns(cursor: Cursor )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/#properties",
            "text": "Name  Summary      date  val date: Int    dateSent  val dateSent: Int    locked  val locked: Int    mmsAddress  val mmsAddress: Int    mmsDeliveryReport  val mmsDeliveryReport: Int    mmsErrorType  val mmsErrorType: Int    mmsMessageBox  val mmsMessageBox: Int    mmsMessageType  val mmsMessageType: Int    mmsReadReport  val mmsReadReport: Int    mmsSeen  val mmsSeen: Int    mmsStatus  val mmsStatus: Int    mmsSubject  val mmsSubject: Int    mmsSubjectCharset  val mmsSubjectCharset: Int    msgId  val msgId: Int    msgType  val msgType: Int    read  val read: Int    smsAddress  val smsAddress: Int    smsBody  val smsBody: Int    smsErrorCode  val smsErrorCode: Int    smsSeen  val smsSeen: Int    smsStatus  val smsStatus: Int    smsType  val smsType: Int    threadId  val threadId: Int",
            "title": "Properties"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-error-code/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsErrorCode\n\n\nsmsErrorCode\n\u00b6\n\n\nval smsErrorCode:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-error-code.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-error-code/#smserrorcode",
            "text": "val smsErrorCode: Int",
            "title": "smsErrorCode"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-type/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsMessageType\n\n\nmmsMessageType\n\u00b6\n\n\nval mmsMessageType:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-type.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-message-type/#mmsmessagetype",
            "text": "val mmsMessageType: Int",
            "title": "mmsMessageType"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-address/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsAddress\n\n\nmmsAddress\n\u00b6\n\n\nval mmsAddress:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-address.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-address/#mmsaddress",
            "text": "val mmsAddress: Int",
            "title": "mmsAddress"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/msg-type/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmsgType\n\n\nmsgType\n\u00b6\n\n\nval msgType:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/msg-type.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/msg-type/#msgtype",
            "text": "val msgType: Int",
            "title": "msgType"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/read/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nread\n\n\nread\n\u00b6\n\n\nval read:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/read.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/read/#read",
            "text": "val read: Int",
            "title": "read"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/-init-/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMessageColumns(cursor:\nCursor\n)",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/-init-.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/-init-/#init",
            "text": "MessageColumns(cursor: Cursor )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject-charset/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsSubjectCharset\n\n\nmmsSubjectCharset\n\u00b6\n\n\nval mmsSubjectCharset:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject-charset.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-subject-charset/#mmssubjectcharset",
            "text": "val mmsSubjectCharset: Int",
            "title": "mmsSubjectCharset"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-read-report/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsReadReport\n\n\nmmsReadReport\n\u00b6\n\n\nval mmsReadReport:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-read-report.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-read-report/#mmsreadreport",
            "text": "val mmsReadReport: Int",
            "title": "mmsReadReport"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-status/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nsmsStatus\n\n\nsmsStatus\n\u00b6\n\n\nval smsStatus:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/sms-status.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/sms-status/#smsstatus",
            "text": "val smsStatus: Int",
            "title": "smsStatus"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/msg-id/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmsgId\n\n\nmsgId\n\u00b6\n\n\nval msgId:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/msg-id.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/msg-id/#msgid",
            "text": "val msgId: Int",
            "title": "msgId"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/date-sent/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \ndateSent\n\n\ndateSent\n\u00b6\n\n\nval dateSent:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/date-sent.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/date-sent/#datesent",
            "text": "val dateSent: Int",
            "title": "dateSent"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/date/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \ndate\n\n\ndate\n\u00b6\n\n\nval date:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/date.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/date/#date",
            "text": "val date: Int",
            "title": "date"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-delivery-report/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsDeliveryReport\n\n\nmmsDeliveryReport\n\u00b6\n\n\nval mmsDeliveryReport:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-delivery-report.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-delivery-report/#mmsdeliveryreport",
            "text": "val mmsDeliveryReport: Int",
            "title": "mmsDeliveryReport"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/thread-id/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nthreadId\n\n\nthreadId\n\u00b6\n\n\nval threadId:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/thread-id.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/thread-id/#threadid",
            "text": "val threadId: Int",
            "title": "threadId"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/locked/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nlocked\n\n\nlocked\n\u00b6\n\n\nval locked:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/locked.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/locked/#locked",
            "text": "val locked: Int",
            "title": "locked"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-status/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nMessageColumns\n / \nmmsStatus\n\n\nmmsStatus\n\u00b6\n\n\nval mmsStatus:\nInt",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-message-columns/mms-status.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-message-columns/mms-status/#mmsstatus",
            "text": "val mmsStatus: Int",
            "title": "mmsStatus"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-u-r-i/",
            "text": "qksms\n / \ndata.mapper\n / \nCursorToMessage\n / \nURI\n\n\nURI\n\u00b6\n\n\nval URI:\nUri",
            "title": "&nbsp;qksms/data.mapper/-cursor-to-message/-u-r-i.md"
        },
        {
            "location": "/qksms/data.mapper/-cursor-to-message/-u-r-i/#uri",
            "text": "val URI: Uri",
            "title": "URI"
        },
        {
            "location": "/qksms/interactor/-sync-message/",
            "text": "qksms\n / \ninteractor\n / \nSyncMessage\n\n\nSyncMessage\n\u00b6\n\n\nclass SyncMessage :\nInteractor\n<\nUri\n,\nMessage\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSyncMessage(syncManager:\nSyncManager\n, messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nUri\n): Flowable<\nMessage\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-sync-message/index.md"
        },
        {
            "location": "/qksms/interactor/-sync-message/#syncmessage",
            "text": "class SyncMessage : Interactor < Uri , Message >",
            "title": "SyncMessage"
        },
        {
            "location": "/qksms/interactor/-sync-message/#constructors",
            "text": "Name  Summary      <init>  SyncMessage(syncManager: SyncManager , messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-sync-message/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Uri ): Flowable< Message >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-sync-message/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-sync-message/-init-/",
            "text": "qksms\n / \ninteractor\n / \nSyncMessage\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSyncMessage(syncManager:\nSyncManager\n, messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-sync-message/-init-.md"
        },
        {
            "location": "/qksms/interactor/-sync-message/-init-/#init",
            "text": "SyncMessage(syncManager: SyncManager , messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-sync-message/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nSyncMessage\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nUri\n): Flowable<\nMessage\n>",
            "title": "&nbsp;qksms/interactor/-sync-message/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-sync-message/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Uri ): Flowable< Message >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-full-sync/",
            "text": "qksms\n / \ninteractor\n / \nFullSync\n\n\nFullSync\n\u00b6\n\n\nclass FullSync :\nInteractor\n<\nUnit\n,\nLong\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nFullSync(syncManager:\nSyncManager\n, keys:\nKeys\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nUnit\n): Flowable<\nLong\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-full-sync/index.md"
        },
        {
            "location": "/qksms/interactor/-full-sync/#fullsync",
            "text": "class FullSync : Interactor < Unit , Long >",
            "title": "FullSync"
        },
        {
            "location": "/qksms/interactor/-full-sync/#constructors",
            "text": "Name  Summary      <init>  FullSync(syncManager: SyncManager , keys: Keys )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-full-sync/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Unit ): Flowable< Long >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-full-sync/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-full-sync/-init-/",
            "text": "qksms\n / \ninteractor\n / \nFullSync\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nFullSync(syncManager:\nSyncManager\n, keys:\nKeys\n)",
            "title": "&nbsp;qksms/interactor/-full-sync/-init-.md"
        },
        {
            "location": "/qksms/interactor/-full-sync/-init-/#init",
            "text": "FullSync(syncManager: SyncManager , keys: Keys )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-full-sync/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nFullSync\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nUnit\n): Flowable<\nLong\n>",
            "title": "&nbsp;qksms/interactor/-full-sync/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-full-sync/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Unit ): Flowable< Long >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-seen/",
            "text": "qksms\n / \ninteractor\n / \nMarkSeen\n\n\nMarkSeen\n\u00b6\n\n\nclass MarkSeen :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkSeen(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-seen/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-seen/#markseen",
            "text": "class MarkSeen : Interactor < Long , Unit >",
            "title": "MarkSeen"
        },
        {
            "location": "/qksms/interactor/-mark-seen/#constructors",
            "text": "Name  Summary      <init>  MarkSeen(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-seen/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-seen/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-seen/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkSeen\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkSeen(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-seen/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-seen/-init-/#init",
            "text": "MarkSeen(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-seen/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkSeen\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-mark-seen/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-seen/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-partial-sync/",
            "text": "qksms\n / \ninteractor\n / \nPartialSync\n\n\nPartialSync\n\u00b6\n\n\nopen class PartialSync :\nInteractor\n<\nUnit\n,\nLong\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nPartialSync(syncManager:\nSyncManager\n, permissions:\nPermissions\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nopen fun buildObservable(params:\nUnit\n): Flowable<\nLong\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-partial-sync/index.md"
        },
        {
            "location": "/qksms/interactor/-partial-sync/#partialsync",
            "text": "open class PartialSync : Interactor < Unit , Long >",
            "title": "PartialSync"
        },
        {
            "location": "/qksms/interactor/-partial-sync/#constructors",
            "text": "Name  Summary      <init>  PartialSync(syncManager: SyncManager , permissions: Permissions )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-partial-sync/#functions",
            "text": "Name  Summary      buildObservable  open fun buildObservable(params: Unit ): Flowable< Long >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-partial-sync/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-partial-sync/-init-/",
            "text": "qksms\n / \ninteractor\n / \nPartialSync\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nPartialSync(syncManager:\nSyncManager\n, permissions:\nPermissions\n)",
            "title": "&nbsp;qksms/interactor/-partial-sync/-init-.md"
        },
        {
            "location": "/qksms/interactor/-partial-sync/-init-/#init",
            "text": "PartialSync(syncManager: SyncManager , permissions: Permissions )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-partial-sync/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nPartialSync\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nopen fun buildObservable(params:\nUnit\n): Flowable<\nLong\n>",
            "title": "&nbsp;qksms/interactor/-partial-sync/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-partial-sync/build-observable/#buildobservable",
            "text": "open fun buildObservable(params: Unit ): Flowable< Long >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/",
            "text": "qksms\n / \ninteractor\n / \nMarkAllSeen\n\n\nMarkAllSeen\n\u00b6\n\n\nclass MarkAllSeen :\nInteractor\n<\nUnit\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkAllSeen(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nUnit\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-all-seen/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/#markallseen",
            "text": "class MarkAllSeen : Interactor < Unit , Unit >",
            "title": "MarkAllSeen"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/#constructors",
            "text": "Name  Summary      <init>  MarkAllSeen(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Unit ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkAllSeen\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkAllSeen(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-all-seen/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/-init-/#init",
            "text": "MarkAllSeen(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkAllSeen\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nUnit\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-mark-all-seen/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-all-seen/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Unit ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/",
            "text": "qksms\n / \ninteractor\n / \nMarkUnarchived\n\n\nMarkUnarchived\n\u00b6\n\n\nclass MarkUnarchived :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkUnarchived(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-unarchived/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/#markunarchived",
            "text": "class MarkUnarchived : Interactor < Long , Unit >",
            "title": "MarkUnarchived"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/#constructors",
            "text": "Name  Summary      <init>  MarkUnarchived(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkUnarchived\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkUnarchived(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-unarchived/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/-init-/#init",
            "text": "MarkUnarchived(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkUnarchived\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-mark-unarchived/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-unarchived/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-receive-mms/",
            "text": "qksms\n / \ninteractor\n / \nReceiveMms\n\n\nReceiveMms\n\u00b6\n\n\nclass ReceiveMms :\nInteractor\n<\nUri\n,\nConversation\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nReceiveMms(syncManager:\nSyncManager\n, messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nUri\n): Flowable<\nConversation\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-receive-mms/index.md"
        },
        {
            "location": "/qksms/interactor/-receive-mms/#receivemms",
            "text": "class ReceiveMms : Interactor < Uri , Conversation >",
            "title": "ReceiveMms"
        },
        {
            "location": "/qksms/interactor/-receive-mms/#constructors",
            "text": "Name  Summary      <init>  ReceiveMms(syncManager: SyncManager , messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-receive-mms/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Uri ): Flowable< Conversation >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-receive-mms/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-receive-mms/-init-/",
            "text": "qksms\n / \ninteractor\n / \nReceiveMms\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nReceiveMms(syncManager:\nSyncManager\n, messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)",
            "title": "&nbsp;qksms/interactor/-receive-mms/-init-.md"
        },
        {
            "location": "/qksms/interactor/-receive-mms/-init-/#init",
            "text": "ReceiveMms(syncManager: SyncManager , messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-receive-mms/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nReceiveMms\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nUri\n): Flowable<\nConversation\n>",
            "title": "&nbsp;qksms/interactor/-receive-mms/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-receive-mms/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Uri ): Flowable< Conversation >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-sent/",
            "text": "qksms\n / \ninteractor\n / \nMarkSent\n\n\nMarkSent\n\u00b6\n\n\nclass MarkSent :\nInteractor\n<\nLong\n,\nAny\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkSent(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nAny\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-sent/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-sent/#marksent",
            "text": "class MarkSent : Interactor < Long , Any >",
            "title": "MarkSent"
        },
        {
            "location": "/qksms/interactor/-mark-sent/#constructors",
            "text": "Name  Summary      <init>  MarkSent(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-sent/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Any >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-sent/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-sent/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkSent\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkSent(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-sent/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-sent/-init-/#init",
            "text": "MarkSent(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-sent/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkSent\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nAny\n>",
            "title": "&nbsp;qksms/interactor/-mark-sent/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-sent/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Any >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/",
            "text": "qksms\n / \ninteractor\n\n\nPackage interactor\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactSync\n\n\nopen class ContactSync :\nInteractor\n<\nUnit\n,\nList\n<\nContact\n>>\n\n\n\n\n\n\nDeleteConversation\n\n\nclass DeleteConversation :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nDeleteMessage\n\n\nclass DeleteMessage :\nInteractor\n<\nLong\n,\nLong\n>\n\n\n\n\n\n\nFullSync\n\n\nclass FullSync :\nInteractor\n<\nUnit\n,\nLong\n>\n\n\n\n\n\n\nInteractor\n\n\nabstract class Interactor<in Params, Result> : Disposable\n\n\n\n\n\n\nMarkAllSeen\n\n\nclass MarkAllSeen :\nInteractor\n<\nUnit\n,\nUnit\n>\n\n\n\n\n\n\nMarkArchived\n\n\nclass MarkArchived :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkDelivered\n\n\nclass MarkDelivered :\nInteractor\n<\nLong\n,\nAny\n>\n\n\n\n\n\n\nMarkDeliveryFailed\n\n\nclass MarkDeliveryFailed :\nInteractor\n<\nParams\n,\nAny\n>\n\n\n\n\n\n\nMarkFailed\n\n\nclass MarkFailed :\nInteractor\n<\nParams\n,\nAny\n>\n\n\n\n\n\n\nMarkRead\n\n\nclass MarkRead :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkSeen\n\n\nclass MarkSeen :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkSent\n\n\nclass MarkSent :\nInteractor\n<\nLong\n,\nAny\n>\n\n\n\n\n\n\nMarkUnarchived\n\n\nclass MarkUnarchived :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nPartialSync\n\n\nopen class PartialSync :\nInteractor\n<\nUnit\n,\nLong\n>\n\n\n\n\n\n\nReceiveMms\n\n\nclass ReceiveMms :\nInteractor\n<\nUri\n,\nConversation\n>\n\n\n\n\n\n\nReceiveSms\n\n\nclass ReceiveSms :\nInteractor\n<\nArray\n<\nSmsMessage\n>,\nConversation\n>\n\n\n\n\n\n\nSendMessage\n\n\nclass SendMessage :\nInteractor\n<\nParams\n,\nUnit\n>\n\n\n\n\n\n\nSyncMessage\n\n\nclass SyncMessage :\nInteractor\n<\nUri\n,\nMessage\n>",
            "title": "&nbsp;qksms/interactor/index.md"
        },
        {
            "location": "/qksms/interactor/#package-interactor",
            "text": "",
            "title": "Package interactor"
        },
        {
            "location": "/qksms/interactor/#types",
            "text": "Name  Summary      ContactSync  open class ContactSync : Interactor < Unit , List < Contact >>    DeleteConversation  class DeleteConversation : Interactor < Long , Unit >    DeleteMessage  class DeleteMessage : Interactor < Long , Long >    FullSync  class FullSync : Interactor < Unit , Long >    Interactor  abstract class Interactor<in Params, Result> : Disposable    MarkAllSeen  class MarkAllSeen : Interactor < Unit , Unit >    MarkArchived  class MarkArchived : Interactor < Long , Unit >    MarkDelivered  class MarkDelivered : Interactor < Long , Any >    MarkDeliveryFailed  class MarkDeliveryFailed : Interactor < Params , Any >    MarkFailed  class MarkFailed : Interactor < Params , Any >    MarkRead  class MarkRead : Interactor < Long , Unit >    MarkSeen  class MarkSeen : Interactor < Long , Unit >    MarkSent  class MarkSent : Interactor < Long , Any >    MarkUnarchived  class MarkUnarchived : Interactor < Long , Unit >    PartialSync  open class PartialSync : Interactor < Unit , Long >    ReceiveMms  class ReceiveMms : Interactor < Uri , Conversation >    ReceiveSms  class ReceiveSms : Interactor < Array < SmsMessage >, Conversation >    SendMessage  class SendMessage : Interactor < Params , Unit >    SyncMessage  class SyncMessage : Interactor < Uri , Message >",
            "title": "Types"
        },
        {
            "location": "/qksms/interactor/-mark-archived/",
            "text": "qksms\n / \ninteractor\n / \nMarkArchived\n\n\nMarkArchived\n\u00b6\n\n\nclass MarkArchived :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkArchived(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-archived/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-archived/#markarchived",
            "text": "class MarkArchived : Interactor < Long , Unit >",
            "title": "MarkArchived"
        },
        {
            "location": "/qksms/interactor/-mark-archived/#constructors",
            "text": "Name  Summary      <init>  MarkArchived(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-archived/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-archived/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-archived/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkArchived\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkArchived(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-archived/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-archived/-init-/#init",
            "text": "MarkArchived(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-archived/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkArchived\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-mark-archived/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-archived/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-failed/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n\n\nMarkFailed\n\u00b6\n\n\nclass MarkFailed :\nInteractor\n<\nParams\n,\nAny\n>\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nParams\n\n\ndata class Params\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkFailed(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nAny\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-failed/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/#markfailed",
            "text": "class MarkFailed : Interactor < Params , Any >",
            "title": "MarkFailed"
        },
        {
            "location": "/qksms/interactor/-mark-failed/#types",
            "text": "Name  Summary      Params  data class Params",
            "title": "Types"
        },
        {
            "location": "/qksms/interactor/-mark-failed/#constructors",
            "text": "Name  Summary      <init>  MarkFailed(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-failed/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Params ): Flowable< Any >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-failed/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkFailed(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-failed/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-init-/#init",
            "text": "MarkFailed(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/result-code/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \nParams\n / \nresultCode\n\n\nresultCode\n\u00b6\n\n\nval resultCode:\nInt",
            "title": "&nbsp;qksms/interactor/-mark-failed/-params/result-code.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/result-code/#resultcode",
            "text": "val resultCode: Int",
            "title": "resultCode"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \nParams\n\n\nParams\n\u00b6\n\n\ndata class Params\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nParams(id:\nLong\n, resultCode:\nInt\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nid\n\n\nval id:\nLong\n\n\n\n\n\n\nresultCode\n\n\nval resultCode:\nInt",
            "title": "&nbsp;qksms/interactor/-mark-failed/-params/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/#params",
            "text": "data class Params",
            "title": "Params"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/#constructors",
            "text": "Name  Summary      <init>  Params(id: Long , resultCode: Int )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/#properties",
            "text": "Name  Summary      id  val id: Long    resultCode  val resultCode: Int",
            "title": "Properties"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \nParams\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nParams(id:\nLong\n, resultCode:\nInt\n)",
            "title": "&nbsp;qksms/interactor/-mark-failed/-params/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/-init-/#init",
            "text": "Params(id: Long , resultCode: Int )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/id/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \nParams\n / \nid\n\n\nid\n\u00b6\n\n\nval id:\nLong",
            "title": "&nbsp;qksms/interactor/-mark-failed/-params/id.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/-params/id/#id",
            "text": "val id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/interactor/-mark-failed/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkFailed\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nAny\n>",
            "title": "&nbsp;qksms/interactor/-mark-failed/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-failed/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Params ): Flowable< Any >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-receive-sms/",
            "text": "qksms\n / \ninteractor\n / \nReceiveSms\n\n\nReceiveSms\n\u00b6\n\n\nclass ReceiveSms :\nInteractor\n<\nArray\n<\nSmsMessage\n>,\nConversation\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nReceiveSms(messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nArray\n<\nSmsMessage\n>): Flowable<\nConversation\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-receive-sms/index.md"
        },
        {
            "location": "/qksms/interactor/-receive-sms/#receivesms",
            "text": "class ReceiveSms : Interactor < Array < SmsMessage >, Conversation >",
            "title": "ReceiveSms"
        },
        {
            "location": "/qksms/interactor/-receive-sms/#constructors",
            "text": "Name  Summary      <init>  ReceiveSms(messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-receive-sms/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Array < SmsMessage >): Flowable< Conversation >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-receive-sms/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-receive-sms/-init-/",
            "text": "qksms\n / \ninteractor\n / \nReceiveSms\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nReceiveSms(messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)",
            "title": "&nbsp;qksms/interactor/-receive-sms/-init-.md"
        },
        {
            "location": "/qksms/interactor/-receive-sms/-init-/#init",
            "text": "ReceiveSms(messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-receive-sms/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nReceiveSms\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nArray\n<\nSmsMessage\n>): Flowable<\nConversation\n>",
            "title": "&nbsp;qksms/interactor/-receive-sms/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-receive-sms/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Array < SmsMessage >): Flowable< Conversation >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-interactor/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n\n\nInteractor\n\u00b6\n\n\nabstract class Interactor<in Params, Result> : Disposable\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nInteractor()\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nabstract fun buildObservable(params: Params): Flowable<Result>\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nexecute\n\n\nfun execute(params: Params, observer: (Result) ->\nUnit\n= {}):\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nContactSync\n\n\nopen class ContactSync : Interactor<\nUnit\n,\nList\n<\nContact\n>>\n\n\n\n\n\n\nDeleteConversation\n\n\nclass DeleteConversation : Interactor<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nDeleteMessage\n\n\nclass DeleteMessage : Interactor<\nLong\n,\nLong\n>\n\n\n\n\n\n\nFullSync\n\n\nclass FullSync : Interactor<\nUnit\n,\nLong\n>\n\n\n\n\n\n\nMarkAllSeen\n\n\nclass MarkAllSeen : Interactor<\nUnit\n,\nUnit\n>\n\n\n\n\n\n\nMarkArchived\n\n\nclass MarkArchived : Interactor<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkDelivered\n\n\nclass MarkDelivered : Interactor<\nLong\n,\nAny\n>\n\n\n\n\n\n\nMarkDeliveryFailed\n\n\nclass MarkDeliveryFailed : Interactor<\nParams\n,\nAny\n>\n\n\n\n\n\n\nMarkFailed\n\n\nclass MarkFailed : Interactor<\nParams\n,\nAny\n>\n\n\n\n\n\n\nMarkRead\n\n\nclass MarkRead : Interactor<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkSeen\n\n\nclass MarkSeen : Interactor<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nMarkSent\n\n\nclass MarkSent : Interactor<\nLong\n,\nAny\n>\n\n\n\n\n\n\nMarkUnarchived\n\n\nclass MarkUnarchived : Interactor<\nLong\n,\nUnit\n>\n\n\n\n\n\n\nPartialSync\n\n\nopen class PartialSync : Interactor<\nUnit\n,\nLong\n>\n\n\n\n\n\n\nReceiveMms\n\n\nclass ReceiveMms : Interactor<\nUri\n,\nConversation\n>\n\n\n\n\n\n\nReceiveSms\n\n\nclass ReceiveSms : Interactor<\nArray\n<\nSmsMessage\n>,\nConversation\n>\n\n\n\n\n\n\nSendMessage\n\n\nclass SendMessage : Interactor<\nParams\n,\nUnit\n>\n\n\n\n\n\n\nSyncMessage\n\n\nclass SyncMessage : Interactor<\nUri\n,\nMessage\n>",
            "title": "&nbsp;qksms/interactor/-interactor/index.md"
        },
        {
            "location": "/qksms/interactor/-interactor/#interactor",
            "text": "abstract class Interactor<in Params, Result> : Disposable",
            "title": "Interactor"
        },
        {
            "location": "/qksms/interactor/-interactor/#constructors",
            "text": "Name  Summary      <init>  Interactor()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-interactor/#functions",
            "text": "Name  Summary      buildObservable  abstract fun buildObservable(params: Params): Flowable<Result>    dispose  open fun dispose(): Unit    execute  fun execute(params: Params, observer: (Result) -> Unit = {}): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-interactor/#inheritors",
            "text": "Name  Summary      ContactSync  open class ContactSync : Interactor< Unit , List < Contact >>    DeleteConversation  class DeleteConversation : Interactor< Long , Unit >    DeleteMessage  class DeleteMessage : Interactor< Long , Long >    FullSync  class FullSync : Interactor< Unit , Long >    MarkAllSeen  class MarkAllSeen : Interactor< Unit , Unit >    MarkArchived  class MarkArchived : Interactor< Long , Unit >    MarkDelivered  class MarkDelivered : Interactor< Long , Any >    MarkDeliveryFailed  class MarkDeliveryFailed : Interactor< Params , Any >    MarkFailed  class MarkFailed : Interactor< Params , Any >    MarkRead  class MarkRead : Interactor< Long , Unit >    MarkSeen  class MarkSeen : Interactor< Long , Unit >    MarkSent  class MarkSent : Interactor< Long , Any >    MarkUnarchived  class MarkUnarchived : Interactor< Long , Unit >    PartialSync  open class PartialSync : Interactor< Unit , Long >    ReceiveMms  class ReceiveMms : Interactor< Uri , Conversation >    ReceiveSms  class ReceiveSms : Interactor< Array < SmsMessage >, Conversation >    SendMessage  class SendMessage : Interactor< Params , Unit >    SyncMessage  class SyncMessage : Interactor< Uri , Message >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/interactor/-interactor/-init-/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nInteractor()",
            "title": "&nbsp;qksms/interactor/-interactor/-init-.md"
        },
        {
            "location": "/qksms/interactor/-interactor/-init-/#init",
            "text": "Interactor()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-interactor/dispose/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n / \ndispose\n\n\ndispose\n\u00b6\n\n\nopen fun dispose():\nUnit",
            "title": "&nbsp;qksms/interactor/-interactor/dispose.md"
        },
        {
            "location": "/qksms/interactor/-interactor/dispose/#dispose",
            "text": "open fun dispose(): Unit",
            "title": "dispose"
        },
        {
            "location": "/qksms/interactor/-interactor/execute/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n / \nexecute\n\n\nexecute\n\u00b6\n\n\nfun execute(params: Params, observer: (Result) ->\nUnit\n= {}):\nUnit",
            "title": "&nbsp;qksms/interactor/-interactor/execute.md"
        },
        {
            "location": "/qksms/interactor/-interactor/execute/#execute",
            "text": "fun execute(params: Params, observer: (Result) -> Unit = {}): Unit",
            "title": "execute"
        },
        {
            "location": "/qksms/interactor/-interactor/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nabstract fun buildObservable(params: Params): Flowable<Result>",
            "title": "&nbsp;qksms/interactor/-interactor/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-interactor/build-observable/#buildobservable",
            "text": "abstract fun buildObservable(params: Params): Flowable<Result>",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-interactor/is-disposed/",
            "text": "qksms\n / \ninteractor\n / \nInteractor\n / \nisDisposed\n\n\nisDisposed\n\u00b6\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-interactor/is-disposed.md"
        },
        {
            "location": "/qksms/interactor/-interactor/is-disposed/#isdisposed",
            "text": "open fun isDisposed(): Boolean",
            "title": "isDisposed"
        },
        {
            "location": "/qksms/interactor/-send-message/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n\n\nSendMessage\n\u00b6\n\n\nclass SendMessage :\nInteractor\n<\nParams\n,\nUnit\n>\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nParams\n\n\ndata class Params\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nSendMessage(context:\nContext\n, prefs:\nPreferences\n, messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-send-message/index.md"
        },
        {
            "location": "/qksms/interactor/-send-message/#sendmessage",
            "text": "class SendMessage : Interactor < Params , Unit >",
            "title": "SendMessage"
        },
        {
            "location": "/qksms/interactor/-send-message/#types",
            "text": "Name  Summary      Params  data class Params",
            "title": "Types"
        },
        {
            "location": "/qksms/interactor/-send-message/#constructors",
            "text": "Name  Summary      <init>  SendMessage(context: Context , prefs: Preferences , messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-send-message/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Params ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-send-message/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-send-message/-init-/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nSendMessage(context:\nContext\n, prefs:\nPreferences\n, messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-send-message/-init-.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-init-/#init",
            "text": "SendMessage(context: Context , prefs: Preferences , messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/addresses/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n / \naddresses\n\n\naddresses\n\u00b6\n\n\nval addresses:\nList\n<\nString\n>",
            "title": "&nbsp;qksms/interactor/-send-message/-params/addresses.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/addresses/#addresses",
            "text": "val addresses: List < String >",
            "title": "addresses"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n\n\nParams\n\u00b6\n\n\ndata class Params\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nParams(threadId:\nLong\n, addresses:\nList\n<\nString\n>, body:\nString\n, attachments:\nList\n<\nUri\n> = listOf())\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\naddresses\n\n\nval addresses:\nList\n<\nString\n>\n\n\n\n\n\n\nattachments\n\n\nval attachments:\nList\n<\nUri\n>\n\n\n\n\n\n\nbody\n\n\nval body:\nString\n\n\n\n\n\n\nthreadId\n\n\nval threadId:\nLong",
            "title": "&nbsp;qksms/interactor/-send-message/-params/index.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/#params",
            "text": "data class Params",
            "title": "Params"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/#constructors",
            "text": "Name  Summary      <init>  Params(threadId: Long , addresses: List < String >, body: String , attachments: List < Uri > = listOf())",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/#properties",
            "text": "Name  Summary      addresses  val addresses: List < String >    attachments  val attachments: List < Uri >    body  val body: String    threadId  val threadId: Long",
            "title": "Properties"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/body/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n / \nbody\n\n\nbody\n\u00b6\n\n\nval body:\nString",
            "title": "&nbsp;qksms/interactor/-send-message/-params/body.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/body/#body",
            "text": "val body: String",
            "title": "body"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/attachments/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n / \nattachments\n\n\nattachments\n\u00b6\n\n\nval attachments:\nList\n<\nUri\n>",
            "title": "&nbsp;qksms/interactor/-send-message/-params/attachments.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/attachments/#attachments",
            "text": "val attachments: List < Uri >",
            "title": "attachments"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/-init-/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nParams(threadId:\nLong\n, addresses:\nList\n<\nString\n>, body:\nString\n, attachments:\nList\n<\nUri\n> = listOf())",
            "title": "&nbsp;qksms/interactor/-send-message/-params/-init-.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/-init-/#init",
            "text": "Params(threadId: Long , addresses: List < String >, body: String , attachments: List < Uri > = listOf())",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/thread-id/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nParams\n / \nthreadId\n\n\nthreadId\n\u00b6\n\n\nval threadId:\nLong",
            "title": "&nbsp;qksms/interactor/-send-message/-params/thread-id.md"
        },
        {
            "location": "/qksms/interactor/-send-message/-params/thread-id/#threadid",
            "text": "val threadId: Long",
            "title": "threadId"
        },
        {
            "location": "/qksms/interactor/-send-message/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nSendMessage\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-send-message/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-send-message/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Params ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n\n\nMarkDeliveryFailed\n\u00b6\n\n\nclass MarkDeliveryFailed :\nInteractor\n<\nParams\n,\nAny\n>\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nParams\n\n\ndata class Params\n\n\n\n\n\n\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkDeliveryFailed(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nAny\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/#markdeliveryfailed",
            "text": "class MarkDeliveryFailed : Interactor < Params , Any >",
            "title": "MarkDeliveryFailed"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/#types",
            "text": "Name  Summary      Params  data class Params",
            "title": "Types"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/#constructors",
            "text": "Name  Summary      <init>  MarkDeliveryFailed(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Params ): Flowable< Any >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkDeliveryFailed(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-init-/#init",
            "text": "MarkDeliveryFailed(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/result-code/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \nParams\n / \nresultCode\n\n\nresultCode\n\u00b6\n\n\nval resultCode:\nInt",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/-params/result-code.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/result-code/#resultcode",
            "text": "val resultCode: Int",
            "title": "resultCode"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \nParams\n\n\nParams\n\u00b6\n\n\ndata class Params\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nParams(id:\nLong\n, resultCode:\nInt\n)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nid\n\n\nval id:\nLong\n\n\n\n\n\n\nresultCode\n\n\nval resultCode:\nInt",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/-params/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/#params",
            "text": "data class Params",
            "title": "Params"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/#constructors",
            "text": "Name  Summary      <init>  Params(id: Long , resultCode: Int )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/#properties",
            "text": "Name  Summary      id  val id: Long    resultCode  val resultCode: Int",
            "title": "Properties"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \nParams\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nParams(id:\nLong\n, resultCode:\nInt\n)",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/-params/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/-init-/#init",
            "text": "Params(id: Long , resultCode: Int )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/id/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \nParams\n / \nid\n\n\nid\n\u00b6\n\n\nval id:\nLong",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/-params/id.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/-params/id/#id",
            "text": "val id: Long",
            "title": "id"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkDeliveryFailed\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nParams\n): Flowable<\nAny\n>",
            "title": "&nbsp;qksms/interactor/-mark-delivery-failed/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivery-failed/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Params ): Flowable< Any >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/",
            "text": "qksms\n / \ninteractor\n / \nDeleteConversation\n\n\nDeleteConversation\n\u00b6\n\n\nclass DeleteConversation :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nDeleteConversation(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-delete-conversation/index.md"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/#deleteconversation",
            "text": "class DeleteConversation : Interactor < Long , Unit >",
            "title": "DeleteConversation"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/#constructors",
            "text": "Name  Summary      <init>  DeleteConversation(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/-init-/",
            "text": "qksms\n / \ninteractor\n / \nDeleteConversation\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nDeleteConversation(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-delete-conversation/-init-.md"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/-init-/#init",
            "text": "DeleteConversation(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nDeleteConversation\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-delete-conversation/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-delete-conversation/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-read/",
            "text": "qksms\n / \ninteractor\n / \nMarkRead\n\n\nMarkRead\n\u00b6\n\n\nclass MarkRead :\nInteractor\n<\nLong\n,\nUnit\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkRead(messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-read/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-read/#markread",
            "text": "class MarkRead : Interactor < Long , Unit >",
            "title": "MarkRead"
        },
        {
            "location": "/qksms/interactor/-mark-read/#constructors",
            "text": "Name  Summary      <init>  MarkRead(messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-read/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-read/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-read/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkRead\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkRead(messageRepo:\nMessageRepository\n, notificationManager:\nNotificationManager\n)",
            "title": "&nbsp;qksms/interactor/-mark-read/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-read/-init-/#init",
            "text": "MarkRead(messageRepo: MessageRepository , notificationManager: NotificationManager )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-read/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkRead\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nUnit\n>",
            "title": "&nbsp;qksms/interactor/-mark-read/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-read/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Unit >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-delete-message/",
            "text": "qksms\n / \ninteractor\n / \nDeleteMessage\n\n\nDeleteMessage\n\u00b6\n\n\nclass DeleteMessage :\nInteractor\n<\nLong\n,\nLong\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nDeleteMessage(messageRepository:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nLong\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-delete-message/index.md"
        },
        {
            "location": "/qksms/interactor/-delete-message/#deletemessage",
            "text": "class DeleteMessage : Interactor < Long , Long >",
            "title": "DeleteMessage"
        },
        {
            "location": "/qksms/interactor/-delete-message/#constructors",
            "text": "Name  Summary      <init>  DeleteMessage(messageRepository: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-delete-message/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Long >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-delete-message/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-delete-message/-init-/",
            "text": "qksms\n / \ninteractor\n / \nDeleteMessage\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nDeleteMessage(messageRepository:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-delete-message/-init-.md"
        },
        {
            "location": "/qksms/interactor/-delete-message/-init-/#init",
            "text": "DeleteMessage(messageRepository: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-delete-message/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nDeleteMessage\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nLong\n>",
            "title": "&nbsp;qksms/interactor/-delete-message/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-delete-message/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Long >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/",
            "text": "qksms\n / \ninteractor\n / \nMarkDelivered\n\n\nMarkDelivered\n\u00b6\n\n\nclass MarkDelivered :\nInteractor\n<\nLong\n,\nAny\n>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nMarkDelivered(messageRepo:\nMessageRepository\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nAny\n>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-mark-delivered/index.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/#markdelivered",
            "text": "class MarkDelivered : Interactor < Long , Any >",
            "title": "MarkDelivered"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/#constructors",
            "text": "Name  Summary      <init>  MarkDelivered(messageRepo: MessageRepository )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/#functions",
            "text": "Name  Summary      buildObservable  fun buildObservable(params: Long ): Flowable< Any >",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/-init-/",
            "text": "qksms\n / \ninteractor\n / \nMarkDelivered\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nMarkDelivered(messageRepo:\nMessageRepository\n)",
            "title": "&nbsp;qksms/interactor/-mark-delivered/-init-.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/-init-/#init",
            "text": "MarkDelivered(messageRepo: MessageRepository )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nMarkDelivered\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nfun buildObservable(params:\nLong\n): Flowable<\nAny\n>",
            "title": "&nbsp;qksms/interactor/-mark-delivered/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-mark-delivered/build-observable/#buildobservable",
            "text": "fun buildObservable(params: Long ): Flowable< Any >",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/interactor/-contact-sync/",
            "text": "qksms\n / \ninteractor\n / \nContactSync\n\n\nContactSync\n\u00b6\n\n\nopen class ContactSync :\nInteractor\n<\nUnit\n,\nList\n<\nContact\n>>\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nContactSync(context:\nContext\n, cursorToContact:\nCursorToContact\n)\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbuildObservable\n\n\nopen fun buildObservable(params:\nUnit\n): Flowable<\nList\n<\nContact\n>>\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndispose\n\n\nopen fun dispose():\nUnit\n\n\n\n\n\n\nisDisposed\n\n\nopen fun isDisposed():\nBoolean",
            "title": "&nbsp;qksms/interactor/-contact-sync/index.md"
        },
        {
            "location": "/qksms/interactor/-contact-sync/#contactsync",
            "text": "open class ContactSync : Interactor < Unit , List < Contact >>",
            "title": "ContactSync"
        },
        {
            "location": "/qksms/interactor/-contact-sync/#constructors",
            "text": "Name  Summary      <init>  ContactSync(context: Context , cursorToContact: CursorToContact )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/interactor/-contact-sync/#functions",
            "text": "Name  Summary      buildObservable  open fun buildObservable(params: Unit ): Flowable< List < Contact >>",
            "title": "Functions"
        },
        {
            "location": "/qksms/interactor/-contact-sync/#inherited-functions",
            "text": "Name  Summary      dispose  open fun dispose(): Unit    isDisposed  open fun isDisposed(): Boolean",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/interactor/-contact-sync/-init-/",
            "text": "qksms\n / \ninteractor\n / \nContactSync\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nContactSync(context:\nContext\n, cursorToContact:\nCursorToContact\n)",
            "title": "&nbsp;qksms/interactor/-contact-sync/-init-.md"
        },
        {
            "location": "/qksms/interactor/-contact-sync/-init-/#init",
            "text": "ContactSync(context: Context , cursorToContact: CursorToContact )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/interactor/-contact-sync/build-observable/",
            "text": "qksms\n / \ninteractor\n / \nContactSync\n / \nbuildObservable\n\n\nbuildObservable\n\u00b6\n\n\nopen fun buildObservable(params:\nUnit\n): Flowable<\nList\n<\nContact\n>>",
            "title": "&nbsp;qksms/interactor/-contact-sync/build-observable.md"
        },
        {
            "location": "/qksms/interactor/-contact-sync/build-observable/#buildobservable",
            "text": "open fun buildObservable(params: Unit ): Flowable< List < Contact >>",
            "title": "buildObservable"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-create-options-menu/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nonCreateOptionsMenu\n\n\nonCreateOptionsMenu\n\u00b6\n\n\nopen fun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/on-create-options-menu.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-create-options-menu/#oncreateoptionsmenu",
            "text": "open fun onCreateOptionsMenu(menu: Menu ?): Boolean",
            "title": "onCreateOptionsMenu"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/set-title/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nsetTitle\n\n\nsetTitle\n\u00b6\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/set-title.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/set-title/#settitle",
            "text": "open fun setTitle(title: CharSequence ?): Unit",
            "title": "setTitle"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/view-model-class/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nviewModelClass\n\n\nviewModelClass\n\u00b6\n\n\nprotected abstract val viewModelClass:\nKClass\n<VM>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/view-model-class.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/view-model-class/#viewmodelclass",
            "text": "protected abstract val viewModelClass: KClass <VM>",
            "title": "viewModelClass"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/view-model/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nviewModel\n\n\nviewModel\n\u00b6\n\n\nprotected val viewModel: VM",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/view-model.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/view-model/#viewmodel",
            "text": "protected val viewModel: VM",
            "title": "viewModel"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-post-create/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nonPostCreate\n\n\nonPostCreate\n\u00b6\n\n\nprotected open fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/on-post-create.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-post-create/#onpostcreate",
            "text": "protected open fun onPostCreate(savedInstanceState: Bundle ?): Unit",
            "title": "onPostCreate"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/menu/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nmenu\n\n\nmenu\n\u00b6\n\n\nprotected val menu: Subject<\nMenu\n>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/menu.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/menu/#menu",
            "text": "protected val menu: Subject< Menu >",
            "title": "menu"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n\n\nQkActivity\n\u00b6\n\n\nabstract class QkActivity<VM :\nQkViewModel\n<*, *>> : AppCompatActivity\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkActivity()\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ncolors\n\n\nlateinit var colors:\nColors\n\n\n\n\n\n\nmenu\n\n\nval menu: Subject<\nMenu\n>\n\n\n\n\n\n\nviewModel\n\n\nval viewModel: VM\n\n\n\n\n\n\nviewModelClass\n\n\nabstract val viewModelClass:\nKClass\n<VM>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonCreate\n\n\nopen fun onCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nonCreateOptionsMenu\n\n\nopen fun onCreateOptionsMenu(menu:\nMenu\n?):\nBoolean\n\n\n\n\n\n\nonOptionsItemSelected\n\n\nopen fun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean\n\n\n\n\n\n\nonPostCreate\n\n\nopen fun onPostCreate(savedInstanceState:\nBundle\n?):\nUnit\n\n\n\n\n\n\nsetContentView\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit\n\n\n\n\n\n\nsetTitle\n\n\nopen fun setTitle(title:\nCharSequence\n?):\nUnit\n\n\n\n\n\n\n\n\nExtension Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetColorCompat\n\n\nfun\nContext\n.getColorCompat(colorRes:\nInt\n):\nInt\n\n\n\n\n\n\nmakeToast\n\n\nfun\nContext\n.makeToast(res:\nInt\n, duration:\nInt\n= Toast.LENGTH_SHORT):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nComposeActivity\n\n\nclass ComposeActivity : QkActivity<\nComposeViewModel\n>,\nComposeView\n\n\n\n\n\n\nMainActivity\n\n\nclass MainActivity : QkActivity<\nMainViewModel\n>,\nMainView\n\n\n\n\n\n\nSettingsActivity\n\n\nclass SettingsActivity : QkActivity<\nSettingsViewModel\n>,\nSettingsView\n\n\n\n\n\n\nSetupActivity\n\n\nclass SetupActivity : QkActivity<\nSetupViewModel\n>,\nSetupView",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#qkactivity",
            "text": "abstract class QkActivity<VM : QkViewModel <*, *>> : AppCompatActivity",
            "title": "QkActivity"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#constructors",
            "text": "Name  Summary      <init>  QkActivity()",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#properties",
            "text": "Name  Summary      colors  lateinit var colors: Colors    menu  val menu: Subject< Menu >    viewModel  val viewModel: VM    viewModelClass  abstract val viewModelClass: KClass <VM>",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#functions",
            "text": "Name  Summary      onCreate  open fun onCreate(savedInstanceState: Bundle ?): Unit    onCreateOptionsMenu  open fun onCreateOptionsMenu(menu: Menu ?): Boolean    onOptionsItemSelected  open fun onOptionsItemSelected(item: MenuItem ): Boolean    onPostCreate  open fun onPostCreate(savedInstanceState: Bundle ?): Unit    setContentView  open fun setContentView(layoutResID: Int ): Unit    setTitle  open fun setTitle(title: CharSequence ?): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#extension-functions",
            "text": "Name  Summary      getColorCompat  fun Context .getColorCompat(colorRes: Int ): Int    makeToast  fun Context .makeToast(res: Int , duration: Int = Toast.LENGTH_SHORT): Unit",
            "title": "Extension Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/#inheritors",
            "text": "Name  Summary      ComposeActivity  class ComposeActivity : QkActivity< ComposeViewModel >, ComposeView    MainActivity  class MainActivity : QkActivity< MainViewModel >, MainView    SettingsActivity  class SettingsActivity : QkActivity< SettingsViewModel >, SettingsView    SetupActivity  class SetupActivity : QkActivity< SetupViewModel >, SetupView",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-options-item-selected/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nonOptionsItemSelected\n\n\nonOptionsItemSelected\n\u00b6\n\n\nopen fun onOptionsItemSelected(item:\nMenuItem\n):\nBoolean",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/on-options-item-selected.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-options-item-selected/#onoptionsitemselected",
            "text": "open fun onOptionsItemSelected(item: MenuItem ): Boolean",
            "title": "onOptionsItemSelected"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/colors/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \ncolors\n\n\ncolors\n\u00b6\n\n\n@Inject lateinit var colors:\nColors",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/colors.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/colors/#colors",
            "text": "@Inject lateinit var colors: Colors",
            "title": "colors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/-init-/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkActivity()",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/-init-/#init",
            "text": "QkActivity()",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/set-content-view/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nsetContentView\n\n\nsetContentView\n\u00b6\n\n\nopen fun setContentView(layoutResID:\nInt\n):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/set-content-view.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/set-content-view/#setcontentview",
            "text": "open fun setContentView(layoutResID: Int ): Unit",
            "title": "setContentView"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-create/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkActivity\n / \nonCreate\n\n\nonCreate\n\u00b6\n\n\nprotected open fun onCreate(savedInstanceState:\nBundle\n?):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-activity/on-create.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-activity/on-create/#oncreate",
            "text": "protected open fun onCreate(savedInstanceState: Bundle ?): Unit",
            "title": "onCreate"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/on-attached-to-recycler-view/",
            "text": "qksms\n / \npresentation.common.base\n / \nFlowableAdapter\n / \nonAttachedToRecyclerView\n\n\nonAttachedToRecyclerView\n\u00b6\n\n\n@CallSuper open fun onAttachedToRecyclerView(recyclerView: RecyclerView):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-flowable-adapter/on-attached-to-recycler-view.md"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/on-attached-to-recycler-view/#onattachedtorecyclerview",
            "text": "@CallSuper open fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "onAttachedToRecyclerView"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/",
            "text": "qksms\n / \npresentation.common.base\n / \nFlowableAdapter\n\n\nFlowableAdapter\n\u00b6\n\n\nabstract class FlowableAdapter<T> :\nQkAdapter\n<T>\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nFlowableAdapter()\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nflowable\n\n\nvar flowable: Flowable<\nList\n<T>>?\n\n\n\n\n\n\n\n\nInherited Properties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nonAttachedToRecyclerView\n\n\nopen fun onAttachedToRecyclerView(recyclerView: RecyclerView):\nUnit\n\n\n\n\n\n\nonDetachedFromRecyclerView\n\n\nopen fun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit\n\n\n\n\n\n\n\n\nInherited Functions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nConversationsAdapter\n\n\nclass ConversationsAdapter : FlowableAdapter<\nInboxItem\n>",
            "title": "&nbsp;qksms/presentation.common.base/-flowable-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#flowableadapter",
            "text": "abstract class FlowableAdapter<T> : QkAdapter <T>  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "FlowableAdapter"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#constructors",
            "text": "Name  Summary      <init>  FlowableAdapter() Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#properties",
            "text": "Name  Summary      flowable  var flowable: Flowable< List <T>>?",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#inherited-properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Inherited Properties"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#functions",
            "text": "Name  Summary      onAttachedToRecyclerView  open fun onAttachedToRecyclerView(recyclerView: RecyclerView): Unit    onDetachedFromRecyclerView  open fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#inherited-functions",
            "text": "Name  Summary      getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Inherited Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/#inheritors",
            "text": "Name  Summary      ConversationsAdapter  class ConversationsAdapter : FlowableAdapter< InboxItem >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/-init-/",
            "text": "qksms\n / \npresentation.common.base\n / \nFlowableAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nFlowableAdapter()\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "&nbsp;qksms/presentation.common.base/-flowable-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/-init-/#init",
            "text": "FlowableAdapter()  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/on-detached-from-recycler-view/",
            "text": "qksms\n / \npresentation.common.base\n / \nFlowableAdapter\n / \nonDetachedFromRecyclerView\n\n\nonDetachedFromRecyclerView\n\u00b6\n\n\n@CallSuper open fun onDetachedFromRecyclerView(recyclerView: RecyclerView):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-flowable-adapter/on-detached-from-recycler-view.md"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/on-detached-from-recycler-view/#ondetachedfromrecyclerview",
            "text": "@CallSuper open fun onDetachedFromRecyclerView(recyclerView: RecyclerView): Unit",
            "title": "onDetachedFromRecyclerView"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/flowable/",
            "text": "qksms\n / \npresentation.common.base\n / \nFlowableAdapter\n / \nflowable\n\n\nflowable\n\u00b6\n\n\nvar flowable: Flowable<\nList\n<T>>?",
            "title": "&nbsp;qksms/presentation.common.base/-flowable-adapter/flowable.md"
        },
        {
            "location": "/qksms/presentation.common.base/-flowable-adapter/flowable/#flowable",
            "text": "var flowable: Flowable< List <T>>?",
            "title": "flowable"
        },
        {
            "location": "/qksms/presentation.common.base/",
            "text": "qksms\n / \npresentation.common.base\n\n\nPackage presentation.common.base\n\u00b6\n\n\nTypes\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nFlowableAdapter\n\n\nabstract class FlowableAdapter<T> :\nQkAdapter\n<T>\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\nQkActivity\n\n\nabstract class QkActivity<VM :\nQkViewModel\n<*, *>> : AppCompatActivity\n\n\n\n\n\n\nQkAdapter\n\n\nabstract class QkAdapter<T> : Adapter<\nQkViewHolder\n>\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\nQkView\n\n\ninterface QkView<in State> : LifecycleOwner\n\n\n\n\n\n\nQkViewHolder\n\n\nclass QkViewHolder : ViewHolder\n\n\n\n\n\n\nQkViewModel\n\n\nabstract class QkViewModel<in View :\nQkView\n<State>, State> : ViewModel",
            "title": "&nbsp;qksms/presentation.common.base/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/#package-presentationcommonbase",
            "text": "",
            "title": "Package presentation.common.base"
        },
        {
            "location": "/qksms/presentation.common.base/#types",
            "text": "Name  Summary      FlowableAdapter  abstract class FlowableAdapter<T> : QkAdapter <T> Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations    QkActivity  abstract class QkActivity<VM : QkViewModel <*, *>> : AppCompatActivity    QkAdapter  abstract class QkAdapter<T> : Adapter< QkViewHolder > Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations    QkView  interface QkView<in State> : LifecycleOwner    QkViewHolder  class QkViewHolder : ViewHolder    QkViewModel  abstract class QkViewModel<in View : QkView <State>, State> : ViewModel",
            "title": "Types"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/state/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \nstate\n\n\nstate\n\u00b6\n\n\nprotected val state: BehaviorSubject<State>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/state.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/state/#state",
            "text": "protected val state: BehaviorSubject<State>",
            "title": "state"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n\n\nQkViewModel\n\u00b6\n\n\nabstract class QkViewModel<in View :\nQkView\n<State>, State> : ViewModel\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkViewModel(initialState: State)\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndisposables\n\n\nval disposables: CompositeDisposable\n\n\n\n\n\n\nstate\n\n\nval state: BehaviorSubject<State>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nbindView\n\n\nopen fun bindView(view: View):\nUnit\n\n\n\n\n\n\nnewState\n\n\nfun newState(reducer: (State) -> State):\nUnit\n\n\n\n\n\n\nonCleared\n\n\nopen fun onCleared():\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nComposeViewModel\n\n\nclass ComposeViewModel : QkViewModel<\nComposeView\n,\nComposeState\n>\n\n\n\n\n\n\nMainViewModel\n\n\nclass MainViewModel : QkViewModel<\nMainView\n,\nMainState\n>\n\n\n\n\n\n\nSettingsViewModel\n\n\nclass SettingsViewModel : QkViewModel<\nSettingsView\n,\nSettingsState\n>\n\n\n\n\n\n\nSetupViewModel\n\n\nclass SetupViewModel : QkViewModel<\nSetupView\n,\nSetupState\n>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/#qkviewmodel",
            "text": "abstract class QkViewModel<in View : QkView <State>, State> : ViewModel",
            "title": "QkViewModel"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/#constructors",
            "text": "Name  Summary      <init>  QkViewModel(initialState: State)",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/#properties",
            "text": "Name  Summary      disposables  val disposables: CompositeDisposable    state  val state: BehaviorSubject<State>",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/#functions",
            "text": "Name  Summary      bindView  open fun bindView(view: View): Unit    newState  fun newState(reducer: (State) -> State): Unit    onCleared  open fun onCleared(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/#inheritors",
            "text": "Name  Summary      ComposeViewModel  class ComposeViewModel : QkViewModel< ComposeView , ComposeState >    MainViewModel  class MainViewModel : QkViewModel< MainView , MainState >    SettingsViewModel  class SettingsViewModel : QkViewModel< SettingsView , SettingsState >    SetupViewModel  class SetupViewModel : QkViewModel< SetupView , SetupState >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/on-cleared/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \nonCleared\n\n\nonCleared\n\u00b6\n\n\nprotected open fun onCleared():\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/on-cleared.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/on-cleared/#oncleared",
            "text": "protected open fun onCleared(): Unit",
            "title": "onCleared"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/-init-/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkViewModel(initialState: State)",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/-init-/#init",
            "text": "QkViewModel(initialState: State)",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/disposables/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \ndisposables\n\n\ndisposables\n\u00b6\n\n\nprotected val disposables: CompositeDisposable",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/disposables.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/disposables/#disposables",
            "text": "protected val disposables: CompositeDisposable",
            "title": "disposables"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/new-state/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \nnewState\n\n\nnewState\n\u00b6\n\n\nprotected fun newState(reducer: (State) -> State):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/new-state.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/new-state/#newstate",
            "text": "protected fun newState(reducer: (State) -> State): Unit",
            "title": "newState"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/bind-view/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewModel\n / \nbindView\n\n\nbindView\n\u00b6\n\n\n@CallSuper open fun bindView(view: View):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-model/bind-view.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-model/bind-view/#bindview",
            "text": "@CallSuper open fun bindView(view: View): Unit",
            "title": "bindView"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-holder/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewHolder\n\n\nQkViewHolder\n\u00b6\n\n\nclass QkViewHolder : ViewHolder\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkViewHolder(view:\nView\n)",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-holder/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-holder/#qkviewholder",
            "text": "class QkViewHolder : ViewHolder",
            "title": "QkViewHolder"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-holder/#constructors",
            "text": "Name  Summary      <init>  QkViewHolder(view: View )",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-holder/-init-/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkViewHolder\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkViewHolder(view:\nView\n)",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view-holder/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view-holder/-init-/#init",
            "text": "QkViewHolder(view: View )",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/render/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkView\n / \nrender\n\n\nrender\n\u00b6\n\n\nabstract fun render(state: State):\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view/render.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/render/#render",
            "text": "abstract fun render(state: State): Unit",
            "title": "render"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkView\n\n\nQkView\n\u00b6\n\n\ninterface QkView<in State> : LifecycleOwner\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nrender\n\n\nabstract fun render(state: State):\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nComposeView\n\n\ninterface ComposeView : QkView<\nComposeState\n>\n\n\n\n\n\n\nMainView\n\n\ninterface MainView : QkView<\nMainState\n>\n\n\n\n\n\n\nSettingsView\n\n\ninterface SettingsView : QkView<\nSettingsState\n>\n\n\n\n\n\n\nSetupView\n\n\ninterface SetupView : QkView<\nSetupState\n>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-view/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/#qkview",
            "text": "interface QkView<in State> : LifecycleOwner",
            "title": "QkView"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/#functions",
            "text": "Name  Summary      render  abstract fun render(state: State): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-view/#inheritors",
            "text": "Name  Summary      ComposeView  interface ComposeView : QkView< ComposeState >    MainView  interface MainView : QkView< MainState >    SettingsView  interface SettingsView : QkView< SettingsState >    SetupView  interface SetupView : QkView< SetupState >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n\n\nQkAdapter\n\u00b6\n\n\nabstract class QkAdapter<T> : Adapter<\nQkViewHolder\n>\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations\n\n\nConstructors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\n<init>\n\n\nQkAdapter()\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\n\n\nProperties\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nvar data:\nList\n<T>\n\n\n\n\n\n\n\n\nFunctions\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nareContentsTheSame\n\n\nopen fun areContentsTheSame(old: T, new: T):\nBoolean\n\n\n\n\n\n\nareItemsTheSame\n\n\nopen fun areItemsTheSame(old: T, new: T):\nBoolean\n\n\n\n\n\n\ngetItem\n\n\nfun getItem(position:\nInt\n): T\n\n\n\n\n\n\ngetItemCount\n\n\nopen fun getItemCount():\nInt\n\n\n\n\n\n\nonDatasetChanged\n\n\nopen fun onDatasetChanged():\nUnit\n\n\n\n\n\n\n\n\nInheritors\n\u00b6\n\n\n\n\n\n\n\n\nName\n\n\nSummary\n\n\n\n\n\n\n\n\n\n\nAttachmentAdapter\n\n\nclass AttachmentAdapter : QkAdapter<\nUri\n>\n\n\n\n\n\n\nChipsAdapter\n\n\nclass ChipsAdapter : QkAdapter<\nContact\n>\n\n\n\n\n\n\nContactAdapter\n\n\nclass ContactAdapter : QkAdapter<\nContact\n>\n\n\n\n\n\n\nFlowableAdapter\n\n\nabstract class FlowableAdapter<T> : QkAdapter<T>\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations\n\n\n\n\n\n\nMenuItemAdapter\n\n\nclass MenuItemAdapter : QkAdapter<\nMenuItem\n>\n\n\n\n\n\n\nThemeAdapter\n\n\nclass ThemeAdapter : QkAdapter<\nInt\n>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/index.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/#qkadapter",
            "text": "abstract class QkAdapter<T> : Adapter< QkViewHolder >  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "QkAdapter"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/#constructors",
            "text": "Name  Summary      <init>  QkAdapter() Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations",
            "title": "Constructors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/#properties",
            "text": "Name  Summary      data  var data: List <T>",
            "title": "Properties"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/#functions",
            "text": "Name  Summary      areContentsTheSame  open fun areContentsTheSame(old: T, new: T): Boolean    areItemsTheSame  open fun areItemsTheSame(old: T, new: T): Boolean    getItem  fun getItem(position: Int ): T    getItemCount  open fun getItemCount(): Int    onDatasetChanged  open fun onDatasetChanged(): Unit",
            "title": "Functions"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/#inheritors",
            "text": "Name  Summary      AttachmentAdapter  class AttachmentAdapter : QkAdapter< Uri >    ChipsAdapter  class ChipsAdapter : QkAdapter< Contact >    ContactAdapter  class ContactAdapter : QkAdapter< Contact >    FlowableAdapter  abstract class FlowableAdapter<T> : QkAdapter<T> Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as data list handing and item animations    MenuItemAdapter  class MenuItemAdapter : QkAdapter< MenuItem >    ThemeAdapter  class ThemeAdapter : QkAdapter< Int >",
            "title": "Inheritors"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/are-items-the-same/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \nareItemsTheSame\n\n\nareItemsTheSame\n\u00b6\n\n\nprotected open fun areItemsTheSame(old: T, new: T):\nBoolean",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/are-items-the-same.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/are-items-the-same/#areitemsthesame",
            "text": "protected open fun areItemsTheSame(old: T, new: T): Boolean",
            "title": "areItemsTheSame"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/data/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \ndata\n\n\ndata\n\u00b6\n\n\nvar data:\nList\n<T>",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/data.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/data/#data",
            "text": "var data: List <T>",
            "title": "data"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/-init-/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \n<init>\n\n\n<init>\n\u00b6\n\n\nQkAdapter()\n\n\nBase RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/-init-.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/-init-/#init",
            "text": "QkAdapter()  Base RecyclerView.Adapter that provides some convenience when creating a new Adapter, such as\ndata list handing and item animations",
            "title": "&lt;init&gt;"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/get-item-count/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \ngetItemCount\n\n\ngetItemCount\n\u00b6\n\n\nopen fun getItemCount():\nInt",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/get-item-count.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/get-item-count/#getitemcount",
            "text": "open fun getItemCount(): Int",
            "title": "getItemCount"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/are-contents-the-same/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \nareContentsTheSame\n\n\nareContentsTheSame\n\u00b6\n\n\nprotected open fun areContentsTheSame(old: T, new: T):\nBoolean",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/are-contents-the-same.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/are-contents-the-same/#arecontentsthesame",
            "text": "protected open fun areContentsTheSame(old: T, new: T): Boolean",
            "title": "areContentsTheSame"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/get-item/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \ngetItem\n\n\ngetItem\n\u00b6\n\n\nfun getItem(position:\nInt\n): T",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/get-item.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/get-item/#getitem",
            "text": "fun getItem(position: Int ): T",
            "title": "getItem"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/on-dataset-changed/",
            "text": "qksms\n / \npresentation.common.base\n / \nQkAdapter\n / \nonDatasetChanged\n\n\nonDatasetChanged\n\u00b6\n\n\nopen fun onDatasetChanged():\nUnit",
            "title": "&nbsp;qksms/presentation.common.base/-qk-adapter/on-dataset-changed.md"
        },
        {
            "location": "/qksms/presentation.common.base/-qk-adapter/on-dataset-changed/#ondatasetchanged",
            "text": "open fun onDatasetChanged(): Unit",
            "title": "onDatasetChanged"
        }
    ]
}